%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: potion_type_8.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.0%AI9_PrintingDataBegin%%For: ahninniah@gmail.com
%%CreationDate: 12/3/2014
%%BoundingBox: 0 0 1174 926
%%HiResBoundingBox: 0 0 1173.7129 925.0674
%AI3_Cropmarks: 36.0000 97.0674 648.0000 889.0674
%%CropBox: 0 0 1173.7129 925.0674
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.0 x198 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 104 8
%%BeginData: 10668 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD2FFFA85A7EFD1DFF5E5EAE
%FD1DFFC2C9FD1DFFC39AFD1EFFA884537EA8FD1BFFA8395E83A8FD1AFFCF
%C9C2C3CAFD1BFFCA93C3A1FD1DFF5AA8FFFF7EA9FD19FF835EFFFFAE64FD
%1AFFC1CAFFFFC2CFFD19FFCA93FFFFFF93FD1CFF7E2FA8A953FD1AFFAE39
%5EAE835EFD1AFFC9BBCFCAC2CAFD19FFCABC93FFA1BCFD1DFFA8AF2954FD
%1CFF8389168AFD1CFFCAC1C1FD1CFFCAA1B5C3FD13FFCAA7CAFD08FF532F
%A8FD11FFA8CAA7FD08FFAE105EFD12FFA8CAA8FD08FFC9BACAFD12FFA7CA
%CAFD08FF9393FD13FFA06E756EA7FD08FF7EFD12FF756E756EFD08FFAE83
%FD11FF7C756E757CFD08FFC9FD12FF6E756E75FD08FFCACAFD13FF7C744A
%4A7DFD06FFAF858B85FD11FF4A6E4A75FD06FFAFAF85AF85FD10FFA84A4A
%4A7DFD06FFA9AF85AFA9FD10FF754A4A4AFD07FF858585AFFD11FFAFA94A
%4B4BAFAFFD04FFAFA98561AFAFFD0FFFAF7D264B7DAFFD04FFAFAF858585
%AFAFFD0FFFA94B2651A9AFFD04FFAFAF858585AFAFFD0EFFAF7D4A267DAF
%FD05FFAFAF858585AFFD10FFAFA97D7D8485FD05FFA9AF85AF858BFD0FFF
%AFA87D7D8585FD05FF85AF85AF85AFFD0EFFA9AF7D7D7D8BAFFD04FFAFA9
%AF85AF85FD0FFF85AF7D7D7EAFFD05FFAFA9AF858585FD11FF85858B8585
%FD06FF61FD0485FD0FFFAF85858B61AFFD05FFAFFD0485AFFD0FFF618585
%8B61FD06FF8B8585858BFD0FFFAF61FD0485FD05FFA985858561AFFD10FF
%AF376137615BFD05FF856137613761FD0FFF853761376185FD05FF616137
%61378BFD0EFFA96137613761AFFD04FFAF3761376137FD0FFF8561376137
%85FD05FF853761376185FD10FF7EA9FD057FFFFFFFA985A9FD047F85FD0D
%FF8989643F3F394083FFFFFF5F89393F3F3F39AEFD0DFFC9CACDC8C8C8C9
%FD04FFA7CFC8CDC8C8A6FD0DFFA1C9C2C2BBC199A8FFFFFFCAC9C3BBC2BB
%C2A1FD0EFFA97F7E7F7E7F545AAFFFFF7E7EA9787F7E7F53FD0DFF39AE5E
%3F393F1639FFFFFF39AE64173F39395EFD0DFFA0CFA6C8C8C89FFFFFFFA9
%C9C9C8A6C8C8C2A9FD0CFF99C3C2FD04BB75FFFFFF6FCFC2FD04BB99FD0F
%FF28545453295A2FFFFFFFA92F295429535353FD0DFF3A1639163916395E
%FFFFFF3339163916391689FD0DFFBBBBC2BBC1C1BBFD04FF99C1C1C1BBC2
%99FD0DFFA19393B593B5939AFFFFFF9A93BB93B593BB70FD0EFFA929292F
%542F292FFFFFFFAF282F2954292F29FD0DFF351610391616105FFFFFFF3A
%1016163910105FFD0CFFAF99C1BAC2BAC199AFFFFFA99ABAC1C1C1BA99A9
%FD0CFF7E689392B592934CFFFFFF539392B592B58C77FD0FFF2953295354
%5329FFFFFFAF2F2954295A2954FD0DFF8B10391039393984FFFFFF5F3916
%39163910AFFD0DFF9ABBC1BBC2C19AFD04FF99FD05C19AFD0DFF859393B5
%93BB8C7EFFFFFFAF68B593B5939384FD0FFF54537E292F285AFD04FF2954
%542F29295AFD0DFFA9331639101710AFFFFFFFAF103F16161033A9FD0DFF
%7DC1C8C1BABB76FD04FF7D99C8BAC198A1FD0EFF44BB93938C6F85FFFFFF
%A96F93BB8C9368AFFD0FFF852929542929A9FD04FF852853295328FD0FFF
%34391639103AFD05FF3A1039163934FD0EFFAF93C1BBC193A9FD04FF85BB
%BBC1BBBB85FD0EFF7D68B593936FFD05FF709393B56876FD11FF2F282828
%2FFD05FFA82F2828015AA9FD0DFFA8851010103384FD05FF6033101010AF
%FD0EFFA87D9293929AA8FD05FF7693929376FD0FFF846F44684485FD05FF
%85446844687EFD10FFA8A92F292FA9A8FFFFFFA8A88454285AA8A9FD0DFF
%A8A885113360A9A8FFFFFFA8A835393384A8FD0DFFA8A8847D937D84A9A9
%FFFFFFA8A9769977A9A8FD0DFFA8A85A6F6F7EA8A9FFFFFFA9A8856F6F7E
%A8A8FD0EFFA8A87EA884A87EA8A8FFFFA8A2A87E8584A87EFD0DFFA2A87E
%8584A87EA8FFFFA8A8A2A85AA9A2A8A2FD0CFFA9A2A87E8584A87ECBFFFF
%A8A8A2A85AA8A2A8A8FD0BFFA8A8A2A87E85A2A87EFFFFFF7EA8A2857EA8
%A2A8FD0FFFA8A9A8A8A8A9A8FD04FFA9A8A9A8A8A8FD0FFFA8A9A8A8A8A9
%FD04FFA8A8A8A9A8A8A8FD0EFFA9A8A9A8A8A8FD05FFA8A8A8A9A8A8A8FD
%0DFFCBA8A8A9A8A8A8FD05FFA8A8A8A9A8A8A8FD10FFA8FFA8FFA8FD07FF
%A8FFA8FD11FFA8FFA8FD09FFA8FFA8FD11FFA8FFA8FD07FFA9FFA8FD13FF
%A8FFA8FD07FFA8FFA8FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD33FFCACAFD
%1DFF6060AFFD1CFFCF7BA7FD1DFF855BFD1EFFA8A1699BA2FD1BFF843684
%84A8FD1AFFAE83946FA8FD1BFFAF378585FD1DFF94A1CAFF9BA8FD19FF84
%60A8FFAF60FD1AFF57ADA1FF82AEFD19FFAF37AFFFFF37FD1CFF9B6AA8CA
%70FD1BFF3535A88435FD1AFFA756AEA75DA8FD19FFA96137FF5B61FD1DFF
%CACA699BFD1CFFA9851385FD1CFFAE5D57FD1DFF853785FD13FFCAA8CAFD
%08FF9A94A8FD11FFA8CAA8CFFD08FF0D36FD12FFA7CAA8FD08FF8232AEFD
%12FFA7CAA8FD08FF3737FD13FF9A6E756EA1FD08FF9BFD12FF756E756EFD
%08FFAF84FD11FF7C756E757CFD08FF83FD12FF74756E75FD08FFAFA9FD13
%FF7C6E4A4A83FD05FFAFAF858585FD11FF4B4A4A51AFFD05FFA9AF858585
%FD10FF844A4A4A7DFD06FFA9AF8585A9FD0FFFAF754A4A4AFD07FF858B85
%AFA9FD10FFAFAF4A4B4BAFAFFD04FFAFAF8561AFAFFD0FFFAF844A4B7DAF
%FD05FFAF858585AFAFFD0FFFAF514A75A9FD05FFAFAF858585AFAFFD0EFF
%AF7D4B4A7DAFFD05FFAFAF618585AFFD11FFA97D7D8485FD05FFA9AF85AF
%85AFFD0FFFAFA87D7D8485FD05FF85AF85AF85AFFD0EFFAFAF7D7D7D8BAF
%FD04FFAFA9AF858B85FD0FFF85AF7D7D7EAFFD05FFAFA9AF858585FD11FF
%8585856185FD06FF618B858585FD0FFFA985858561AFFD05FFAF618B8561
%A9FD0FFF6185858561FD06FF85618B6185FD0FFFAF618B856185FD05FFAF
%85858B61AFFD10FFAF3661376136FD05FFA96136613761A9FD0EFF853661
%376161FD05FF616136613785AFFD0DFFA96136613761A9FD04FFAF376136
%6137FD0FFF856136613785A9FFFFFFAF853761366185FD10FF9BC4B6BCB5
%BC9BFFFFFFA2C3C3BCB6BC94A1FD0DFF61858B6767616785FFFFFF60AF8B
%676767618BFD0DFF89AD8882888189FD04FF83AD818882885EFD0DFF858B
%85676167618BFFFFFF858B8B6167616785FD0EFFA9C3A1BCB5B69394FFFF
%FFA19BC393BCB5B66FFD0DFF358B606760673C60FFFFFF60AF8B3C676060
%35FD0DFF82AE8188818257FFFFFFAFADA7888188815DAFFD0CFF5B858B61
%67616136FFFFFF36AF856161673D5BFD0FFF69948D9469944CFFFFFFA870
%699469949370FD0DFF6013361336133C35FFFFFF353636351336365AFD0C
%FFAF57565D565D5757FD04FF2C5D5D5D328133FD0DFF5BFD06375BFFFFFF
%5B373D3737373D5AFD0EFF8570696A6970694CFFFFFFA94570699469704C
%FD0DFF3613133513350D36FFFFFF360C3513360D1336FD0CFFAF2C57325D
%32572DAFFFFFA93332575D573233AFFD0CFF610E3737370E3736FFFFFF36
%370E3737370E5BFD0FFF4C94699494944CFFFFFFAF70699469946977FD0D
%FFAF0D3C13363C355AFFFFFF85353536133C0D85FD0DFF58565D56815757
%FD04FF335D575D5D5D33FD0DFFA9FD0437613761FFFFFFAF303DFD043785
%FD0FFF7769B669946977FD04FF4C94936A697059FD0DFFAF353C3C0D350C
%AFFFFFFFAF0C6136350D35A9FD0DFF59578157325734FD04FF5956823257
%2C59FD0EFF30613737153785FFFFFFAF313D6137370EAFFD0FFF84706994
%6970AFFD04FF854594697045FD0FFF363513350D35FD05FF360C3613350D
%FD0EFFAF2C5756572CAFFD04FF8533325D322D85FD0EFF5B3037373730FD
%05FFFD04373037FD10FFCB4C4645454DFD05FFA84C2146455AA8FD0EFFA9
%FD040C5AFD05FF840D060C0C85A8FD0DFFA859262C2C58A8FD05FF342C2C
%2C34FD0FFF843008300E85A8FFFFFFA8A90E30083084FD10FFA8A94D7153
%A9A8FFFFFFA8A884774C7EA8A9FD0DFFA9A885353560A9A8FFFFFFA8A860
%361385A8CBFD0CFFA9A88459335984A9CBFFFFFFA8A9345834A9A8FD0DFF
%A8A85B373061A8A9FFFFFFA9A885303761A8A8FD0EFFA8A8A2A984A8A2A8
%A8FFFFA8A8A87E85A8A8A2FD0DFFA8A8A28584A8A2A8FFFFFD04A88485A8
%A8A2FD0CFFCBA8A87E8584A8A2FFFFFFFD04A884FD04A8FD0BFFFD04A884
%85A8A8A2FFFFFFA2A8A8857EA8A8A8FD0FFFA8A8A8A9A8A8A8FFFFFFA8A9
%A8A8A8A9A8CBFD0EFFA8A8A8A9A8A8A8FFFFFFA8A9A8A8A8A9A8FD0EFFCB
%A8A8A8A9A8A9FD04FFA8A9A8A8A8A9A8FD0DFFA8A9A8A8A8A9A8FD05FFA8
%A9A8A8A8A9CBFD10FFA8CBA8FFA8FD07FFA8CBA8FD11FFA8CBA8FD07FFA8
%FFA8CBA8FD11FFA8CBA8FD07FFA8FFA8FFA8FD0FFFA8FFA8CBA8FD07FFA8
%FFA8FFA8FDFCFFFDFCFFFDFCFFFDFCFFFDADFFA8FD1EFF8A3AAFFD1CFFCA
%CDC8FD3EFFA278A2FD1CFFAF176583FD1BFFCFCEC7CECFFD3CFF7ECBA2A9
%78FD1AFFAE3AAEFF8A17FD1AFFC8C9FFCAC8C9FD3BFF7878FFFFA3A9FD19
%FFAE3A3AFFAE65FD1AFFC8C7CFFFC8CFFD3BFFA978A8A272FD1BFFAE8A5F
%175FFD1BFFCACFC6C7FD3EFFA372A9FD1CFFAE3A17FD13FFA8FD09FFC8C7
%C9FD32FFA17575A0A7FD07FFA278A8FD11FF6E744A75FD08FF835FFD11FF
%A06E744AA0FD08FFC7FD33FF7C6E756EA7FD08FFCBFD12FF754A754AFD07
%FFAFAFA9FD11FFA1754A75A1FD07FFA9AFA9FD32FF7D4A204A84FD05FFA9
%AF858585AFFD0FFFAF524A207CA9FD05FF85AF858585AFFD0EFFA9AF264A
%20AFAFFD04FFAF858B858585FD30FFA9AF7C7D7DAFAFFD04FFAFA9AF85AF
%A9FD0FFF85FF527684AFFD05FFAFA9AF85AF85FD0FFFA9837D8485FD05FF
%AFFF85AF85AFFD31FF8584598485FD05FFAFAFFD0485FD0FFFAF85856185
%85FD05FF8585618561AFFD0FFF8561856185A9FD05FF8585618561FD31FF
%6137613785FD06FF3761376185FD0FFF8561376137AFFD05FF8B37613761
%85FD0FFF6161376161FD05FFAF6137613761FD30FF857F857F855BAFFD04
%FF85857F857F85A9FD0DFF848A5F6565655F8AFFFFFF8A848A65655F6683
%FD0DFFA7CFFD04CDA6FFFFFFAFCEADCDCDCDA6A7FD2FFFCBFFA3CBA3CBA3
%FFFFFFA2CBCBCBA3CBA3A3FD0DFF5FAEAE658965653AFFFFFF3AFF8A6565
%89655EFD0CFFAFCECFFD05CDAFFFFFFFCECFFD05CDFD2EFFA9A2A29C78A3
%9C78A9FFFFA878A3789C78A34DFD0DFF3439173A173A3A34FFFFFF34113A
%173A173A34FD0DFF9FFD05C7C0FFFFFFAFC7C0CCFD04C7AFFD2EFF4D7878
%A372784DFFFFFFA978727878787278FD0DFF6011181740171834FFFFFF35
%3A173A3A3A115FFD0CFFAFC8FD05C7C8AFFFFFAF9FC7C7CDC7C79FFD2EFF
%A954727272787254FFFFFFAF4D78727878784DFD0DFF8511171711641160
%FFFFFF85113A11173A1160FD0DFF9FFD05C79FFD04FFA0C6FD04C7A6FD2F
%FF4D9DA278787854FD04FF5478A372784D7FFD0EFF11653A17171185FFFF
%FFAF116440171711AFFD0DFFA7C7CDC7C7C7A6FD04FFA0C8CDC7C7C77CFD
%2FFF7E4D9C4D724D85FD04FF547878784D4D84FD0EFF34111711170BFD05
%FF111111171112FD0EFF85C1A5C7C6C183FD04FFA99EC7C0C79EA9FD2FFF
%AF534D784D54AFFD04FFAF4D784D4D4DFD0FFF851111110A84FD05FF850A
%11111160FD0FFF7DC7C1C19FFD05FFAFA6C1C7C1A6FD30FFA85A4D284D5A
%A9FD04FFA85A284D4D85A8FD0DFFA8A835110B3C7EA9FFFFFFA9A83C0B11
%35A8A8FD0DFFA8857CC19F85A2FFFFFFA8A884A09FA684A8A8FD2EFFA8A8
%5B5B85A8A8FFFFFFA8A9A8615A85A8A8A8FD0CFFA9A8A88485A8A8A8FFFF
%FFA8A9A88584A9A8A8FD0CFFA8A9A8A985A9A8A8A8FFFFA9A8A9848584A9
%A8FD2EFFA8A8A2A87EA8A2A8A8FFFFA87EA8A2A87EA8A2FD0DFFA8A8A2A8
%7EA8A2A8FFFFFFA87EA8A2A87EA8A8FD0DFFA2A8A2A87EA8A8FFFFFFA8A8
%7EA8A2A87EA8FD2FFFCBCBA8A9A8FD07FFA8A8A8A9A8FD11FFA8FFA9FD07
%FFA9FFA8FD13FFA8FD09FFA9FFA8FDFCFFFDA5FFFF
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2014-12-03T14:58:41+03:00</xap:CreateDate>
         <xap:ModifyDate>2014-12-03T14:58:41+03:00</xap:ModifyDate>
         <xap:MetadataDate>2014-12-03T14:58:41+03:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>204</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq8282a3JeeY7&#xA;nyr5osZ7Py1eyWiaZqUSM0M0odZGjnkFQBIw9MLt3r1BGww46gJwNzF2P1NUjvR5Jpfa9H5Y80aN&#xA;oVq9tLp2qyG3XTIkSOe0anJJEWIAGE9G5LUdeR6ZVHH4kJSN2Ovf+1kTRpmuYjN2KuxV2KuxV2Ku&#xA;xVgcuofprzEdB80WMtpHFembSE4lrW7SFGosj7q5P26dNqfPVHJ4mTw8or1enuNfi3Ryy+Nm8LPE&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:BF1ABA66E37AE411835BB055805D148E</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:C01ABA66E37AE411835BB055805D148E</xapMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -925.067 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 925.067 li
1173.71 925.067 li
1173.71 0 li
cp
clp
[1 0 0 1 0 0 ] concat
168.138 925.065 mo
147.618 925.065 130.986 916.38 130.986 905.67 cv
130.986 898.617 138.201 892.442 148.988 889.047 cv
156.383 901.715 164.389 905.999 168.507 906.327 cv
168.607 906.335 168.71 906.339 168.816 906.339 cv
172.854 906.339 181.443 900.591 188.626 889.488 cv
198.668 892.961 205.29 898.912 205.29 905.67 cv
205.29 916.38 188.658 925.065 168.138 925.065 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
.2 .192157 .0862745 0 cmyk
f
268.164 925.065 mo
247.644 925.065 231.012 916.38 231.012 905.67 cv
231.012 898.617 238.227 892.442 249.014 889.047 cv
256.409 901.715 264.413 905.999 268.524 906.327 cv
268.624 906.335 268.727 906.339 268.834 906.339 cv
272.877 906.339 281.468 900.59 288.649 889.488 cv
298.693 892.96 305.316 898.911 305.316 905.67 cv
305.316 916.38 288.684 925.065 268.164 925.065 cv
f
458.559 921.834 mo
438.039 921.834 421.407 913.149 421.407 902.439 cv
421.407 895.386 428.622 889.211 439.409 885.816 cv
446.804 898.484 454.81 902.768 458.928 903.096 cv
459.028 903.104 459.131 903.108 459.237 903.108 cv
463.275 903.108 471.864 897.36 479.047 886.257 cv
489.089 889.73 495.711 895.681 495.711 902.439 cv
495.711 913.149 479.079 921.834 458.559 921.834 cv
f
558.585 921.834 mo
538.065 921.834 521.433 913.149 521.433 902.439 cv
521.433 895.386 528.648 889.211 539.435 885.816 cv
546.83 898.484 554.834 902.768 558.945 903.096 cv
559.045 903.104 559.148 903.108 559.255 903.108 cv
563.298 903.108 571.889 897.359 579.07 886.257 cv
589.114 889.729 595.737 895.68 595.737 902.439 cv
595.737 913.149 579.105 921.834 558.585 921.834 cv
f
747.072 921.276 mo
726.552 921.276 709.92 912.591 709.92 901.881 cv
709.92 894.828 717.135 888.653 727.922 885.258 cv
735.317 897.926 743.323 902.21 747.441 902.538 cv
747.541 902.546 747.644 902.55 747.75 902.55 cv
751.788 902.55 760.377 896.802 767.56 885.699 cv
777.602 889.172 784.224 895.123 784.224 901.881 cv
784.224 912.591 767.592 921.276 747.072 921.276 cv
f
847.098 921.276 mo
826.578 921.276 809.946 912.591 809.946 901.881 cv
809.946 894.828 817.161 888.653 827.948 885.258 cv
835.343 897.926 843.347 902.21 847.458 902.538 cv
847.558 902.546 847.661 902.55 847.768 902.55 cv
851.811 902.55 860.402 896.802 867.583 885.7 cv
877.625 889.172 884.25 895.123 884.25 901.881 cv
884.25 912.591 867.609 921.276 847.098 921.276 cv
f
168.138 617.427 mo
147.618 617.427 130.986 608.742 130.986 598.023 cv
130.986 590.97 138.199 584.795 148.986 581.401 cv
156.382 594.068 164.389 598.352 168.507 598.68 cv
168.607 598.688 168.71 598.692 168.816 598.692 cv
172.855 598.692 181.444 592.944 188.627 581.842 cv
198.669 585.314 205.29 591.265 205.29 598.023 cv
205.29 608.742 188.658 617.427 168.138 617.427 cv
f
268.164 617.427 mo
247.644 617.427 231.012 608.742 231.012 598.023 cv
231.012 590.97 238.227 584.795 249.014 581.4 cv
256.409 594.068 264.413 598.352 268.524 598.68 cv
268.624 598.688 268.727 598.692 268.834 598.692 cv
272.877 598.692 281.468 592.943 288.649 581.841 cv
298.693 585.313 305.316 591.264 305.316 598.023 cv
305.316 608.742 288.684 617.427 268.164 617.427 cv
f
458.559 617.427 mo
438.039 617.427 421.407 608.742 421.407 598.023 cv
421.407 590.97 428.62 584.795 439.407 581.401 cv
446.803 594.068 454.81 598.352 458.928 598.68 cv
459.028 598.688 459.131 598.692 459.237 598.692 cv
463.276 598.692 471.865 592.944 479.048 581.842 cv
489.09 585.314 495.711 591.265 495.711 598.023 cv
495.711 608.742 479.079 617.427 458.559 617.427 cv
f
558.585 617.427 mo
538.065 617.427 521.433 608.742 521.433 598.023 cv
521.433 590.97 528.648 584.795 539.435 581.4 cv
546.83 594.068 554.834 598.352 558.945 598.68 cv
559.045 598.688 559.148 598.692 559.255 598.692 cv
563.298 598.692 571.889 592.943 579.07 581.841 cv
589.114 585.313 595.737 591.264 595.737 598.023 cv
595.737 608.742 579.105 617.427 558.585 617.427 cv
f
747.072 617.427 mo
726.552 617.427 709.92 608.742 709.92 598.023 cv
709.92 590.97 717.133 584.795 727.92 581.401 cv
735.316 594.068 743.323 598.352 747.441 598.68 cv
747.541 598.688 747.644 598.692 747.75 598.692 cv
751.789 598.692 760.378 592.944 767.561 581.842 cv
777.603 585.314 784.224 591.265 784.224 598.023 cv
784.224 608.742 767.592 617.427 747.072 617.427 cv
f
847.098 617.427 mo
826.578 617.427 809.946 608.742 809.946 598.023 cv
809.946 590.97 817.161 584.795 827.948 581.4 cv
835.343 594.068 843.347 598.352 847.458 598.68 cv
847.558 598.688 847.661 598.692 847.768 598.692 cv
851.811 598.692 860.402 592.944 867.583 581.842 cv
877.625 585.314 884.25 591.265 884.25 598.023 cv
884.25 608.742 867.609 617.427 847.098 617.427 cv
f
1036.54 617.427 mo
1016.02 617.427 999.387 608.742 999.387 598.023 cv
999.387 590.97 1006.6 584.795 1017.39 581.401 cv
1024.78 594.068 1032.79 598.352 1036.9 598.68 cv
1037 598.688 1037.1 598.692 1037.21 598.692 cv
1041.25 598.692 1049.84 592.944 1057.03 581.842 cv
1067.07 585.314 1073.69 591.265 1073.69 598.023 cv
1073.69 608.742 1057.06 617.427 1036.54 617.427 cv
f
1136.56 617.427 mo
1116.04 617.427 1099.41 608.742 1099.41 598.023 cv
1099.41 590.97 1106.63 584.796 1117.41 581.401 cv
1124.81 594.069 1132.81 598.352 1136.92 598.68 cv
1137.02 598.688 1137.13 598.692 1137.23 598.692 cv
1141.27 598.692 1149.86 592.944 1157.05 581.841 cv
1167.09 585.313 1173.72 591.265 1173.72 598.023 cv
1173.72 608.742 1157.08 617.427 1136.56 617.427 cv
f
168.138 305.964 mo
147.618 305.964 130.986 297.288 130.986 286.569 cv
130.986 279.516 138.201 273.341 148.988 269.946 cv
156.383 282.614 164.389 286.898 168.507 287.226 cv
168.607 287.234 168.71 287.238 168.816 287.238 cv
172.854 287.238 181.443 281.49 188.626 270.388 cv
198.668 273.86 205.29 279.811 205.29 286.569 cv
205.29 297.288 188.658 305.964 168.138 305.964 cv
f
268.164 305.964 mo
247.644 305.964 231.012 297.288 231.012 286.569 cv
231.012 279.516 238.227 273.341 249.014 269.946 cv
256.409 282.614 264.413 286.898 268.524 287.226 cv
268.624 287.234 268.727 287.238 268.834 287.238 cv
272.877 287.238 281.468 281.489 288.649 270.387 cv
298.693 273.859 305.316 279.811 305.316 286.569 cv
305.316 297.288 288.684 305.964 268.164 305.964 cv
f
457.605 305.964 mo
437.085 305.964 420.453 297.288 420.453 286.569 cv
420.453 279.516 427.668 273.341 438.455 269.946 cv
445.85 282.614 453.856 286.898 457.974 287.226 cv
458.074 287.234 458.177 287.238 458.283 287.238 cv
462.321 287.238 470.91 281.49 478.093 270.388 cv
488.135 273.86 494.757 279.811 494.757 286.569 cv
494.757 297.288 478.125 305.964 457.605 305.964 cv
f
557.631 305.964 mo
537.111 305.964 520.479 297.288 520.479 286.569 cv
520.479 279.516 527.694 273.341 538.481 269.946 cv
545.876 282.614 553.88 286.898 557.991 287.226 cv
558.091 287.234 558.194 287.238 558.3 287.238 cv
562.344 287.238 570.935 281.489 578.116 270.387 cv
588.16 273.859 594.783 279.811 594.783 286.569 cv
594.783 297.288 578.151 305.964 557.631 305.964 cv
f
747.072 305.964 mo
726.552 305.964 709.92 297.288 709.92 286.569 cv
709.92 279.516 717.135 273.341 727.922 269.946 cv
735.317 282.614 743.323 286.898 747.441 287.226 cv
747.541 287.234 747.644 287.238 747.75 287.238 cv
751.788 287.238 760.377 281.49 767.56 270.388 cv
777.602 273.86 784.224 279.811 784.224 286.569 cv
784.224 297.288 767.592 305.964 747.072 305.964 cv
f
847.098 305.964 mo
826.578 305.964 809.946 297.288 809.946 286.569 cv
809.946 279.516 817.161 273.341 827.948 269.946 cv
835.343 282.614 843.347 286.898 847.458 287.226 cv
847.558 287.234 847.661 287.238 847.768 287.238 cv
851.811 287.238 860.402 281.49 867.583 270.388 cv
877.625 273.86 884.25 279.811 884.25 286.569 cv
884.25 297.288 867.609 305.964 847.098 305.964 cv
f
1036.54 305.964 mo
1016.02 305.964 999.387 297.288 999.387 286.569 cv
999.387 279.516 1006.6 273.341 1017.39 269.946 cv
1024.78 282.614 1032.79 286.898 1036.9 287.226 cv
1037 287.234 1037.1 287.238 1037.21 287.238 cv
1041.25 287.238 1049.84 281.49 1057.03 270.387 cv
1067.07 273.86 1073.69 279.811 1073.69 286.569 cv
1073.69 297.288 1057.06 305.964 1036.54 305.964 cv
f
1136.56 305.964 mo
1116.04 305.964 1099.41 297.288 1099.41 286.569 cv
1099.41 279.516 1106.63 273.342 1117.41 269.947 cv
1124.81 282.615 1132.81 286.898 1136.92 287.226 cv
1137.02 287.234 1137.13 287.238 1137.23 287.238 cv
1141.27 287.238 1149.86 281.49 1157.05 270.387 cv
1167.09 273.859 1173.72 279.811 1173.72 286.569 cv
1173.72 297.288 1157.08 305.964 1136.56 305.964 cv
f
770.697 787.401 mo
766.575 795.573 766.143 804.186 770.679 810.261 cv
775.215 816.345 778.185 818.379 780.777 822.195 cv
783.369 826.011 781.731 844.137 776.79 864.081 cv
770.436 889.704 753.309 903.006 747.441 902.538 cv
741.564 902.07 727.767 893.547 719.127 864.081 cv
712.782 842.445 709.956 828.504 714.096 822.195 cv
718.236 815.886 720.531 815.355 724.914 809.676 cv
729.288 804.006 728.919 796.122 724.851 787.401 cv
770.697 787.401 li
.137255 0 .0117647 0 cmyk
f
714.323 846.073 mo
736.342 851.105 758.372 852.004 780.391 846.494 cv
779.521 851.939 778.308 857.926 776.78 864.089 cv
770.431 889.708 755.027 902.76 747.444 902.537 cv
739.862 902.313 727.768 893.553 719.125 864.089 cv
717.145 857.334 715.514 851.329 714.324 846.073 cv
714.323 846.073 li
cp
.572549 .172549 0 0 cmyk
f
767.61 786.636 mo
764.028 793.728 763.659 806.913 767.592 812.187 cv
771.534 817.47 774.27 819.54 776.358 822.735 cv
778.455 825.921 774.234 858.267 769.239 870.174 cv
764.235 882.072 755.28 890.469 747.414 890.325 cv
739.539 890.172 732.933 883.125 727.173 870.174 cv
721.404 857.214 716.229 825.642 718.479 822.366 cv
720.72 819.081 724.059 816.606 727.866 811.683 cv
731.664 806.76 731.34 794.205 727.812 786.636 cv
767.61 786.636 li
f
717.21 824.058 mo
750.564 825.12 li
777.735 824.625 li
779.796 828.45 775.413 861.777 770.229 874.125 cv
765 886.572 755.64 895.356 747.405 895.194 cv
739.179 895.041 732.267 887.67 726.246 874.125 cv
720.216 860.571 714.807 827.559 717.156 824.13 cv
717.21 824.058 li
.00392157 .192157 .937255 0 cmyk
f
717.201 824.058 mo
717.147 824.121 li
714.798 827.559 720.216 860.571 726.246 874.116 cv
732.267 887.67 739.188 895.041 747.414 895.203 cv
755.64 895.356 765 886.572 770.229 874.116 cv
775.413 861.777 779.805 828.459 777.744 824.634 cv
777.627 824.634 li
777.591 834.849 773.937 858.744 769.761 868.707 cv
764.631 880.902 754.515 884.106 747.414 883.971 cv
740.313 883.836 732.564 881.982 726.66 868.707 cv
721.818 857.799 717.381 834.066 717.219 824.049 cv
717.201 824.049 li
717.201 824.058 li
.00784314 .447059 .996078 0 cmyk
f
747.036 817.497 mo
759.132 817.497 769.734 819.144 775.602 821.637 cv
776.43 822.573 777.177 823.491 777.852 824.517 cv
778.257 825.129 778.437 826.785 778.428 829.152 cv
773.721 832.455 761.445 834.795 747.036 834.795 cv
733.383 834.795 721.656 832.68 716.463 829.647 cv
716.346 826.839 716.49 824.841 716.985 824.13 cv
717.651 823.158 718.416 822.258 719.253 821.34 cv
725.247 819.027 735.453 817.497 747.036 817.497 cv
.0431373 0 .709804 0 cmyk
f
726.111 835.66 mo
724.741 835.66 723.413 835.166 722.322 834.138 cv
721.548 833.406 720.977 832.48 720.61 831.443 cv
723.363 832.362 726.817 833.133 730.764 833.703 cv
729.364 834.986 727.709 835.66 726.111 835.66 cv
.00392157 .0196078 .196078 0 cmyk
f
725.657 819.501 mo
726.422 819.193 727.21 819.034 727.985 819.034 cv
727.997 819.034 728.01 819.035 728.022 819.035 cv
727.206 819.181 726.417 819.337 725.657 819.501 cv
.121569 .00784314 0 0 cmyk
f
730.764 833.703 mo
726.817 833.133 723.363 832.362 720.61 831.443 cv
719.649 828.73 720.089 825.261 721.971 822.546 cv
722.994 821.079 724.29 820.051 725.657 819.501 cv
726.417 819.337 727.206 819.181 728.022 819.035 cv
729.38 819.044 730.694 819.538 731.772 820.557 cv
734.571 823.203 734.733 828.396 732.123 832.14 cv
731.71 832.734 731.252 833.255 730.764 833.703 cv
.00784314 0 .137255 0 cmyk
f
731.013 866.497 mo
731.013 869.603 733.531 872.121 736.637 872.121 cv
739.742 872.121 742.26 869.603 742.26 866.497 cv
742.26 863.392 739.742 860.874 736.637 860.874 cv
733.531 860.874 731.013 863.392 731.013 866.497 cv
cp
.0431373 0 .709804 0 cmyk
f
757.21 857.991 mo
757.21 859.325 758.292 860.406 759.626 860.406 cv
760.96 860.406 762.041 859.325 762.041 857.991 cv
762.041 856.657 760.96 855.575 759.626 855.575 cv
758.292 855.575 757.21 856.657 757.21 857.991 cv
cp
f
765.763 837.762 mo
765.763 838.917 766.699 839.854 767.854 839.854 cv
769.011 839.854 769.947 838.917 769.947 837.762 cv
769.947 836.605 769.011 835.669 767.854 835.669 cv
766.699 835.669 765.763 836.605 765.763 837.762 cv
cp
f
745.687 847.307 mo
745.687 848.672 746.793 849.779 748.159 849.779 cv
749.524 849.779 750.632 848.672 750.632 847.307 cv
750.632 845.94 749.524 844.834 748.159 844.834 cv
746.793 844.834 745.687 845.94 745.687 847.307 cv
cp
f
735.638 841.304 mo
735.638 842.075 736.264 842.701 737.035 842.701 cv
737.808 842.701 738.434 842.075 738.434 841.304 cv
738.434 840.531 737.808 839.905 737.035 839.905 cv
736.264 839.905 735.638 840.531 735.638 841.304 cv
cp
f
773.993 784.521 mo
748.932 792.32 733.897 789.35 720.594 784.521 cv
720.594 784.521 721.648 794.038 725.11 797.426 cv
728.571 800.813 738.059 801.918 747.655 801.82 cv
757.159 801.723 766.01 799.955 769.478 797.426 cv
772.945 794.896 773.993 784.521 773.993 784.521 cv
cp
.137255 0 .0117647 0 cmyk
f
771.898 784.854 mo
748.803 792.042 734.949 789.305 722.689 784.854 cv
722.689 784.854 723.661 793.625 726.851 796.746 cv
730.041 799.867 738.783 800.887 747.627 800.796 cv
756.385 800.707 764.541 799.078 767.736 796.746 cv
770.932 794.415 771.897 784.854 771.897 784.854 cv
771.898 784.854 li
cp
.4 .0666667 0 0 cmyk
f
720.626 784.605 mo
720.626 788.729 732.565 792.073 747.294 792.073 cv
762.021 792.073 773.962 788.729 773.962 784.605 cv
773.962 780.48 762.021 777.137 747.294 777.137 cv
732.565 777.137 720.626 780.48 720.626 784.605 cv
cp
.137255 0 .0117647 0 cmyk
f
724.903 784.116 mo
724.903 787.58 734.928 790.387 747.294 790.387 cv
759.66 790.387 769.685 787.58 769.685 784.116 cv
769.685 780.653 759.66 777.847 747.294 777.847 cv
734.928 777.847 724.903 780.653 724.903 784.116 cv
cp
.4 .0666667 0 0 cmyk
f
727.713 783.688 mo
727.713 786.793 736.479 789.311 747.294 789.311 cv
758.107 789.311 766.874 786.793 766.874 783.688 cv
766.874 780.583 758.107 778.065 747.294 778.065 cv
736.479 778.065 727.713 780.583 727.713 783.688 cv
cp
.572549 .172549 0 0 cmyk
f
747.291 778.069 mo
736.477 778.069 727.715 780.591 727.715 783.695 cv
727.715 784.377 728.175 785.014 728.949 785.619 cv
731.711 783.476 738.865 781.974 747.291 781.974 cv
755.716 781.974 762.899 783.476 765.661 785.619 cv
766.436 785.014 766.867 784.377 766.867 783.695 cv
766.867 780.591 758.104 778.069 747.291 778.069 cv
cp
.137255 0 .0117647 0 cmyk
f
761.948 765.98 mo
764.587 767.811 li
764.587 767.811 763.729 788.782 757.644 794.738 cv
751.56 800.695 744.348 801.087 737.787 795.915 cv
731.227 790.743 730.15 768.072 730.15 768.072 cv
734.732 766.242 li
761.948 765.98 li
cp
.415686 .737255 .964706 .54902 cmyk
f
729.82 767.137 mo
729.82 768.029 730.31 768.881 731.194 769.654 cv
732.078 770.429 733.357 771.125 734.938 771.711 cv
735.729 772.003 736.595 779.065 737.524 779.298 cv
738.454 779.53 739.447 772.934 740.492 773.097 cv
742.583 773.425 744.881 773.605 747.294 773.605 cv
749.706 773.605 752.005 773.425 754.095 773.097 cv
756.186 772.77 758.068 772.296 759.648 771.711 cv
760.439 771.418 761.154 776.195 761.782 775.852 cv
762.41 775.507 762.951 770.041 763.394 769.654 cv
764.277 768.881 764.767 768.029 764.767 767.137 cv
764.767 763.563 756.943 760.668 747.294 760.668 cv
737.644 760.668 729.82 763.563 729.82 767.137 cv
cp
.286275 .733333 1 .227451 cmyk
f
769.069 780.825 mo
772.139 782.041 773.959 783.516 773.959 785.118 cv
773.959 789.243 762.016 792.584 747.287 792.584 cv
732.559 792.584 720.632 789.243 720.632 785.118 cv
720.632 783.516 722.453 782.042 725.521 780.825 cv
725.122 781.436 724.908 782.079 724.908 782.735 cv
724.908 787.248 734.921 790.901 747.287 790.901 cv
759.652 790.901 769.683 787.248 769.683 782.735 cv
769.683 782.079 769.47 781.436 769.069 780.825 cv
cp
.137255 0 .0117647 0 cmyk
f
728.33 793.918 mo
728.33 795.399 729.45 796.998 730.832 797.49 cv
732.214 797.981 733.334 797.18 733.334 795.699 cv
733.334 794.218 732.214 792.618 730.832 792.127 cv
729.45 791.635 728.33 792.438 728.33 793.918 cv
cp
0 0 0 0 cmyk
f
870.714 787.401 mo
866.592 795.573 866.169 804.186 870.705 810.261 cv
875.232 816.345 878.211 818.379 880.803 822.195 cv
883.386 826.011 881.757 844.137 876.807 864.081 cv
870.462 889.704 853.335 903.006 847.458 902.538 cv
841.59 902.07 827.793 893.547 819.153 864.081 cv
812.808 842.445 809.982 828.504 814.122 822.195 cv
818.262 815.886 820.557 815.355 824.931 809.676 cv
829.314 804.006 828.945 796.122 824.868 787.401 cv
870.714 787.401 li
.137255 0 .0117647 0 cmyk
f
814.346 846.073 mo
836.364 851.105 858.395 852.005 880.412 846.494 cv
879.544 851.939 878.33 857.927 876.803 864.089 cv
870.453 889.709 855.049 902.76 847.467 902.537 cv
839.885 902.313 827.789 893.554 819.147 864.089 cv
817.166 857.334 815.535 851.33 814.346 846.073 cv
cp
.572549 .172549 0 0 cmyk
f
867.636 786.636 mo
864.054 793.728 863.685 806.913 867.618 812.187 cv
871.551 817.47 874.296 819.54 876.384 822.735 cv
878.472 825.921 874.26 858.267 869.256 870.174 cv
864.261 882.072 855.306 890.469 847.431 890.325 cv
839.565 890.172 832.95 883.125 827.19 870.174 cv
821.43 857.214 816.255 825.642 818.496 822.366 cv
820.746 819.081 824.085 816.606 827.883 811.683 cv
831.69 806.76 831.366 794.205 827.829 786.636 cv
867.636 786.636 li
f
817.227 824.058 mo
850.581 825.12 li
877.761 824.625 li
879.813 828.45 875.43 861.777 870.246 874.125 cv
865.017 886.572 855.657 895.356 847.431 895.203 cv
839.205 895.041 832.284 887.67 826.263 874.125 cv
820.242 860.571 814.824 827.559 817.173 824.13 cv
817.227 824.058 li
.00392157 .192157 .937255 0 cmyk
f
817.227 824.058 mo
817.173 824.121 li
814.824 827.559 820.242 860.571 826.263 874.125 cv
832.293 887.67 839.205 895.05 847.44 895.203 cv
855.666 895.356 865.026 886.572 870.255 874.125 cv
875.439 861.777 879.822 828.459 877.77 824.634 cv
877.644 824.634 li
877.617 834.849 873.963 858.744 869.778 868.707 cv
864.657 880.902 854.532 884.106 847.44 883.971 cv
840.339 883.836 832.59 881.982 826.686 868.707 cv
821.835 857.808 817.398 834.066 817.245 824.058 cv
817.227 824.058 li
.00784314 .447059 .996078 0 cmyk
f
847.062 817.497 mo
859.158 817.497 869.76 819.144 875.628 821.637 cv
876.447 822.573 877.203 823.491 877.878 824.517 cv
878.283 825.129 878.454 826.785 878.445 829.152 cv
873.747 832.455 861.471 834.795 847.062 834.795 cv
833.409 834.795 821.682 832.68 816.489 829.647 cv
816.372 826.839 816.516 824.841 817.002 824.13 cv
817.668 823.158 818.433 822.258 819.27 821.34 cv
825.273 819.027 835.47 817.497 847.062 817.497 cv
.0431373 0 .709804 0 cmyk
f
826.13 835.66 mo
824.761 835.66 823.435 835.166 822.348 834.138 cv
821.574 833.406 821.002 832.479 820.634 831.442 cv
823.386 832.361 826.837 833.132 830.782 833.702 cv
829.382 834.986 827.728 835.66 826.13 835.66 cv
.00392157 .0196078 .196078 0 cmyk
f
825.681 819.5 mo
826.446 819.193 827.232 819.034 828.005 819.034 cv
828.018 819.034 828.031 819.035 828.043 819.035 cv
827.229 819.181 826.441 819.336 825.681 819.5 cv
.121569 .00784314 0 0 cmyk
f
830.782 833.702 mo
826.837 833.132 823.386 832.361 820.634 831.442 cv
819.672 828.73 820.109 825.261 821.997 822.546 cv
823.02 821.078 824.316 820.05 825.681 819.5 cv
826.441 819.336 827.229 819.181 828.043 819.035 cv
829.399 819.044 830.711 819.538 831.789 820.557 cv
834.597 823.203 834.75 828.396 832.14 832.14 cv
831.727 832.733 831.27 833.254 830.782 833.702 cv
.00784314 0 .137255 0 cmyk
f
831.035 866.497 mo
831.03 869.603 833.544 872.125 836.649 872.13 cv
839.756 872.135 842.277 869.621 842.282 866.516 cv
842.282 866.497 li
842.287 863.392 839.773 860.87 836.668 860.865 cv
833.562 860.86 831.04 863.374 831.035 866.479 cv
831.035 866.497 li
cp
.0431373 0 .709804 0 cmyk
f
857.232 857.991 mo
857.23 859.325 858.31 860.408 859.644 860.411 cv
860.979 860.413 862.062 859.333 862.063 857.999 cv
862.063 857.991 li
862.065 856.657 860.985 855.574 859.651 855.571 cv
858.317 855.569 857.234 856.649 857.232 857.983 cv
857.232 857.991 li
cp
f
865.784 837.762 mo
865.784 838.917 866.722 839.854 867.877 839.854 cv
869.032 839.854 869.97 838.917 869.97 837.762 cv
869.97 836.606 869.032 835.669 867.877 835.669 cv
866.722 835.669 865.784 836.606 865.784 837.762 cv
cp
f
845.708 847.307 mo
845.708 848.672 846.815 849.779 848.181 849.779 cv
849.547 849.779 850.654 848.672 850.654 847.307 cv
850.654 845.94 849.547 844.834 848.181 844.834 cv
846.815 844.834 845.708 845.94 845.708 847.307 cv
cp
f
835.66 841.304 mo
835.66 842.076 836.285 842.701 837.058 842.701 cv
837.83 842.701 838.455 842.076 838.455 841.304 cv
838.455 840.531 837.83 839.906 837.058 839.906 cv
836.285 839.906 835.66 840.531 835.66 841.304 cv
cp
f
874.016 784.521 mo
848.953 792.321 833.92 789.351 820.616 784.521 cv
820.616 784.521 821.671 794.039 825.132 797.426 cv
828.594 800.813 838.081 801.918 847.677 801.82 cv
857.182 801.723 866.032 799.956 869.499 797.426 cv
872.967 794.896 874.016 784.521 874.016 784.521 cv
cp
.137255 0 .0117647 0 cmyk
f
871.92 784.854 mo
848.825 792.042 834.971 789.305 822.711 784.854 cv
822.711 784.854 823.684 793.625 826.873 796.746 cv
830.063 799.867 838.806 800.887 847.648 800.796 cv
856.407 800.706 864.563 799.078 867.759 796.746 cv
870.954 794.415 871.92 784.854 871.92 784.854 cv
cp
.4 .0666667 0 0 cmyk
f
820.647 784.605 mo
820.647 788.729 832.587 792.073 847.315 792.073 cv
862.044 792.073 873.983 788.729 873.983 784.605 cv
873.983 780.48 862.044 777.138 847.315 777.138 cv
832.587 777.138 820.647 780.48 820.647 784.605 cv
cp
.137255 0 .0117647 0 cmyk
f
824.925 784.117 mo
824.925 787.58 834.949 790.387 847.315 790.387 cv
859.682 790.387 869.706 787.58 869.706 784.117 cv
869.706 780.653 859.682 777.847 847.315 777.847 cv
834.949 777.847 824.925 780.653 824.925 784.117 cv
cp
.4 .0666667 0 0 cmyk
f
827.735 783.688 mo
827.735 786.793 836.502 789.311 847.315 789.311 cv
858.13 789.311 866.896 786.793 866.896 783.688 cv
866.896 780.583 858.13 778.065 847.315 778.065 cv
836.502 778.065 827.735 780.583 827.735 783.688 cv
cp
.572549 .172549 0 0 cmyk
f
847.313 778.069 mo
836.499 778.069 827.737 780.591 827.737 783.695 cv
827.737 784.378 828.197 785.014 828.971 785.619 cv
831.733 783.476 838.888 781.974 847.313 781.974 cv
855.738 781.974 862.921 783.476 865.684 785.619 cv
866.458 785.014 866.889 784.378 866.889 783.695 cv
866.889 780.591 858.127 778.069 847.313 778.069 cv
cp
.137255 0 .0117647 0 cmyk
f
869.092 780.825 mo
872.16 782.042 873.98 783.516 873.98 785.118 cv
873.98 789.243 862.037 792.584 847.309 792.584 cv
832.58 792.584 820.654 789.243 820.654 785.118 cv
820.654 783.516 822.475 782.042 825.544 780.825 cv
825.144 781.437 824.931 782.079 824.931 782.735 cv
824.931 787.248 834.943 790.901 847.309 790.901 cv
859.675 790.901 869.705 787.248 869.705 782.735 cv
869.705 782.079 869.491 781.437 869.092 780.825 cv
cp
f
828.353 793.918 mo
828.35 795.398 829.467 796.999 830.849 797.494 cv
832.23 797.989 833.354 797.19 833.356 795.711 cv
833.356 795.699 li
833.359 794.219 832.242 792.618 830.86 792.123 cv
829.479 791.628 828.355 792.427 828.353 793.906 cv
828.353 793.918 li
cp
0 0 0 0 cmyk
f
838.42 758.361 mo
834.444 750.811 841.23 745.023 848.553 742.925 cv
858.376 740.109 862.579 735.716 858.93 730.082 cv
855.035 724.07 851.901 722.642 845.826 719.177 cv
853.592 720.124 861.869 724.812 864.728 728.762 cv
867.585 732.712 868.748 741.94 860.764 746.628 cv
854.795 750.132 846.128 754.144 851.57 762.059 cv
854.151 765.813 857.119 770.457 850.987 768.528 cv
844.854 766.601 840.835 762.949 838.42 758.361 cv
cp
.00392157 .188235 .996078 0 cmyk
f
825.309 721.184 mo
816.831 733.319 843.501 731.821 834.953 746.214 cv
831.546 737.558 824.441 740.7 816.951 734.236 cv
812.067 730.021 816.769 724.057 825.309 721.184 cv
cp
f
836.584 724.35 mo
824.755 716.7 834.483 706.339 849.605 711.71 cv
844.397 711.39 833.916 715.475 836.584 724.35 cv
cp
f
482.184 787.959 mo
478.062 796.131 477.63 804.744 482.166 810.819 cv
486.702 816.903 489.672 818.937 492.264 822.753 cv
494.856 826.569 493.218 844.695 488.277 864.639 cv
481.923 890.262 464.796 903.564 458.928 903.096 cv
453.051 902.628 439.254 894.105 430.614 864.639 cv
424.269 843.003 421.452 829.062 425.583 822.753 cv
429.723 816.444 432.018 815.913 436.401 810.234 cv
440.784 804.564 440.406 796.689 436.338 787.959 cv
482.184 787.959 li
.137255 0 .0117647 0 cmyk
f
425.812 846.632 mo
447.83 851.664 469.86 852.563 491.879 847.053 cv
491.01 852.498 489.796 858.484 488.269 864.646 cv
481.919 890.267 466.516 903.318 458.933 903.096 cv
451.351 902.872 439.256 894.111 430.613 864.646 cv
428.633 857.893 427.002 851.888 425.812 846.632 cv
cp
.572549 .172549 0 0 cmyk
f
479.097 787.194 mo
475.515 794.286 475.146 807.471 479.079 812.745 cv
483.021 818.028 485.757 820.107 487.845 823.293 cv
489.942 826.479 485.721 858.825 480.726 870.732 cv
475.722 882.639 466.767 891.027 458.901 890.883 cv
451.026 890.73 444.42 883.683 438.66 870.732 cv
432.9 857.772 427.716 826.2 429.966 822.924 cv
432.207 819.639 435.546 817.164 439.353 812.241 cv
443.151 807.318 442.827 794.772 439.299 787.194 cv
479.097 787.194 li
f
428.697 824.616 mo
462.051 825.678 li
489.231 825.183 li
491.283 829.008 486.9 862.335 481.716 874.683 cv
476.487 887.13 467.127 895.914 458.901 895.761 cv
450.666 895.599 443.754 888.228 437.733 874.683 cv
431.703 861.129 426.294 828.117 428.643 824.688 cv
428.697 824.616 li
.74902 0 1 0 cmyk
f
428.688 824.616 mo
428.634 824.679 li
426.285 828.117 431.712 861.129 437.733 874.683 cv
443.754 888.228 450.675 895.608 458.901 895.761 cv
467.127 895.914 476.487 887.13 481.716 874.683 cv
486.9 862.335 491.292 829.017 489.24 825.192 cv
489.114 825.192 li
489.078 835.407 485.433 859.302 481.248 869.265 cv
476.118 881.46 466.002 884.664 458.901 884.529 cv
451.8 884.394 444.051 882.54 438.156 869.265 cv
433.305 858.357 428.868 834.624 428.706 824.607 cv
428.688 824.607 li
428.688 824.616 li
.882353 .27451 1 .168627 cmyk
f
458.532 818.055 mo
470.619 818.055 481.221 819.702 487.098 822.195 cv
487.917 823.131 488.664 824.049 489.339 825.075 cv
489.744 825.687 489.924 827.343 489.915 829.71 cv
485.208 833.013 472.932 835.353 458.532 835.353 cv
444.87 835.353 433.143 833.238 427.95 830.205 cv
427.842 827.397 427.986 825.399 428.472 824.688 cv
429.138 823.716 429.903 822.816 430.74 821.898 cv
436.734 819.585 446.94 818.055 458.532 818.055 cv
.462745 0 .635294 0 cmyk
f
437.598 836.218 mo
436.228 836.218 434.9 835.724 433.809 834.696 cv
433.035 833.964 432.464 833.038 432.097 832.001 cv
434.851 832.92 438.303 833.691 442.251 834.261 cv
440.851 835.544 439.197 836.218 437.598 836.218 cv
.180392 0 .196078 0 cmyk
f
437.148 820.058 mo
437.912 819.751 438.699 819.592 439.472 819.592 cv
439.485 819.592 439.497 819.593 439.51 819.593 cv
438.695 819.739 437.907 819.894 437.148 820.058 cv
.121569 .00784314 0 0 cmyk
f
442.251 834.261 mo
438.303 833.691 434.851 832.92 432.097 832.001 cv
431.137 829.288 431.579 825.819 433.467 823.104 cv
434.487 821.636 435.781 820.608 437.148 820.058 cv
437.907 819.894 438.695 819.739 439.51 819.593 cv
440.867 819.602 442.181 820.096 443.259 821.115 cv
446.058 823.761 446.22 828.954 443.61 832.698 cv
443.197 833.292 442.739 833.813 442.251 834.261 cv
.0941176 0 .109804 0 cmyk
f
442.501 867.056 mo
442.501 870.161 445.02 872.679 448.125 872.679 cv
451.23 872.679 453.748 870.161 453.748 867.056 cv
453.748 863.95 451.23 861.433 448.125 861.433 cv
445.02 861.433 442.501 863.95 442.501 867.056 cv
cp
.462745 0 .635294 0 cmyk
f
468.698 858.55 mo
468.698 859.884 469.78 860.965 471.114 860.965 cv
472.448 860.965 473.529 859.884 473.529 858.55 cv
473.529 857.215 472.448 856.134 471.114 856.134 cv
469.78 856.134 468.698 857.216 468.698 858.55 cv
cp
f
477.251 838.32 mo
477.251 839.476 478.188 840.412 479.343 840.412 cv
480.499 840.412 481.436 839.476 481.436 838.32 cv
481.436 837.164 480.499 836.228 479.343 836.228 cv
478.188 836.228 477.251 837.164 477.251 838.32 cv
cp
f
457.175 847.865 mo
457.175 849.23 458.281 850.338 459.647 850.338 cv
461.013 850.338 462.12 849.23 462.12 847.865 cv
462.12 846.499 461.013 845.392 459.647 845.392 cv
458.281 845.392 457.175 846.499 457.175 847.865 cv
cp
f
447.126 841.862 mo
447.126 842.634 447.752 843.26 448.523 843.26 cv
449.296 843.26 449.922 842.634 449.922 841.862 cv
449.922 841.09 449.296 840.464 448.523 840.464 cv
447.752 840.464 447.126 841.09 447.126 841.862 cv
cp
f
485.481 785.079 mo
460.42 792.879 445.386 789.908 432.082 785.079 cv
432.082 785.079 433.137 794.597 436.599 797.983 cv
440.06 801.371 449.547 802.477 459.144 802.379 cv
468.647 802.281 477.498 800.514 480.966 797.983 cv
484.434 795.454 485.481 785.079 485.481 785.079 cv
cp
.137255 0 .0117647 0 cmyk
f
483.386 785.413 mo
460.291 792.601 446.438 789.863 434.178 785.413 cv
434.178 785.413 435.149 794.184 438.339 797.305 cv
441.529 800.426 450.271 801.444 459.115 801.354 cv
467.873 801.266 476.029 799.637 479.225 797.305 cv
482.42 794.973 483.386 785.413 483.386 785.413 cv
cp
.4 .0666667 0 0 cmyk
f
432.114 785.164 mo
432.114 789.288 444.054 792.632 458.782 792.632 cv
473.51 792.632 485.45 789.288 485.45 785.164 cv
485.45 781.039 473.51 777.695 458.782 777.695 cv
444.054 777.695 432.114 781.039 432.114 785.164 cv
cp
.137255 0 .0117647 0 cmyk
f
436.392 784.675 mo
436.392 788.138 446.416 790.945 458.782 790.945 cv
471.148 790.945 481.173 788.138 481.173 784.675 cv
481.173 781.212 471.148 778.405 458.782 778.405 cv
446.416 778.405 436.392 781.212 436.392 784.675 cv
cp
.4 .0666667 0 0 cmyk
f
439.201 784.246 mo
439.201 787.352 447.968 789.868 458.782 789.868 cv
469.596 789.868 478.362 787.352 478.362 784.246 cv
478.362 781.142 469.596 778.624 458.782 778.624 cv
447.968 778.624 439.201 781.142 439.201 784.246 cv
cp
.572549 .172549 0 0 cmyk
f
458.779 778.628 mo
447.965 778.628 439.203 781.148 439.203 784.254 cv
439.203 784.936 439.663 785.572 440.438 786.177 cv
443.199 784.033 450.354 782.531 458.779 782.531 cv
467.204 782.531 474.388 784.034 477.149 786.177 cv
477.924 785.572 478.355 784.936 478.355 784.254 cv
478.355 781.148 469.593 778.628 458.779 778.628 cv
cp
.137255 0 .0117647 0 cmyk
f
473.437 766.539 mo
476.075 768.369 li
476.075 768.369 475.217 789.341 469.132 795.297 cv
463.048 801.254 455.836 801.646 449.275 796.474 cv
442.715 791.302 441.639 768.631 441.639 768.631 cv
446.221 766.801 li
473.437 766.539 li
cp
.415686 .737255 .964706 .54902 cmyk
f
441.309 767.695 mo
441.309 768.588 441.798 769.439 442.683 770.213 cv
443.566 770.987 444.846 771.684 446.427 772.27 cv
447.217 772.562 448.083 779.624 449.013 779.856 cv
449.942 780.089 450.936 773.492 451.98 773.655 cv
454.071 773.983 456.369 774.164 458.782 774.164 cv
461.194 774.164 463.493 773.983 465.583 773.655 cv
467.674 773.328 469.557 772.854 471.137 772.27 cv
471.928 771.977 472.643 776.754 473.271 776.41 cv
473.898 776.065 474.439 770.6 474.882 770.213 cv
475.766 769.439 476.255 768.588 476.255 767.695 cv
476.255 764.122 468.432 761.226 458.782 761.226 cv
449.132 761.226 441.309 764.122 441.309 767.695 cv
cp
.286275 .733333 1 .227451 cmyk
f
480.558 781.384 mo
483.627 782.6 485.447 784.074 485.447 785.677 cv
485.447 789.802 473.504 793.143 458.775 793.143 cv
444.047 793.143 432.12 789.802 432.12 785.677 cv
432.12 784.074 433.94 782.6 437.01 781.384 cv
436.61 781.994 436.396 782.638 436.396 783.294 cv
436.396 787.807 446.409 791.46 458.775 791.46 cv
471.141 791.46 481.171 787.807 481.171 783.294 cv
481.171 782.638 480.958 781.994 480.558 781.384 cv
cp
.137255 0 .0117647 0 cmyk
f
439.818 794.477 mo
439.818 795.958 440.938 797.557 442.32 798.049 cv
443.702 798.54 444.822 797.738 444.822 796.257 cv
444.822 794.776 443.702 793.177 442.32 792.686 cv
440.938 792.193 439.818 792.996 439.818 794.477 cv
cp
0 0 0 0 cmyk
f
582.21 787.959 mo
578.079 796.131 577.656 804.744 582.192 810.819 cv
586.719 816.903 589.698 818.937 592.29 822.753 cv
594.873 826.569 593.244 844.695 588.294 864.639 cv
581.949 890.262 564.822 903.564 558.945 903.096 cv
553.077 902.628 539.28 894.105 530.64 864.639 cv
524.295 843.003 521.469 829.062 525.609 822.753 cv
529.749 816.444 532.044 815.913 536.418 810.234 cv
540.801 804.564 540.432 796.689 536.355 787.959 cv
582.21 787.959 li
.137255 0 .0117647 0 cmyk
f
525.834 846.632 mo
547.853 851.664 569.883 852.563 591.9 847.053 cv
591.032 852.498 589.818 858.484 588.291 864.647 cv
581.941 890.267 566.537 903.318 558.955 903.096 cv
551.373 902.872 539.277 894.111 530.636 864.647 cv
528.654 857.893 527.023 851.888 525.834 846.632 cv
cp
.572549 .172549 0 0 cmyk
f
579.123 787.194 mo
575.541 794.286 575.172 807.471 579.105 812.745 cv
583.038 818.028 585.783 820.107 587.871 823.293 cv
589.959 826.479 585.747 858.825 580.743 870.732 cv
575.748 882.639 566.793 891.027 558.918 890.883 cv
551.052 890.73 544.437 883.683 538.677 870.732 cv
532.917 857.772 527.742 826.2 529.983 822.924 cv
532.233 819.639 535.572 817.164 539.37 812.241 cv
543.177 807.318 542.853 794.772 539.316 787.194 cv
579.123 787.194 li
f
528.714 824.616 mo
562.068 825.678 li
589.248 825.183 li
591.3 829.008 586.917 862.335 581.733 874.683 cv
576.504 887.13 567.144 895.914 558.918 895.761 cv
550.692 895.599 543.78 888.228 537.75 874.683 cv
531.729 861.129 526.311 828.117 528.66 824.688 cv
528.714 824.616 li
.74902 0 1 0 cmyk
f
528.714 824.616 mo
528.66 824.679 li
526.311 828.117 531.729 861.129 537.75 874.683 cv
543.78 888.228 550.692 895.608 558.927 895.761 cv
567.153 895.914 576.513 887.13 581.742 874.683 cv
586.926 862.335 591.309 829.017 589.257 825.192 cv
589.14 825.192 li
589.104 835.407 585.45 859.302 581.265 869.265 cv
576.144 881.46 566.019 884.664 558.927 884.529 cv
551.826 884.394 544.077 882.54 538.173 869.265 cv
533.331 858.366 528.885 834.624 528.732 824.616 cv
528.714 824.616 li
.882353 .27451 1 .168627 cmyk
f
558.549 818.055 mo
570.645 818.055 581.247 819.702 587.115 822.195 cv
587.934 823.131 588.69 824.049 589.365 825.075 cv
589.77 825.687 589.941 827.343 589.932 829.71 cv
585.234 833.013 572.958 835.353 558.549 835.353 cv
544.896 835.353 533.169 833.238 527.976 830.205 cv
527.859 827.397 528.003 825.399 528.489 824.688 cv
529.164 823.716 529.92 822.816 530.757 821.898 cv
536.76 819.585 546.957 818.055 558.549 818.055 cv
.462745 0 .635294 0 cmyk
f
537.619 836.218 mo
536.25 836.218 534.922 835.724 533.835 834.696 cv
533.061 833.964 532.489 833.037 532.121 832 cv
534.874 832.919 538.326 833.69 542.272 834.26 cv
540.874 835.544 539.218 836.218 537.619 836.218 cv
.180392 0 .196078 0 cmyk
f
537.17 820.058 mo
537.934 819.751 538.72 819.592 539.494 819.592 cv
539.506 819.592 539.518 819.593 539.531 819.593 cv
538.717 819.739 537.929 819.894 537.17 820.058 cv
.121569 .00784314 0 0 cmyk
f
542.272 834.26 mo
538.326 833.69 534.874 832.919 532.121 832 cv
531.159 829.288 531.596 825.819 533.484 823.104 cv
534.507 821.636 535.803 820.607 537.17 820.058 cv
537.929 819.894 538.717 819.739 539.531 819.593 cv
540.888 819.602 542.203 820.096 543.285 821.115 cv
546.084 823.761 546.237 828.954 543.627 832.698 cv
543.216 833.291 542.759 833.813 542.272 834.26 cv
.0941176 0 .109804 0 cmyk
f
542.523 867.056 mo
542.519 870.161 545.032 872.684 548.138 872.688 cv
551.244 872.693 553.766 870.18 553.771 867.073 cv
553.771 867.056 li
553.775 863.95 551.262 861.429 548.156 861.424 cv
545.05 861.418 542.528 863.932 542.523 867.038 cv
542.523 867.056 li
cp
.462745 0 .635294 0 cmyk
f
568.721 858.55 mo
568.719 859.884 569.798 860.967 571.132 860.969 cv
572.467 860.972 573.55 859.892 573.552 858.558 cv
573.552 858.55 li
573.554 857.216 572.474 856.132 571.14 856.13 cv
569.806 856.128 568.723 857.208 568.721 858.542 cv
568.721 858.55 li
cp
f
577.272 838.32 mo
577.272 839.476 578.21 840.412 579.365 840.412 cv
580.521 840.412 581.458 839.476 581.458 838.32 cv
581.458 837.164 580.521 836.228 579.365 836.228 cv
578.21 836.228 577.272 837.164 577.272 838.32 cv
cp
f
557.196 847.865 mo
557.196 849.23 558.304 850.338 559.669 850.338 cv
561.035 850.338 562.143 849.23 562.143 847.865 cv
562.143 846.499 561.035 845.393 559.669 845.393 cv
558.304 845.393 557.196 846.499 557.196 847.865 cv
cp
f
547.148 841.862 mo
547.148 842.634 547.774 843.26 548.546 843.26 cv
549.318 843.26 549.943 842.634 549.943 841.862 cv
549.943 841.09 549.318 840.464 548.546 840.464 cv
547.774 840.464 547.148 841.09 547.148 841.862 cv
cp
f
585.504 785.079 mo
560.441 792.879 545.408 789.908 532.104 785.079 cv
532.104 785.079 533.159 794.597 536.62 797.984 cv
540.082 801.371 549.569 802.477 559.165 802.379 cv
568.669 802.281 577.521 800.514 580.987 797.984 cv
584.455 795.454 585.504 785.079 585.504 785.079 cv
cp
.137255 0 .0117647 0 cmyk
f
583.408 785.413 mo
560.313 792.601 546.459 789.863 534.199 785.413 cv
534.199 785.413 535.172 794.184 538.361 797.305 cv
541.551 800.426 550.294 801.445 559.137 801.354 cv
567.896 801.265 576.051 799.637 579.247 797.305 cv
582.442 794.974 583.408 785.413 583.408 785.413 cv
cp
.4 .0666667 0 0 cmyk
f
532.136 785.164 mo
532.136 789.288 544.075 792.632 558.804 792.632 cv
573.532 792.632 585.472 789.288 585.472 785.164 cv
585.472 781.039 573.532 777.695 558.804 777.695 cv
544.075 777.695 532.136 781.039 532.136 785.164 cv
cp
.137255 0 .0117647 0 cmyk
f
536.413 784.675 mo
536.413 788.139 546.438 790.945 558.804 790.945 cv
571.17 790.945 581.194 788.139 581.194 784.675 cv
581.194 781.212 571.17 778.405 558.804 778.405 cv
546.438 778.405 536.413 781.212 536.413 784.675 cv
cp
.4 .0666667 0 0 cmyk
f
539.224 784.246 mo
539.224 787.352 547.99 789.868 558.804 789.868 cv
569.618 789.868 578.385 787.352 578.385 784.246 cv
578.385 781.142 569.618 778.624 558.804 778.624 cv
547.99 778.624 539.224 781.142 539.224 784.246 cv
cp
.572549 .172549 0 0 cmyk
f
558.801 778.628 mo
547.987 778.628 539.226 781.149 539.226 784.254 cv
539.226 784.936 539.686 785.572 540.459 786.178 cv
543.222 784.034 550.376 782.532 558.801 782.532 cv
567.227 782.532 574.409 784.034 577.172 786.178 cv
577.946 785.572 578.377 784.936 578.377 784.254 cv
578.377 781.149 569.615 778.628 558.801 778.628 cv
cp
.137255 0 .0117647 0 cmyk
f
580.58 781.384 mo
583.648 782.601 585.469 784.074 585.469 785.677 cv
585.469 789.802 573.525 793.143 558.797 793.143 cv
544.068 793.143 532.143 789.802 532.143 785.677 cv
532.143 784.074 533.963 782.601 537.032 781.384 cv
536.632 781.994 536.419 782.638 536.419 783.294 cv
536.419 787.807 546.432 791.46 558.797 791.46 cv
571.163 791.46 581.193 787.807 581.193 783.294 cv
581.193 782.638 580.979 781.994 580.58 781.384 cv
cp
f
539.841 794.477 mo
539.838 795.957 540.955 797.558 542.337 798.053 cv
543.719 798.548 544.842 797.749 544.845 796.27 cv
544.845 796.258 li
544.848 794.777 543.73 793.177 542.349 792.682 cv
540.967 792.187 539.844 792.985 539.841 794.465 cv
539.841 794.477 li
cp
0 0 0 0 cmyk
f
549.908 758.92 mo
545.933 751.369 552.719 745.582 560.041 743.483 cv
569.864 740.668 574.067 736.274 570.418 730.641 cv
566.523 724.629 563.39 723.2 557.314 719.735 cv
565.08 720.683 573.357 725.37 576.216 729.32 cv
579.073 733.271 580.236 742.499 572.252 747.186 cv
566.282 750.69 557.616 754.702 563.059 762.617 cv
565.64 766.371 568.607 771.016 562.476 769.087 cv
556.343 767.159 552.323 763.508 549.908 758.92 cv
cp
.74902 0 1 0 cmyk
f
536.797 721.742 mo
528.319 733.878 554.989 732.38 546.441 746.772 cv
543.034 738.116 535.93 741.259 528.439 734.795 cv
523.556 730.58 528.257 724.615 536.797 721.742 cv
cp
f
548.072 724.908 mo
536.243 717.259 545.972 706.897 561.094 712.269 cv
555.886 711.947 545.404 716.033 548.072 724.908 cv
cp
f
1060.16 483.543 mo
1056.04 491.715 1055.61 500.328 1060.15 506.403 cv
1064.68 512.487 1067.65 514.521 1070.24 518.337 cv
1072.84 522.162 1071.2 540.279 1066.26 560.232 cv
1059.9 585.846 1042.78 599.148 1036.9 598.68 cv
1031.03 598.212 1017.23 589.689 1008.59 560.232 cv
1002.25 538.596 999.423 524.655 1003.56 518.337 cv
1007.7 512.028 1010 511.497 1014.38 505.827 cv
1018.75 500.148 1018.39 492.273 1014.32 483.543 cv
1060.16 483.543 li
.137255 0 .0117647 0 cmyk
f
1003.79 542.219 mo
1025.81 547.251 1047.84 548.149 1069.86 542.639 cv
1068.99 548.085 1067.77 554.071 1066.25 560.233 cv
1059.9 585.854 1044.49 598.905 1036.91 598.682 cv
1029.33 598.459 1017.23 589.698 1008.59 560.233 cv
1006.61 553.479 1004.98 547.475 1003.79 542.219 cv
cp
.572549 .172549 0 0 cmyk
f
1057.08 482.778 mo
1053.49 489.87 1053.13 503.055 1057.06 508.329 cv
1060.99 513.612 1063.74 515.691 1065.82 518.877 cv
1067.91 522.063 1063.7 554.409 1058.7 566.316 cv
1053.7 578.223 1044.75 586.611 1036.87 586.467 cv
1029.01 586.314 1022.4 579.267 1016.64 566.316 cv
1010.87 553.356 1005.7 521.784 1007.94 518.508 cv
1010.19 515.223 1013.53 512.748 1017.33 507.825 cv
1021.13 502.902 1020.81 490.356 1017.27 482.778 cv
1057.08 482.778 li
f
1006.68 520.2 mo
1040.03 521.262 li
1067.2 520.767 li
1069.26 524.592 1064.87 557.928 1059.69 570.267 cv
1054.46 582.723 1045.11 591.498 1036.87 591.345 cv
1028.65 591.192 1021.73 583.821 1015.7 570.267 cv
1009.68 556.722 1004.27 523.71 1006.61 520.272 cv
1006.68 520.2 li
.690196 .364706 0 0 cmyk
f
1006.67 520.2 mo
1006.61 520.272 li
1004.26 523.701 1009.68 556.713 1015.71 570.267 cv
1021.73 583.812 1028.65 591.192 1036.88 591.345 cv
1045.11 591.507 1054.47 582.714 1059.7 570.267 cv
1064.88 557.919 1069.27 524.601 1067.21 520.776 cv
1067.09 520.776 li
1067.06 530.991 1063.4 554.886 1059.22 564.849 cv
1054.1 577.053 1043.98 580.248 1036.88 580.113 cv
1029.78 579.978 1022.03 578.124 1016.13 564.849 cv
1011.28 553.95 1006.85 530.208 1006.69 520.2 cv
1006.67 520.2 li
.839216 .670588 0 0 cmyk
f
1036.5 513.639 mo
1048.6 513.639 1059.2 515.295 1065.07 517.779 cv
1065.9 518.715 1066.64 519.633 1067.32 520.659 cv
1067.72 521.271 1067.9 522.927 1067.89 525.294 cv
1063.19 528.606 1050.91 530.937 1036.5 530.937 cv
1022.85 530.937 1011.12 528.831 1005.93 525.789 cv
1005.81 522.981 1005.96 520.983 1006.45 520.272 cv
1007.12 519.309 1007.88 518.4 1008.71 517.491 cv
1014.71 515.169 1024.91 513.639 1036.5 513.639 cv
.482353 0 .0352941 0 cmyk
f
1015.57 531.806 mo
1014.2 531.806 1012.88 531.311 1011.79 530.28 cv
1011.02 529.549 1010.45 528.624 1010.08 527.589 cv
1012.83 528.509 1016.29 529.279 1020.23 529.848 cv
1018.83 531.131 1017.17 531.806 1015.57 531.806 cv
.14902 .0235294 0 0 cmyk
f
1015.12 515.645 mo
1015.89 515.336 1016.68 515.177 1017.45 515.177 cv
1017.47 515.177 1017.48 515.177 1017.49 515.177 cv
1016.68 515.324 1015.89 515.481 1015.12 515.645 cv
.121569 .00784314 0 0 cmyk
f
1020.23 529.848 mo
1016.29 529.279 1012.83 528.509 1010.08 527.589 cv
1009.12 524.876 1009.56 521.407 1011.44 518.697 cv
1012.46 517.227 1013.76 516.196 1015.12 515.645 cv
1015.89 515.481 1016.68 515.324 1017.49 515.177 cv
1018.85 515.187 1020.16 515.681 1021.24 516.699 cv
1024.04 519.354 1024.19 524.538 1021.59 528.291 cv
1021.18 528.882 1020.72 529.402 1020.23 529.848 cv
.101961 0 .00784314 0 cmyk
f
1020.48 562.643 mo
1020.48 565.748 1023 568.266 1026.1 568.266 cv
1029.21 568.266 1031.73 565.748 1031.73 562.643 cv
1031.73 559.536 1029.21 557.019 1026.1 557.019 cv
1023 557.019 1020.48 559.536 1020.48 562.643 cv
cp
.482353 0 .0352941 0 cmyk
f
1046.68 554.136 mo
1046.68 555.47 1047.76 556.552 1049.09 556.552 cv
1050.43 556.552 1051.51 555.47 1051.51 554.136 cv
1051.51 552.802 1050.43 551.721 1049.09 551.721 cv
1047.76 551.721 1046.68 552.802 1046.68 554.136 cv
cp
f
1055.23 533.906 mo
1055.23 535.063 1056.17 535.999 1057.32 535.999 cv
1058.48 535.999 1059.41 535.063 1059.41 533.906 cv
1059.41 532.751 1058.48 531.814 1057.32 531.814 cv
1056.17 531.814 1055.23 532.751 1055.23 533.906 cv
cp
f
1035.15 543.451 mo
1035.15 544.817 1036.26 545.925 1037.63 545.925 cv
1038.99 545.925 1040.1 544.817 1040.1 543.451 cv
1040.1 542.086 1038.99 540.979 1037.63 540.979 cv
1036.26 540.979 1035.15 542.086 1035.15 543.451 cv
cp
f
1025.1 537.448 mo
1025.1 538.221 1025.73 538.847 1026.5 538.847 cv
1027.27 538.847 1027.9 538.221 1027.9 537.448 cv
1027.9 536.677 1027.27 536.051 1026.5 536.051 cv
1025.73 536.051 1025.1 536.677 1025.1 537.448 cv
cp
f
1063.46 480.666 mo
1038.4 488.466 1023.36 485.495 1010.06 480.666 cv
1010.06 480.666 1011.12 490.184 1014.58 493.57 cv
1018.04 496.957 1027.53 498.063 1037.12 497.965 cv
1046.63 497.868 1055.48 496.101 1058.94 493.57 cv
1062.41 491.04 1063.46 480.666 1063.46 480.666 cv
cp
.137255 0 .0117647 0 cmyk
f
1061.36 480.999 mo
1038.27 488.188 1024.42 485.449 1012.16 480.999 cv
1012.16 480.999 1013.13 489.771 1016.32 492.892 cv
1019.51 496.013 1028.25 497.031 1037.09 496.941 cv
1045.85 496.852 1054.01 495.223 1057.2 492.892 cv
1060.4 490.56 1061.36 480.999 1061.36 480.999 cv
cp
.4 .0666667 0 0 cmyk
f
1010.09 480.75 mo
1010.09 484.875 1022.03 488.219 1036.76 488.219 cv
1051.49 488.219 1063.43 484.875 1063.43 480.75 cv
1063.43 476.626 1051.49 473.282 1036.76 473.282 cv
1022.03 473.282 1010.09 476.626 1010.09 480.75 cv
cp
.137255 0 .0117647 0 cmyk
f
1014.37 480.262 mo
1014.37 483.725 1024.39 486.532 1036.76 486.532 cv
1049.13 486.532 1059.15 483.725 1059.15 480.262 cv
1059.15 476.799 1049.13 473.991 1036.76 473.991 cv
1024.39 473.991 1014.37 476.799 1014.37 480.262 cv
cp
.4 .0666667 0 0 cmyk
f
1017.18 479.833 mo
1017.18 482.938 1025.95 485.455 1036.76 485.455 cv
1047.57 485.455 1056.34 482.938 1056.34 479.833 cv
1056.34 476.728 1047.57 474.211 1036.76 474.211 cv
1025.95 474.211 1017.18 476.728 1017.18 479.833 cv
cp
.572549 .172549 0 0 cmyk
f
1036.76 474.215 mo
1025.94 474.215 1017.18 476.735 1017.18 479.841 cv
1017.18 480.522 1017.64 481.159 1018.42 481.764 cv
1021.18 479.62 1028.33 478.118 1036.76 478.118 cv
1045.18 478.118 1052.37 479.62 1055.13 481.764 cv
1055.9 481.159 1056.33 480.522 1056.33 479.841 cv
1056.33 476.735 1047.57 474.215 1036.76 474.215 cv
cp
.137255 0 .0117647 0 cmyk
f
1051.41 462.125 mo
1054.05 463.955 li
1054.05 463.955 1053.19 484.928 1047.11 490.884 cv
1041.03 496.84 1033.81 497.231 1027.25 492.061 cv
1020.69 486.889 1019.62 464.217 1019.62 464.217 cv
1024.2 462.387 li
1051.41 462.125 li
cp
.415686 .737255 .964706 .54902 cmyk
f
1019.29 463.281 mo
1019.29 464.175 1019.78 465.025 1020.66 465.8 cv
1021.54 466.573 1022.82 467.271 1024.4 467.855 cv
1025.2 468.148 1026.06 475.211 1026.99 475.443 cv
1027.92 475.676 1028.91 469.078 1029.96 469.242 cv
1032.05 469.569 1034.35 469.75 1036.76 469.75 cv
1039.17 469.75 1041.47 469.569 1043.56 469.242 cv
1045.65 468.915 1047.53 468.441 1049.12 467.855 cv
1049.91 467.563 1050.62 472.341 1051.25 471.996 cv
1051.88 471.652 1052.42 466.187 1052.86 465.8 cv
1053.74 465.025 1054.23 464.175 1054.23 463.281 cv
1054.23 459.709 1046.41 456.813 1036.76 456.813 cv
1027.11 456.813 1019.29 459.709 1019.29 463.281 cv
cp
.286275 .733333 1 .227451 cmyk
f
1058.54 476.97 mo
1061.6 478.187 1063.42 479.661 1063.42 481.264 cv
1063.42 485.388 1051.48 488.729 1036.75 488.729 cv
1022.02 488.729 1010.1 485.388 1010.1 481.264 cv
1010.1 479.661 1011.92 478.187 1014.99 476.97 cv
1014.59 477.581 1014.37 478.225 1014.37 478.88 cv
1014.37 483.393 1024.39 487.047 1036.75 487.047 cv
1049.12 487.047 1059.15 483.393 1059.15 478.88 cv
1059.15 478.225 1058.94 477.581 1058.54 476.97 cv
cp
.137255 0 .0117647 0 cmyk
f
1017.8 490.063 mo
1017.8 491.544 1018.92 493.144 1020.3 493.635 cv
1021.68 494.127 1022.8 493.325 1022.8 491.844 cv
1022.8 490.362 1021.68 488.764 1020.3 488.271 cv
1018.92 487.78 1017.8 488.582 1017.8 490.063 cv
cp
0 0 0 0 cmyk
f
1160.18 483.543 mo
1156.06 491.715 1155.64 500.328 1160.16 506.403 cv
1164.7 512.487 1167.68 514.521 1170.26 518.337 cv
1172.85 522.162 1171.22 540.279 1166.27 560.223 cv
1159.93 585.846 1142.79 599.148 1136.92 598.68 cv
1131.06 598.212 1117.26 589.689 1108.61 560.223 cv
1102.27 538.587 1099.45 524.655 1103.59 518.337 cv
1107.73 512.028 1110.01 511.497 1114.4 505.827 cv
1118.78 500.148 1118.41 492.273 1114.33 483.543 cv
1160.18 483.543 li
.137255 0 .0117647 0 cmyk
f
1103.81 542.219 mo
1125.83 547.251 1147.86 548.149 1169.88 542.639 cv
1169.01 548.084 1167.8 554.071 1166.27 560.233 cv
1159.92 585.854 1144.52 598.905 1136.93 598.682 cv
1129.35 598.459 1117.26 589.698 1108.61 560.233 cv
1106.63 553.479 1105 547.475 1103.81 542.219 cv
cp
.572549 .172549 0 0 cmyk
f
1157.09 482.778 mo
1153.52 489.87 1153.14 503.055 1157.08 508.329 cv
1161.02 513.612 1163.76 515.691 1165.85 518.877 cv
1167.94 522.063 1163.73 554.409 1158.72 566.316 cv
1153.73 578.223 1144.76 586.62 1136.9 586.467 cv
1129.03 586.314 1122.42 579.267 1116.66 566.316 cv
1110.9 553.356 1105.72 521.784 1107.96 518.508 cv
1110.21 515.223 1113.55 512.748 1117.35 507.825 cv
1121.16 502.902 1120.83 490.356 1117.3 482.778 cv
1157.09 482.778 li
f
1106.69 520.2 mo
1140.05 521.262 li
1167.23 520.767 li
1169.28 524.592 1164.9 557.928 1159.71 570.267 cv
1154.48 582.723 1145.12 591.498 1136.9 591.345 cv
1128.67 591.192 1121.75 583.821 1115.73 570.267 cv
1109.71 556.722 1104.29 523.71 1106.64 520.272 cv
1106.69 520.2 li
.690196 .364706 0 0 cmyk
f
1106.68 520.2 mo
1106.64 520.272 li
1104.29 523.701 1109.71 556.713 1115.73 570.267 cv
1121.76 583.812 1128.67 591.192 1136.9 591.345 cv
1145.13 591.507 1154.48 582.714 1159.72 570.267 cv
1164.91 557.919 1169.29 524.601 1167.24 520.776 cv
1167.11 520.776 li
1167.08 530.991 1163.43 554.886 1159.24 564.849 cv
1154.12 577.053 1144 580.248 1136.9 580.113 cv
1129.81 579.978 1122.06 578.124 1116.15 564.849 cv
1111.3 553.95 1106.86 530.208 1106.7 520.2 cv
1106.68 520.2 li
.839216 .670588 0 0 cmyk
f
1136.53 513.639 mo
1148.62 513.639 1159.23 515.295 1165.09 517.779 cv
1165.91 518.715 1166.67 519.633 1167.34 520.659 cv
1167.75 521.271 1167.92 522.927 1167.91 525.294 cv
1163.21 528.606 1150.93 530.937 1136.53 530.937 cv
1122.88 530.937 1111.15 528.831 1105.96 525.789 cv
1105.84 522.981 1105.98 520.983 1106.47 520.272 cv
1107.13 519.309 1107.9 518.4 1108.74 517.491 cv
1114.73 515.169 1124.94 513.639 1136.53 513.639 cv
.482353 0 .0352941 0 cmyk
f
1115.6 531.806 mo
1114.23 531.806 1112.9 531.311 1111.81 530.28 cv
1111.04 529.549 1110.47 528.623 1110.1 527.587 cv
1112.85 528.507 1116.3 529.278 1120.25 529.847 cv
1118.85 531.131 1117.2 531.806 1115.6 531.806 cv
.14902 .0235294 0 0 cmyk
f
1115.15 515.645 mo
1115.91 515.336 1116.7 515.177 1117.47 515.177 cv
1117.49 515.177 1117.5 515.177 1117.51 515.177 cv
1116.7 515.324 1115.91 515.48 1115.15 515.645 cv
.121569 .00784314 0 0 cmyk
f
1120.25 529.847 mo
1116.3 529.278 1112.85 528.507 1110.1 527.587 cv
1109.13 524.874 1109.58 521.406 1111.46 518.697 cv
1112.49 517.226 1113.78 516.196 1115.15 515.645 cv
1115.91 515.48 1116.7 515.324 1117.51 515.177 cv
1118.87 515.187 1120.18 515.681 1121.26 516.699 cv
1124.06 519.354 1124.22 524.538 1121.61 528.291 cv
1121.2 528.882 1120.74 529.401 1120.25 529.847 cv
.101961 0 .00784314 0 cmyk
f
1120.5 562.643 mo
1120.5 565.748 1123.01 568.27 1126.12 568.274 cv
1129.22 568.279 1131.74 565.766 1131.75 562.66 cv
1131.75 562.643 li
1131.75 559.536 1129.24 557.015 1126.13 557.01 cv
1123.03 557.005 1120.51 559.519 1120.5 562.624 cv
1120.5 562.643 li
cp
.482353 0 .0352941 0 cmyk
f
1146.7 554.136 mo
1146.7 555.471 1147.78 556.554 1149.11 556.556 cv
1150.44 556.558 1151.53 555.478 1151.53 554.144 cv
1151.53 554.136 li
1151.53 552.802 1150.45 551.719 1149.12 551.717 cv
1147.78 551.715 1146.7 552.794 1146.7 554.129 cv
1146.7 554.136 li
cp
f
1155.25 533.906 mo
1155.25 535.063 1156.19 535.999 1157.34 535.999 cv
1158.5 535.999 1159.44 535.063 1159.44 533.906 cv
1159.44 532.751 1158.5 531.814 1157.34 531.814 cv
1156.19 531.814 1155.25 532.751 1155.25 533.906 cv
cp
f
1135.17 543.451 mo
1135.17 544.817 1136.28 545.925 1137.65 545.925 cv
1139.01 545.925 1140.12 544.817 1140.12 543.451 cv
1140.12 542.086 1139.01 540.979 1137.65 540.979 cv
1136.28 540.979 1135.17 542.086 1135.17 543.451 cv
cp
f
1125.13 537.448 mo
1125.13 538.221 1125.75 538.847 1126.52 538.847 cv
1127.3 538.847 1127.92 538.221 1127.92 537.448 cv
1127.92 536.677 1127.3 536.051 1126.52 536.051 cv
1125.75 536.051 1125.13 536.677 1125.13 537.448 cv
cp
f
1163.48 480.666 mo
1138.42 488.466 1123.39 485.495 1110.08 480.666 cv
1110.08 480.666 1111.14 490.184 1114.6 493.57 cv
1118.06 496.957 1127.55 498.063 1137.14 497.965 cv
1146.65 497.868 1155.5 496.101 1158.97 493.57 cv
1162.43 491.04 1163.48 480.666 1163.48 480.666 cv
cp
.137255 0 .0117647 0 cmyk
f
1161.39 480.999 mo
1138.29 488.188 1124.44 485.449 1112.18 480.999 cv
1112.18 480.999 1113.15 489.771 1116.34 492.892 cv
1119.53 496.013 1128.27 497.031 1137.12 496.94 cv
1145.87 496.852 1154.03 495.223 1157.22 492.892 cv
1160.42 490.56 1161.39 480.999 1161.39 480.999 cv
cp
.4 .0666667 0 0 cmyk
f
1110.11 480.75 mo
1110.11 484.875 1122.05 488.219 1136.78 488.219 cv
1151.51 488.219 1163.45 484.875 1163.45 480.75 cv
1163.45 476.626 1151.51 473.282 1136.78 473.282 cv
1122.05 473.282 1110.11 476.626 1110.11 480.75 cv
cp
.137255 0 .0117647 0 cmyk
f
1114.39 480.262 mo
1114.39 483.725 1124.42 486.532 1136.78 486.532 cv
1149.15 486.532 1159.17 483.725 1159.17 480.262 cv
1159.17 476.799 1149.15 473.991 1136.78 473.991 cv
1124.42 473.991 1114.39 476.799 1114.39 480.262 cv
cp
.4 .0666667 0 0 cmyk
f
1117.2 479.833 mo
1117.2 482.938 1125.97 485.455 1136.78 485.455 cv
1147.6 485.455 1156.36 482.938 1156.36 479.833 cv
1156.36 476.728 1147.6 474.211 1136.78 474.211 cv
1125.97 474.211 1117.2 476.728 1117.2 479.833 cv
cp
.572549 .172549 0 0 cmyk
f
1136.78 474.215 mo
1125.96 474.215 1117.2 476.735 1117.2 479.841 cv
1117.2 480.522 1117.66 481.159 1118.44 481.764 cv
1121.2 479.62 1128.35 478.118 1136.78 478.118 cv
1145.2 478.118 1152.39 479.62 1155.15 481.764 cv
1155.92 481.159 1156.36 480.522 1156.36 479.841 cv
1156.36 476.735 1147.59 474.215 1136.78 474.215 cv
cp
.137255 0 .0117647 0 cmyk
f
1158.56 476.97 mo
1161.63 478.187 1163.45 479.66 1163.45 481.264 cv
1163.45 485.388 1151.5 488.729 1136.78 488.729 cv
1122.05 488.729 1110.12 485.388 1110.12 481.264 cv
1110.12 479.66 1111.94 478.187 1115.01 476.97 cv
1114.61 477.581 1114.4 478.225 1114.4 478.88 cv
1114.4 483.393 1124.41 487.047 1136.78 487.047 cv
1149.14 487.047 1159.17 483.393 1159.17 478.88 cv
1159.17 478.225 1158.96 477.581 1158.56 476.97 cv
cp
f
1117.82 490.063 mo
1117.82 491.543 1118.93 493.145 1120.31 493.639 cv
1121.7 494.134 1122.82 493.336 1122.82 491.855 cv
1122.82 491.844 li
1122.83 490.364 1121.71 488.763 1120.33 488.268 cv
1118.94 487.772 1117.82 488.571 1117.82 490.051 cv
1117.82 490.063 li
cp
0 0 0 0 cmyk
f
1127.89 454.507 mo
1123.91 446.956 1130.7 441.168 1138.02 439.07 cv
1147.84 436.255 1152.04 431.861 1148.4 426.227 cv
1144.5 420.215 1141.37 418.787 1135.29 415.322 cv
1143.06 416.27 1151.33 420.957 1154.19 424.907 cv
1157.05 428.857 1158.21 438.085 1150.23 442.772 cv
1144.26 446.277 1135.59 450.288 1141.04 458.203 cv
1143.62 461.958 1146.59 466.602 1140.45 464.674 cv
1134.32 462.745 1130.3 459.094 1127.89 454.507 cv
cp
.690196 .364706 0 0 cmyk
f
1114.78 417.329 mo
1106.3 429.465 1132.97 427.967 1124.42 442.358 cv
1121.01 433.703 1113.91 436.845 1106.42 430.381 cv
1101.53 426.167 1106.23 420.202 1114.78 417.329 cv
1114.78 417.329 li
cp
f
1126.05 420.495 mo
1114.22 412.845 1123.95 402.484 1139.07 407.855 cv
1133.86 407.534 1123.38 411.62 1126.05 420.495 cv
cp
f
191.763 172.089 mo
187.641 180.261 187.209 188.874 191.745 194.949 cv
196.281 201.033 199.251 203.067 201.843 206.883 cv
204.435 210.708 202.797 228.825 197.856 248.769 cv
191.502 274.392 174.375 287.694 168.507 287.226 cv
162.63 286.758 148.833 278.235 140.193 248.769 cv
133.848 227.133 131.031 213.201 135.162 206.883 cv
139.302 200.574 141.597 200.043 145.98 194.373 cv
150.363 188.694 149.985 180.819 145.917 172.089 cv
191.763 172.089 li
.137255 0 .0117647 0 cmyk
f
135.391 230.763 mo
157.41 235.796 179.44 236.694 201.458 231.184 cv
200.589 236.629 199.375 242.616 197.848 248.778 cv
191.498 274.398 176.095 287.45 168.512 287.227 cv
160.93 287.003 148.835 278.243 140.193 248.778 cv
138.212 242.024 136.581 236.02 135.391 230.763 cv
cp
.572549 .172549 0 0 cmyk
f
188.676 171.324 mo
185.094 178.416 184.725 191.601 188.667 196.875 cv
192.6 202.158 195.336 204.237 197.424 207.423 cv
199.521 210.609 195.3 242.955 190.305 254.862 cv
185.301 266.769 176.346 275.157 168.48 275.013 cv
160.605 274.86 153.999 267.813 148.239 254.862 cv
142.479 241.902 137.295 210.33 139.545 207.054 cv
141.786 203.769 145.125 201.294 148.932 196.371 cv
152.73 191.448 152.415 178.902 148.878 171.324 cv
188.676 171.324 li
f
138.276 208.746 mo
171.63 209.808 li
198.81 209.313 li
200.862 213.138 196.479 246.474 191.295 258.813 cv
186.066 271.269 176.706 280.044 168.48 279.891 cv
160.245 279.729 153.333 272.358 147.312 258.813 cv
141.282 245.268 135.873 212.247 138.222 208.818 cv
138.276 208.746 li
.87451 .811765 0 0 cmyk
f
138.267 208.746 mo
138.213 208.809 li
135.864 212.247 141.291 245.259 147.312 258.813 cv
153.333 272.358 160.254 279.738 168.48 279.891 cv
176.706 280.053 186.066 271.26 191.295 258.813 cv
196.479 246.465 200.871 213.147 198.819 209.322 cv
198.693 209.322 li
198.666 219.537 195.012 243.432 190.827 253.395 cv
185.697 265.599 175.581 268.794 168.48 268.659 cv
161.379 268.524 153.63 266.67 147.735 253.395 cv
142.884 242.496 138.447 218.754 138.285 208.746 cv
138.267 208.746 li
.996078 .980392 .270588 .152941 cmyk
f
168.111 202.185 mo
180.198 202.185 190.8 203.841 196.677 206.325 cv
197.496 207.261 198.243 208.179 198.918 209.205 cv
199.323 209.817 199.503 211.473 199.494 213.84 cv
194.787 217.143 182.511 219.483 168.111 219.483 cv
154.449 219.483 142.722 217.368 137.538 214.335 cv
137.421 211.527 137.565 209.529 138.051 208.818 cv
138.717 207.846 139.482 206.946 140.319 206.037 cv
146.313 203.715 156.519 202.185 168.111 202.185 cv
.423529 .4 0 0 cmyk
f
147.179 220.348 mo
145.809 220.348 144.479 219.854 143.388 218.826 cv
142.614 218.094 142.042 217.167 141.675 216.129 cv
144.429 217.049 147.884 217.821 151.835 218.392 cv
150.435 219.675 148.779 220.349 147.179 220.348 cv
.129412 .101961 .0117647 0 cmyk
f
146.721 204.193 mo
147.488 203.883 148.277 203.723 149.053 203.723 cv
149.068 203.723 149.082 203.723 149.097 203.724 cv
148.278 203.871 147.484 204.027 146.721 204.193 cv
.121569 .00784314 0 0 cmyk
f
151.835 218.392 mo
147.884 217.821 144.429 217.049 141.675 216.129 cv
140.716 213.417 141.158 209.951 143.046 207.243 cv
144.064 205.774 145.357 204.744 146.721 204.193 cv
147.484 204.027 148.278 203.871 149.097 203.724 cv
150.451 203.734 151.762 204.228 152.838 205.245 cv
155.637 207.9 155.799 213.084 153.189 216.837 cv
152.778 217.427 152.322 217.946 151.835 218.392 cv
.0627451 .0627451 0 0 cmyk
f
152.081 251.187 mo
152.081 254.293 154.599 256.811 157.704 256.811 cv
160.81 256.811 163.328 254.293 163.328 251.187 cv
163.328 248.082 160.81 245.563 157.704 245.563 cv
154.599 245.563 152.081 248.082 152.081 251.187 cv
cp
.423529 .4 0 0 cmyk
f
178.278 242.681 mo
178.278 244.015 179.359 245.097 180.693 245.097 cv
182.027 245.097 183.109 244.015 183.109 242.681 cv
183.109 241.347 182.027 240.265 180.693 240.265 cv
179.359 240.265 178.278 241.347 178.278 242.681 cv
cp
f
186.83 222.452 mo
186.83 223.607 187.767 224.544 188.922 224.544 cv
190.078 224.544 191.015 223.607 191.015 222.452 cv
191.015 221.296 190.078 220.359 188.922 220.359 cv
187.767 220.359 186.83 221.296 186.83 222.452 cv
cp
f
166.754 231.997 mo
166.754 233.362 167.861 234.469 169.227 234.469 cv
170.592 234.469 171.7 233.362 171.7 231.997 cv
171.7 230.631 170.592 229.523 169.227 229.523 cv
167.861 229.523 166.754 230.631 166.754 231.997 cv
cp
f
156.706 225.993 mo
156.706 226.766 157.331 227.391 158.103 227.391 cv
158.875 227.391 159.501 226.766 159.501 225.993 cv
159.501 225.222 158.875 224.596 158.103 224.596 cv
157.331 224.596 156.706 225.222 156.706 225.993 cv
cp
f
195.061 169.21 mo
169.999 177.011 154.965 174.04 141.662 169.21 cv
141.662 169.21 142.716 178.729 146.178 182.115 cv
149.639 185.502 159.126 186.608 168.723 186.51 cv
178.227 186.413 187.077 184.646 190.545 182.115 cv
194.013 179.585 195.061 169.21 195.061 169.21 cv
cp
.137255 0 .0117647 0 cmyk
f
192.965 169.544 mo
169.871 176.732 156.017 173.995 143.757 169.544 cv
143.757 169.544 144.729 178.315 147.918 181.436 cv
151.108 184.557 159.851 185.576 168.694 185.486 cv
177.452 185.396 185.608 183.768 188.804 181.436 cv
192 179.104 192.965 169.544 192.965 169.544 cv
cp
.4 .0666667 0 0 cmyk
f
141.693 169.295 mo
141.693 173.42 153.633 176.764 168.361 176.764 cv
183.089 176.764 195.029 173.42 195.029 169.295 cv
195.029 165.171 183.089 161.827 168.361 161.827 cv
153.633 161.827 141.693 165.171 141.693 169.295 cv
cp
.137255 0 .0117647 0 cmyk
f
145.971 168.807 mo
145.971 172.27 155.995 175.077 168.361 175.077 cv
180.728 175.077 190.752 172.27 190.752 168.807 cv
190.752 165.344 180.728 162.536 168.361 162.536 cv
155.995 162.536 145.971 165.344 145.971 168.807 cv
cp
.4 .0666667 0 0 cmyk
f
148.781 168.378 mo
148.781 171.483 157.547 174 168.361 174 cv
179.175 174 187.942 171.483 187.942 168.378 cv
187.942 165.272 179.175 162.755 168.361 162.755 cv
157.547 162.755 148.781 165.272 148.781 168.378 cv
cp
.572549 .172549 0 0 cmyk
f
168.358 162.759 mo
157.544 162.759 148.782 165.28 148.782 168.385 cv
148.782 169.067 149.242 169.704 150.017 170.309 cv
152.779 168.165 159.934 166.663 168.358 166.663 cv
176.784 166.663 183.967 168.165 186.729 170.309 cv
187.503 169.704 187.935 169.067 187.935 168.385 cv
187.935 165.28 179.172 162.759 168.358 162.759 cv
cp
.137255 0 .0117647 0 cmyk
f
183.016 150.67 mo
185.654 152.5 li
185.654 152.5 184.796 173.472 178.711 179.429 cv
172.627 185.385 165.416 185.776 158.855 180.605 cv
152.294 175.434 151.218 152.762 151.218 152.762 cv
155.8 150.932 li
183.016 150.67 li
cp
.415686 .737255 .964706 .54902 cmyk
f
150.888 151.826 mo
150.888 152.72 151.377 153.57 152.262 154.344 cv
153.146 155.118 154.425 155.815 156.006 156.401 cv
156.796 156.693 157.663 163.755 158.592 163.988 cv
159.521 164.221 160.515 157.624 161.56 157.787 cv
163.65 158.114 165.949 158.295 168.361 158.295 cv
170.774 158.295 173.072 158.114 175.163 157.787 cv
177.253 157.46 179.136 156.986 180.717 156.401 cv
181.507 156.108 182.222 160.886 182.85 160.542 cv
183.478 160.197 184.019 154.731 184.461 154.344 cv
185.345 153.57 185.834 152.72 185.834 151.826 cv
185.834 148.254 178.011 145.357 168.361 145.357 cv
158.711 145.357 150.888 148.254 150.888 151.826 cv
cp
.286275 .733333 1 .227451 cmyk
f
190.137 165.515 mo
193.206 166.731 195.026 168.206 195.026 169.809 cv
195.026 173.933 183.083 177.274 168.354 177.274 cv
153.626 177.274 141.7 173.933 141.7 169.809 cv
141.7 168.206 143.52 166.731 146.589 165.515 cv
146.189 166.126 145.976 166.77 145.976 167.425 cv
145.976 171.938 155.988 175.591 168.354 175.591 cv
180.72 175.591 190.75 171.938 190.75 167.425 cv
190.75 166.77 190.537 166.126 190.137 165.515 cv
cp
.137255 0 .0117647 0 cmyk
f
149.398 178.608 mo
149.398 180.089 150.518 181.688 151.9 182.18 cv
153.282 182.672 154.402 181.87 154.402 180.389 cv
154.402 178.908 153.282 177.309 151.9 176.817 cv
150.518 176.325 149.398 177.127 149.398 178.608 cv
cp
0 0 0 0 cmyk
f
291.789 172.089 mo
287.658 180.261 287.235 188.874 291.771 194.949 cv
296.298 201.033 299.277 203.067 301.869 206.883 cv
304.452 210.708 302.823 228.825 297.873 248.769 cv
291.528 274.392 274.401 287.694 268.524 287.226 cv
262.656 286.758 248.859 278.235 240.219 248.769 cv
233.874 227.133 231.048 213.201 235.188 206.883 cv
239.328 200.574 241.623 200.043 245.997 194.373 cv
250.38 188.694 250.011 180.819 245.934 172.089 cv
291.789 172.089 li
.137255 0 .0117647 0 cmyk
f
235.413 230.763 mo
257.432 235.795 279.462 236.694 301.48 231.184 cv
300.611 236.629 299.397 242.616 297.87 248.778 cv
291.521 274.398 276.117 287.45 268.534 287.227 cv
260.952 287.004 248.857 278.243 240.215 248.778 cv
238.234 242.024 236.603 236.02 235.414 230.763 cv
235.413 230.763 li
cp
.572549 .172549 0 0 cmyk
f
288.702 171.324 mo
285.12 178.416 284.751 191.601 288.684 196.875 cv
292.617 202.158 295.362 204.237 297.45 207.423 cv
299.538 210.609 295.326 242.955 290.322 254.862 cv
285.327 266.769 276.372 275.157 268.497 275.013 cv
260.631 274.86 254.016 267.813 248.256 254.862 cv
242.496 241.902 237.321 210.33 239.562 207.054 cv
241.812 203.769 245.151 201.294 248.949 196.371 cv
252.756 191.448 252.432 178.902 248.895 171.324 cv
288.702 171.324 li
f
238.293 208.746 mo
271.647 209.808 li
298.827 209.313 li
300.879 213.138 296.496 246.474 291.312 258.813 cv
286.083 271.269 276.732 280.044 268.497 279.891 cv
260.271 279.729 253.359 272.358 247.329 258.813 cv
241.308 245.268 235.89 212.247 238.239 208.818 cv
238.293 208.746 li
.87451 .811765 0 0 cmyk
f
238.293 208.746 mo
238.239 208.809 li
235.89 212.247 241.308 245.259 247.338 258.813 cv
253.359 272.358 260.271 279.738 268.506 279.891 cv
276.732 280.053 286.092 271.26 291.321 258.813 cv
296.505 246.465 300.888 213.147 298.836 209.322 cv
298.719 209.322 li
298.683 219.537 295.029 243.432 290.844 253.395 cv
285.723 265.599 275.598 268.794 268.506 268.659 cv
261.405 268.524 253.656 266.67 247.752 253.395 cv
242.91 242.496 238.464 218.754 238.311 208.746 cv
238.293 208.746 li
.996078 .980392 .270588 .152941 cmyk
f
268.128 202.185 mo
280.224 202.185 290.826 203.841 296.694 206.325 cv
297.522 207.261 298.269 208.179 298.944 209.205 cv
299.349 209.817 299.52 211.473 299.511 213.84 cv
294.813 217.143 282.537 219.483 268.128 219.483 cv
254.475 219.483 242.748 217.368 237.555 214.335 cv
237.438 211.527 237.582 209.529 238.068 208.818 cv
238.743 207.846 239.499 206.946 240.336 206.037 cv
246.339 203.715 256.536 202.185 268.128 202.185 cv
.423529 .4 0 0 cmyk
f
247.201 220.348 mo
245.83 220.348 244.502 219.854 243.414 218.826 cv
242.64 218.094 242.068 217.167 241.7 216.13 cv
244.454 217.049 247.908 217.821 251.856 218.391 cv
250.457 219.674 248.801 220.349 247.201 220.348 cv
.129412 .101961 .0117647 0 cmyk
f
246.743 204.192 mo
247.51 203.882 248.299 203.723 249.075 203.723 cv
249.089 203.723 249.103 203.723 249.118 203.723 cv
248.299 203.871 247.507 204.027 246.743 204.192 cv
.121569 .00784314 0 0 cmyk
f
251.856 218.391 mo
247.908 217.821 244.454 217.049 241.7 216.13 cv
240.738 213.418 241.175 209.952 243.063 207.243 cv
244.085 205.774 245.378 204.744 246.743 204.192 cv
247.507 204.027 248.299 203.871 249.118 203.723 cv
250.472 203.734 251.785 204.228 252.864 205.245 cv
255.663 207.9 255.816 213.084 253.206 216.837 cv
252.796 217.427 252.341 217.946 251.856 218.391 cv
.0627451 .0627451 0 0 cmyk
f
252.103 251.187 mo
252.098 254.293 254.611 256.814 257.717 256.819 cv
260.823 256.824 263.345 254.311 263.35 251.205 cv
263.35 251.187 li
263.354 248.082 260.841 245.56 257.735 245.555 cv
254.629 245.55 252.108 248.063 252.103 251.169 cv
252.103 251.187 li
cp
.423529 .4 0 0 cmyk
f
278.3 242.681 mo
278.298 244.015 279.377 245.099 280.711 245.101 cv
282.046 245.103 283.129 244.023 283.131 242.688 cv
283.131 242.681 li
283.133 241.347 282.053 240.264 280.719 240.262 cv
279.385 240.259 278.302 241.339 278.3 242.673 cv
278.3 242.681 li
cp
f
286.852 222.451 mo
286.852 223.607 287.789 224.544 288.944 224.544 cv
290.1 224.544 291.037 223.607 291.037 222.451 cv
291.037 221.296 290.1 220.359 288.944 220.359 cv
287.789 220.359 286.852 221.296 286.852 222.451 cv
cp
f
266.776 231.997 mo
266.776 233.362 267.883 234.469 269.249 234.469 cv
270.614 234.469 271.722 233.362 271.722 231.997 cv
271.722 230.631 270.614 229.523 269.249 229.523 cv
267.883 229.523 266.776 230.631 266.776 231.997 cv
cp
f
256.728 225.994 mo
256.728 226.766 257.354 227.392 258.125 227.392 cv
258.897 227.392 259.523 226.766 259.523 225.994 cv
259.523 225.222 258.897 224.596 258.125 224.596 cv
257.354 224.596 256.728 225.222 256.728 225.994 cv
cp
f
295.083 169.21 mo
270.021 177.011 254.987 174.04 241.684 169.21 cv
241.684 169.21 242.738 178.729 246.2 182.115 cv
249.661 185.502 259.148 186.608 268.745 186.51 cv
278.249 186.413 287.1 184.646 290.567 182.115 cv
294.035 179.585 295.083 169.21 295.083 169.21 cv
cp
.137255 0 .0117647 0 cmyk
f
292.988 169.544 mo
269.893 176.732 256.039 173.995 243.779 169.544 cv
243.779 169.544 244.751 178.315 247.94 181.436 cv
251.13 184.557 259.873 185.576 268.716 185.486 cv
277.475 185.396 285.63 183.768 288.826 181.436 cv
292.021 179.104 292.987 169.544 292.987 169.544 cv
292.988 169.544 li
cp
.4 .0666667 0 0 cmyk
f
241.715 169.295 mo
241.715 173.42 253.655 176.763 268.383 176.763 cv
283.112 176.763 295.051 173.42 295.051 169.295 cv
295.051 165.171 283.112 161.827 268.383 161.827 cv
253.655 161.827 241.715 165.171 241.715 169.295 cv
cp
.137255 0 .0117647 0 cmyk
f
245.993 168.807 mo
245.993 172.27 256.018 175.077 268.383 175.077 cv
280.75 175.077 290.774 172.27 290.774 168.807 cv
290.774 165.344 280.75 162.536 268.383 162.536 cv
256.018 162.536 245.993 165.344 245.993 168.807 cv
cp
.4 .0666667 0 0 cmyk
f
248.803 168.378 mo
248.803 171.483 257.569 174 268.383 174 cv
279.197 174 287.964 171.483 287.964 168.378 cv
287.964 165.272 279.197 162.755 268.383 162.755 cv
257.569 162.755 248.803 165.272 248.803 168.378 cv
cp
.572549 .172549 0 0 cmyk
f
268.38 162.759 mo
257.566 162.759 248.805 165.28 248.805 168.385 cv
248.805 169.067 249.265 169.704 250.039 170.309 cv
252.801 168.165 259.956 166.663 268.38 166.663 cv
276.806 166.663 283.989 168.165 286.751 170.309 cv
287.525 169.704 287.957 169.067 287.957 168.385 cv
287.957 165.28 279.195 162.759 268.38 162.759 cv
cp
.137255 0 .0117647 0 cmyk
f
290.159 165.515 mo
293.229 166.731 295.049 168.206 295.049 169.809 cv
295.049 173.933 283.105 177.274 268.376 177.274 cv
253.648 177.274 241.722 173.933 241.722 169.809 cv
241.722 168.206 243.542 166.731 246.611 165.515 cv
246.211 166.126 245.998 166.77 245.998 167.425 cv
245.998 171.938 256.011 175.591 268.376 175.591 cv
280.743 175.591 290.772 171.938 290.772 167.425 cv
290.772 166.77 290.559 166.126 290.159 165.515 cv
cp
f
249.42 178.608 mo
249.417 180.088 250.535 181.689 251.917 182.184 cv
253.298 182.679 254.421 181.881 254.424 180.401 cv
254.424 180.389 li
254.427 178.909 253.31 177.308 251.928 176.813 cv
250.546 176.318 249.423 177.116 249.42 178.596 cv
249.42 178.608 li
cp
0 0 0 0 cmyk
f
259.487 143.051 mo
255.512 135.5 262.298 129.713 269.62 127.615 cv
279.443 124.799 283.647 120.406 279.997 114.771 cv
276.103 108.76 272.969 107.331 266.894 103.866 cv
274.659 104.814 282.937 109.501 285.795 113.452 cv
288.653 117.402 289.815 126.63 281.832 131.317 cv
275.862 134.822 267.195 138.833 272.638 146.748 cv
275.219 150.502 278.188 155.147 272.055 153.218 cv
265.922 151.29 261.903 147.639 259.487 143.051 cv
cp
.87451 .811765 0 0 cmyk
f
246.376 105.874 mo
237.898 118.009 264.569 116.512 256.021 130.903 cv
252.613 122.248 245.509 125.39 238.019 118.926 cv
233.136 114.712 237.836 108.747 246.376 105.874 cv
cp
f
257.651 109.039 mo
245.823 101.39 255.551 91.0288 270.673 96.3999 cv
265.465 96.0791 254.984 100.165 257.651 109.039 cv
cp
f
481.23 172.089 mo
477.108 180.261 476.676 188.874 481.212 194.949 cv
485.748 201.033 488.718 203.067 491.31 206.883 cv
493.902 210.708 492.264 228.825 487.323 248.769 cv
480.969 274.392 463.842 287.694 457.974 287.226 cv
452.097 286.758 438.3 278.235 429.66 248.769 cv
423.315 227.133 420.489 213.201 424.629 206.883 cv
428.769 200.574 431.064 200.043 435.447 194.373 cv
439.83 188.694 439.452 180.819 435.384 172.089 cv
481.23 172.089 li
.137255 0 .0117647 0 cmyk
f
424.857 230.763 mo
446.876 235.796 468.906 236.694 490.924 231.184 cv
490.056 236.629 488.842 242.616 487.314 248.778 cv
480.965 274.398 465.561 287.45 457.979 287.227 cv
450.396 287.003 438.301 278.243 429.659 248.778 cv
427.678 242.024 426.047 236.02 424.857 230.763 cv
cp
.572549 .172549 0 0 cmyk
f
478.143 171.324 mo
474.561 178.416 474.192 191.601 478.125 196.875 cv
482.067 202.158 484.803 204.237 486.891 207.423 cv
488.988 210.609 484.767 242.955 479.772 254.862 cv
474.768 266.769 465.813 275.157 457.947 275.013 cv
450.072 274.86 443.466 267.813 437.706 254.862 cv
431.946 241.902 426.762 210.33 429.012 207.054 cv
431.253 203.769 434.592 201.294 438.399 196.371 cv
442.197 191.448 441.873 178.902 438.345 171.324 cv
478.143 171.324 li
f
427.743 208.746 mo
461.097 209.808 li
488.268 209.313 li
490.329 213.138 485.946 246.474 480.762 258.813 cv
475.533 271.269 466.173 280.044 457.938 279.891 cv
449.712 279.729 442.8 272.358 436.779 258.813 cv
430.749 245.268 425.34 212.247 427.689 208.818 cv
427.743 208.746 li
.764706 0 1 0 cmyk
f
427.734 208.746 mo
427.68 208.809 li
425.331 212.247 430.749 245.259 436.779 258.813 cv
442.8 272.358 449.721 279.738 457.947 279.891 cv
466.173 280.053 475.533 271.26 480.762 258.813 cv
485.946 246.465 490.338 213.147 488.277 209.322 cv
488.16 209.322 li
488.124 219.537 484.479 243.432 480.294 253.395 cv
475.164 265.599 465.048 268.794 457.947 268.659 cv
450.846 268.524 443.097 266.67 437.202 253.395 cv
432.351 242.496 427.914 218.754 427.752 208.746 cv
427.734 208.746 li
.843137 .168627 1 .0509804 cmyk
f
457.578 202.185 mo
469.665 202.185 480.267 203.841 486.135 206.325 cv
486.963 207.261 487.71 208.179 488.385 209.205 cv
488.79 209.817 488.97 211.473 488.961 213.84 cv
484.254 217.143 471.978 219.483 457.578 219.483 cv
443.916 219.483 432.189 217.368 426.996 214.335 cv
426.888 211.527 427.023 209.529 427.518 208.818 cv
428.184 207.846 428.949 206.946 429.786 206.037 cv
435.78 203.715 445.986 202.185 457.578 202.185 cv
.623529 0 1 0 cmyk
f
436.646 220.348 mo
435.276 220.348 433.946 219.854 432.855 218.826 cv
432.081 218.094 431.51 217.168 431.143 216.131 cv
433.897 217.05 437.353 217.822 441.302 218.392 cv
439.902 219.675 438.246 220.349 436.646 220.348 cv
.180392 0 .254902 0 cmyk
f
436.188 204.193 mo
436.955 203.883 437.744 203.723 438.52 203.723 cv
438.535 203.723 438.549 203.723 438.564 203.724 cv
437.745 203.871 436.951 204.027 436.188 204.193 cv
.121569 .00784314 0 0 cmyk
f
441.302 218.392 mo
437.353 217.822 433.897 217.05 431.143 216.131 cv
430.183 213.419 430.625 209.952 432.513 207.243 cv
433.531 205.774 434.824 204.744 436.188 204.193 cv
436.951 204.027 437.745 203.871 438.564 203.724 cv
439.918 203.734 441.229 204.228 442.305 205.245 cv
445.104 207.9 445.266 213.084 442.656 216.837 cv
442.245 217.427 441.789 217.946 441.302 218.392 cv
.14902 0 .223529 0 cmyk
f
441.547 251.187 mo
441.547 254.293 444.064 256.811 447.17 256.811 cv
450.276 256.811 452.794 254.293 452.794 251.187 cv
452.794 248.082 450.276 245.563 447.17 245.563 cv
444.064 245.563 441.547 248.082 441.547 251.187 cv
cp
.623529 0 1 0 cmyk
f
467.744 242.681 mo
467.744 244.015 468.825 245.097 470.159 245.097 cv
471.493 245.097 472.575 244.015 472.575 242.681 cv
472.575 241.347 471.493 240.265 470.159 240.265 cv
468.825 240.265 467.744 241.347 467.744 242.681 cv
cp
f
476.296 222.452 mo
476.296 223.607 477.233 224.544 478.389 224.544 cv
479.544 224.544 480.481 223.607 480.481 222.452 cv
480.481 221.296 479.544 220.359 478.389 220.359 cv
477.233 220.359 476.296 221.296 476.296 222.452 cv
cp
f
456.22 231.997 mo
456.22 233.362 457.327 234.469 458.692 234.469 cv
460.059 234.469 461.166 233.362 461.166 231.997 cv
461.166 230.631 460.059 229.523 458.692 229.523 cv
457.327 229.523 456.22 230.631 456.22 231.997 cv
cp
f
446.172 225.993 mo
446.172 226.766 446.798 227.391 447.569 227.391 cv
448.342 227.391 448.968 226.766 448.968 225.993 cv
448.968 225.222 448.342 224.596 447.569 224.596 cv
446.798 224.596 446.172 225.222 446.172 225.993 cv
cp
f
484.527 169.21 mo
459.465 177.011 444.432 174.04 431.128 169.21 cv
431.128 169.21 432.183 178.729 435.644 182.115 cv
439.105 185.502 448.593 186.608 458.188 186.51 cv
467.693 186.413 476.544 184.646 480.011 182.115 cv
483.479 179.585 484.527 169.21 484.527 169.21 cv
cp
.137255 0 .0117647 0 cmyk
f
482.432 169.544 mo
459.337 176.732 445.482 173.995 433.223 169.544 cv
433.223 169.544 434.195 178.315 437.385 181.436 cv
440.574 184.557 449.317 185.576 458.16 185.486 cv
466.919 185.396 475.074 183.768 478.271 181.436 cv
481.466 179.104 482.432 169.544 482.432 169.544 cv
cp
.4 .0666667 0 0 cmyk
f
431.159 169.295 mo
431.159 173.42 443.099 176.764 457.827 176.764 cv
472.556 176.764 484.495 173.42 484.495 169.295 cv
484.495 165.171 472.556 161.827 457.827 161.827 cv
443.099 161.827 431.159 165.171 431.159 169.295 cv
cp
.137255 0 .0117647 0 cmyk
f
435.437 168.807 mo
435.437 172.27 445.462 175.077 457.827 175.077 cv
470.193 175.077 480.218 172.27 480.218 168.807 cv
480.218 165.344 470.193 162.536 457.827 162.536 cv
445.462 162.536 435.437 165.344 435.437 168.807 cv
cp
.4 .0666667 0 0 cmyk
f
438.247 168.378 mo
438.247 171.483 447.014 174 457.827 174 cv
468.642 174 477.408 171.483 477.408 168.378 cv
477.408 165.272 468.642 162.755 457.827 162.755 cv
447.014 162.755 438.247 165.272 438.247 168.378 cv
cp
.572549 .172549 0 0 cmyk
f
457.824 162.759 mo
447.011 162.759 438.249 165.28 438.249 168.385 cv
438.249 169.067 438.709 169.704 439.482 170.309 cv
442.245 168.165 449.399 166.663 457.824 166.663 cv
466.25 166.663 473.433 168.165 476.195 170.309 cv
476.97 169.704 477.4 169.067 477.4 168.385 cv
477.4 165.28 468.639 162.759 457.824 162.759 cv
cp
.137255 0 .0117647 0 cmyk
f
472.482 150.67 mo
475.12 152.5 li
475.12 152.5 474.263 173.472 468.178 179.429 cv
462.093 185.385 454.882 185.776 448.321 180.605 cv
441.761 175.434 440.684 152.762 440.684 152.762 cv
445.267 150.932 li
472.482 150.67 li
cp
.415686 .737255 .964706 .54902 cmyk
f
440.354 151.826 mo
440.354 152.72 440.844 153.57 441.728 154.344 cv
442.612 155.118 443.892 155.815 445.473 156.401 cv
446.263 156.693 447.129 163.755 448.059 163.988 cv
448.988 164.221 449.981 157.624 451.026 157.787 cv
453.117 158.114 455.415 158.295 457.827 158.295 cv
460.24 158.295 462.538 158.114 464.629 157.787 cv
466.719 157.46 468.602 156.986 470.183 156.401 cv
470.974 156.108 471.688 160.886 472.316 160.542 cv
472.944 160.197 473.485 154.731 473.928 154.344 cv
474.812 153.57 475.301 152.72 475.301 151.826 cv
475.301 148.254 467.478 145.357 457.827 145.357 cv
448.178 145.357 440.354 148.254 440.354 151.826 cv
cp
.286275 .733333 1 .227451 cmyk
f
479.604 165.515 mo
482.672 166.731 484.493 168.206 484.493 169.809 cv
484.493 173.933 472.549 177.274 457.82 177.274 cv
443.093 177.274 431.166 173.933 431.166 169.809 cv
431.166 168.206 432.986 166.731 436.056 165.515 cv
435.655 166.126 435.442 166.77 435.442 167.425 cv
435.442 171.938 445.455 175.591 457.82 175.591 cv
470.187 175.591 480.217 171.938 480.217 167.425 cv
480.217 166.77 480.003 166.126 479.604 165.515 cv
cp
.137255 0 .0117647 0 cmyk
f
438.864 178.608 mo
438.864 180.089 439.984 181.688 441.366 182.18 cv
442.748 182.672 443.868 181.87 443.868 180.389 cv
443.868 178.908 442.748 177.309 441.366 176.817 cv
439.984 176.325 438.864 177.127 438.864 178.608 cv
cp
0 0 0 0 cmyk
f
581.256 172.089 mo
577.125 180.261 576.702 188.874 581.238 194.949 cv
585.765 201.033 588.744 203.067 591.336 206.883 cv
593.919 210.708 592.29 228.825 587.34 248.769 cv
580.995 274.392 563.868 287.694 557.991 287.226 cv
552.123 286.758 538.326 278.235 529.686 248.769 cv
523.341 227.133 520.515 213.201 524.655 206.883 cv
528.795 200.574 531.09 200.043 535.464 194.373 cv
539.847 188.694 539.478 180.819 535.401 172.089 cv
581.256 172.089 li
.137255 0 .0117647 0 cmyk
f
524.88 230.763 mo
546.897 235.795 568.928 236.694 590.946 231.184 cv
590.078 236.629 588.863 242.616 587.336 248.778 cv
580.986 274.398 565.583 287.45 558 287.227 cv
550.418 287.004 538.323 278.243 529.682 248.778 cv
527.7 242.024 526.069 236.02 524.88 230.763 cv
cp
.572549 .172549 0 0 cmyk
f
578.169 171.324 mo
574.587 178.416 574.218 191.601 578.151 196.875 cv
582.084 202.158 584.829 204.237 586.917 207.423 cv
589.005 210.609 584.793 242.955 579.789 254.862 cv
574.794 266.769 565.839 275.157 557.964 275.013 cv
550.098 274.86 543.483 267.813 537.723 254.862 cv
531.963 241.902 526.788 210.33 529.029 207.054 cv
531.279 203.769 534.618 201.294 538.416 196.371 cv
542.223 191.448 541.899 178.902 538.362 171.324 cv
578.169 171.324 li
f
527.76 208.746 mo
561.114 209.808 li
588.294 209.313 li
590.346 213.138 585.963 246.474 580.779 258.813 cv
575.55 271.269 566.19 280.044 557.964 279.891 cv
549.738 279.729 542.826 272.358 536.796 258.813 cv
530.775 245.268 525.357 212.247 527.706 208.818 cv
527.76 208.746 li
.764706 0 1 0 cmyk
f
527.76 208.746 mo
527.706 208.809 li
525.357 212.247 530.775 245.259 536.796 258.813 cv
542.826 272.358 549.738 279.738 557.973 279.891 cv
566.199 280.053 575.559 271.26 580.788 258.813 cv
585.972 246.465 590.355 213.147 588.303 209.322 cv
588.186 209.322 li
588.15 219.537 584.496 243.432 580.311 253.395 cv
575.19 265.599 565.065 268.794 557.973 268.659 cv
550.872 268.524 543.123 266.67 537.219 253.395 cv
532.377 242.496 527.931 218.754 527.778 208.746 cv
527.76 208.746 li
.843137 .168627 1 .0509804 cmyk
f
557.595 202.185 mo
569.691 202.185 580.293 203.841 586.161 206.325 cv
586.98 207.261 587.736 208.179 588.411 209.205 cv
588.816 209.817 588.987 211.473 588.978 213.84 cv
584.28 217.143 572.004 219.483 557.595 219.483 cv
543.942 219.483 532.215 217.368 527.022 214.335 cv
526.905 211.527 527.049 209.529 527.535 208.818 cv
528.201 207.846 528.966 206.946 529.803 206.037 cv
535.806 203.715 546.003 202.185 557.595 202.185 cv
.623529 0 1 0 cmyk
f
536.665 220.348 mo
535.296 220.348 533.969 219.854 532.881 218.826 cv
532.107 218.094 531.535 217.167 531.167 216.13 cv
533.92 217.049 537.374 217.821 541.32 218.391 cv
539.92 219.674 538.264 220.349 536.665 220.348 cv
.180392 0 .254902 0 cmyk
f
536.21 204.192 mo
536.977 203.882 537.766 203.723 538.542 203.723 cv
538.556 203.723 538.57 203.723 538.584 203.723 cv
537.766 203.871 536.974 204.027 536.21 204.192 cv
.121569 .00784314 0 0 cmyk
f
541.32 218.391 mo
537.374 217.821 533.92 217.049 531.167 216.13 cv
530.205 213.418 530.642 209.952 532.53 207.243 cv
533.552 205.774 534.845 204.744 536.21 204.192 cv
536.974 204.027 537.766 203.871 538.584 203.723 cv
539.939 203.734 541.252 204.228 542.331 205.245 cv
545.13 207.9 545.283 213.084 542.673 216.837 cv
542.262 217.427 541.806 217.945 541.32 218.391 cv
.14902 0 .223529 0 cmyk
f
541.569 251.187 mo
541.564 254.293 544.078 256.814 547.184 256.819 cv
550.289 256.824 552.811 254.311 552.815 251.205 cv
552.815 251.187 li
552.82 248.082 550.307 245.56 547.201 245.555 cv
544.096 245.55 541.574 248.063 541.569 251.169 cv
541.569 251.187 li
cp
.623529 0 1 0 cmyk
f
567.766 242.681 mo
567.764 244.015 568.844 245.099 570.178 245.101 cv
571.512 245.103 572.595 244.023 572.598 242.688 cv
572.598 242.681 li
572.6 241.347 571.52 240.264 570.186 240.262 cv
568.852 240.259 567.768 241.339 567.766 242.673 cv
567.766 242.681 li
cp
f
576.318 222.451 mo
576.318 223.607 577.255 224.544 578.411 224.544 cv
579.566 224.544 580.503 223.607 580.503 222.451 cv
580.503 221.296 579.566 220.359 578.411 220.359 cv
577.255 220.359 576.318 221.296 576.318 222.451 cv
cp
f
556.242 231.997 mo
556.242 233.362 557.35 234.469 558.715 234.469 cv
560.08 234.469 561.188 233.362 561.188 231.997 cv
561.188 230.631 560.08 229.523 558.715 229.523 cv
557.35 229.523 556.242 230.631 556.242 231.997 cv
cp
f
546.193 225.994 mo
546.193 226.766 546.819 227.392 547.592 227.392 cv
548.363 227.392 548.989 226.766 548.989 225.994 cv
548.989 225.222 548.363 224.596 547.592 224.596 cv
546.819 224.596 546.193 225.222 546.193 225.994 cv
cp
f
584.549 169.21 mo
559.487 177.011 544.453 174.04 531.15 169.21 cv
531.15 169.21 532.205 178.729 535.666 182.115 cv
539.127 185.502 548.615 186.608 558.211 186.51 cv
567.715 186.413 576.565 184.646 580.033 182.115 cv
583.501 179.585 584.549 169.21 584.549 169.21 cv
cp
.137255 0 .0117647 0 cmyk
f
582.454 169.544 mo
559.358 176.732 545.505 173.995 533.245 169.544 cv
533.245 169.544 534.217 178.315 537.406 181.436 cv
540.597 184.557 549.34 185.576 558.183 185.486 cv
566.94 185.396 575.097 183.768 578.292 181.436 cv
581.487 179.104 582.454 169.544 582.454 169.544 cv
cp
.4 .0666667 0 0 cmyk
f
531.182 169.295 mo
531.182 173.42 543.121 176.763 557.85 176.763 cv
572.578 176.763 584.518 173.42 584.518 169.295 cv
584.518 165.171 572.578 161.827 557.85 161.827 cv
543.121 161.827 531.182 165.171 531.182 169.295 cv
cp
.137255 0 .0117647 0 cmyk
f
535.459 168.807 mo
535.459 172.27 545.483 175.077 557.85 175.077 cv
570.216 175.077 580.24 172.27 580.24 168.807 cv
580.24 165.344 570.216 162.536 557.85 162.536 cv
545.483 162.536 535.459 165.344 535.459 168.807 cv
cp
.4 .0666667 0 0 cmyk
f
538.269 168.378 mo
538.269 171.483 547.035 174 557.85 174 cv
568.664 174 577.43 171.483 577.43 168.378 cv
577.43 165.272 568.664 162.755 557.85 162.755 cv
547.035 162.755 538.269 165.272 538.269 168.378 cv
cp
.572549 .172549 0 0 cmyk
f
557.847 162.759 mo
547.033 162.759 538.271 165.28 538.271 168.385 cv
538.271 169.067 538.73 169.704 539.505 170.309 cv
542.268 168.165 549.422 166.663 557.847 166.663 cv
566.271 166.663 573.455 168.165 576.217 170.309 cv
576.991 169.704 577.423 169.067 577.423 168.385 cv
577.423 165.28 568.661 162.759 557.847 162.759 cv
cp
.137255 0 .0117647 0 cmyk
f
579.625 165.515 mo
582.694 166.731 584.515 168.206 584.515 169.809 cv
584.515 173.933 572.571 177.274 557.843 177.274 cv
543.114 177.274 531.188 173.933 531.188 169.809 cv
531.188 168.206 533.009 166.731 536.077 165.515 cv
535.678 166.126 535.464 166.77 535.464 167.425 cv
535.464 171.938 545.477 175.591 557.843 175.591 cv
570.209 175.591 580.239 171.938 580.239 167.425 cv
580.239 166.77 580.025 166.126 579.625 165.515 cv
cp
f
538.887 178.608 mo
538.883 180.088 540.001 181.689 541.383 182.184 cv
542.765 182.679 543.887 181.881 543.891 180.401 cv
543.891 180.389 li
543.894 178.909 542.775 177.308 541.394 176.813 cv
540.012 176.318 538.89 177.116 538.887 178.596 cv
538.887 178.608 li
cp
0 0 0 0 cmyk
f
548.953 143.051 mo
544.978 135.5 551.765 129.713 559.086 127.615 cv
568.909 124.8 573.113 120.406 569.463 114.771 cv
565.568 108.76 562.436 107.332 556.359 103.866 cv
564.125 104.814 572.402 109.501 575.261 113.452 cv
578.119 117.402 579.281 126.63 571.298 131.317 cv
565.328 134.822 556.661 138.833 562.104 146.748 cv
564.686 150.502 567.653 155.147 561.521 153.219 cv
555.389 151.29 551.369 147.639 548.953 143.051 cv
cp
.764706 0 1 0 cmyk
f
535.843 105.874 mo
527.364 118.009 554.035 116.512 545.487 130.903 cv
542.08 122.248 534.976 125.39 527.485 118.926 cv
522.602 114.712 527.302 108.747 535.843 105.874 cv
cp
f
547.117 109.039 mo
535.289 101.39 545.017 91.0288 560.139 96.3999 cv
554.932 96.0791 544.45 100.165 547.117 109.039 cv
cp
f
770.697 483.543 mo
766.575 491.715 766.143 500.328 770.679 506.403 cv
775.215 512.487 778.185 514.521 780.777 518.337 cv
783.369 522.162 781.731 540.279 776.79 560.232 cv
770.436 585.846 753.309 599.148 747.441 598.68 cv
741.564 598.212 727.767 589.689 719.127 560.232 cv
712.782 538.596 709.956 524.655 714.096 518.337 cv
718.236 512.028 720.531 511.497 724.914 505.827 cv
729.288 500.148 728.919 492.273 724.851 483.543 cv
770.697 483.543 li
.137255 0 .0117647 0 cmyk
f
714.323 542.219 mo
736.342 547.251 758.372 548.149 780.391 542.639 cv
779.521 548.085 778.308 554.071 776.78 560.233 cv
770.431 585.854 755.027 598.905 747.444 598.682 cv
739.862 598.459 727.768 589.698 719.125 560.233 cv
717.145 553.479 715.514 547.475 714.324 542.219 cv
714.323 542.219 li
cp
.572549 .172549 0 0 cmyk
f
767.61 482.778 mo
764.028 489.87 763.659 503.055 767.592 508.329 cv
771.534 513.612 774.27 515.691 776.358 518.877 cv
778.455 522.063 774.234 554.409 769.239 566.316 cv
764.235 578.223 755.28 586.611 747.414 586.467 cv
739.539 586.314 732.933 579.267 727.173 566.316 cv
721.404 553.356 716.229 521.784 718.479 518.508 cv
720.72 515.223 724.059 512.748 727.866 507.825 cv
731.664 502.902 731.34 490.356 727.812 482.778 cv
767.61 482.778 li
f
717.21 520.2 mo
750.564 521.262 li
777.735 520.767 li
779.796 524.592 775.413 557.928 770.229 570.267 cv
765 582.723 755.64 591.498 747.405 591.345 cv
739.179 591.192 732.267 583.821 726.246 570.267 cv
720.216 556.722 714.807 523.71 717.156 520.272 cv
717.21 520.2 li
.694118 .0980392 1 .00784314 cmyk
f
717.201 520.2 mo
717.147 520.272 li
714.798 523.701 720.216 556.713 726.246 570.267 cv
732.267 583.812 739.188 591.192 747.414 591.345 cv
755.64 591.507 765 582.714 770.229 570.267 cv
775.413 557.919 779.805 524.601 777.744 520.776 cv
777.627 520.776 li
777.591 530.991 773.937 554.886 769.761 564.849 cv
764.631 577.053 754.515 580.248 747.414 580.113 cv
740.313 579.978 732.564 578.124 726.66 564.849 cv
721.818 553.95 717.381 530.208 717.219 520.2 cv
717.201 520.2 li
.780392 .364706 1 .290196 cmyk
f
747.036 513.639 mo
759.132 513.639 769.734 515.295 775.602 517.779 cv
776.43 518.715 777.177 519.633 777.852 520.659 cv
778.257 521.271 778.437 522.927 778.428 525.294 cv
773.721 528.606 761.445 530.937 747.036 530.937 cv
733.383 530.937 721.656 528.831 716.463 525.789 cv
716.346 522.981 716.49 520.983 716.985 520.272 cv
717.651 519.309 718.416 518.4 719.253 517.491 cv
725.247 515.169 735.453 513.639 747.036 513.639 cv
.415686 0 .894118 0 cmyk
f
726.112 531.806 mo
724.742 531.806 723.413 531.311 722.322 530.28 cv
721.549 529.549 720.978 528.624 720.611 527.589 cv
723.365 528.509 726.819 529.279 730.767 529.848 cv
729.367 531.131 727.711 531.806 726.112 531.806 cv
.129412 0 .227451 0 cmyk
f
725.651 515.647 mo
726.419 515.337 727.21 515.177 727.987 515.177 cv
728.001 515.177 728.016 515.177 728.03 515.177 cv
727.209 515.325 726.416 515.482 725.651 515.647 cv
.121569 .00784314 0 0 cmyk
f
730.767 529.848 mo
726.819 529.279 723.365 528.509 720.611 527.589 cv
719.649 524.876 720.088 521.407 721.971 518.697 cv
722.992 517.228 724.286 516.199 725.651 515.647 cv
726.416 515.482 727.209 515.325 728.03 515.177 cv
729.385 515.188 730.696 515.682 731.772 516.699 cv
734.571 519.354 734.733 524.538 732.123 528.291 cv
731.711 528.882 731.254 529.402 730.767 529.848 cv
.0745098 0 .168627 0 cmyk
f
731.013 562.643 mo
731.013 565.748 733.531 568.266 736.637 568.266 cv
739.742 568.266 742.26 565.748 742.26 562.643 cv
742.26 559.536 739.742 557.019 736.637 557.019 cv
733.531 557.019 731.013 559.536 731.013 562.643 cv
cp
.415686 0 .894118 0 cmyk
f
757.21 554.136 mo
757.21 555.47 758.292 556.552 759.626 556.552 cv
760.96 556.552 762.041 555.47 762.041 554.136 cv
762.041 552.802 760.96 551.721 759.626 551.721 cv
758.292 551.721 757.21 552.802 757.21 554.136 cv
cp
f
765.763 533.906 mo
765.763 535.063 766.699 535.999 767.854 535.999 cv
769.011 535.999 769.947 535.063 769.947 533.906 cv
769.947 532.751 769.011 531.814 767.854 531.814 cv
766.699 531.814 765.763 532.751 765.763 533.906 cv
cp
f
745.687 543.451 mo
745.687 544.817 746.793 545.925 748.159 545.925 cv
749.524 545.925 750.632 544.817 750.632 543.451 cv
750.632 542.086 749.524 540.979 748.159 540.979 cv
746.793 540.979 745.687 542.086 745.687 543.451 cv
cp
f
735.638 537.448 mo
735.638 538.221 736.264 538.847 737.035 538.847 cv
737.808 538.847 738.434 538.221 738.434 537.448 cv
738.434 536.677 737.808 536.051 737.035 536.051 cv
736.264 536.051 735.638 536.677 735.638 537.448 cv
cp
f
773.993 480.666 mo
748.932 488.466 733.897 485.495 720.594 480.666 cv
720.594 480.666 721.648 490.184 725.11 493.57 cv
728.571 496.957 738.059 498.063 747.655 497.965 cv
757.159 497.868 766.01 496.101 769.478 493.57 cv
772.945 491.04 773.993 480.666 773.993 480.666 cv
cp
.137255 0 .0117647 0 cmyk
f
771.898 480.999 mo
748.803 488.188 734.949 485.449 722.689 480.999 cv
722.689 480.999 723.661 489.771 726.851 492.892 cv
730.041 496.013 738.783 497.031 747.627 496.941 cv
756.385 496.852 764.541 495.223 767.736 492.892 cv
770.932 490.56 771.897 480.999 771.897 480.999 cv
771.898 480.999 li
cp
.4 .0666667 0 0 cmyk
f
720.626 480.75 mo
720.626 484.875 732.565 488.219 747.294 488.219 cv
762.021 488.219 773.962 484.875 773.962 480.75 cv
773.962 476.626 762.021 473.282 747.294 473.282 cv
732.565 473.282 720.626 476.626 720.626 480.75 cv
cp
.137255 0 .0117647 0 cmyk
f
724.903 480.262 mo
724.903 483.725 734.928 486.532 747.294 486.532 cv
759.66 486.532 769.685 483.725 769.685 480.262 cv
769.685 476.799 759.66 473.991 747.294 473.991 cv
734.928 473.991 724.903 476.799 724.903 480.262 cv
cp
.4 .0666667 0 0 cmyk
f
727.713 479.833 mo
727.713 482.938 736.479 485.455 747.294 485.455 cv
758.107 485.455 766.874 482.938 766.874 479.833 cv
766.874 476.728 758.107 474.211 747.294 474.211 cv
736.479 474.211 727.713 476.728 727.713 479.833 cv
cp
.572549 .172549 0 0 cmyk
f
747.291 474.215 mo
736.477 474.215 727.715 476.735 727.715 479.841 cv
727.715 480.522 728.175 481.159 728.949 481.764 cv
731.711 479.62 738.865 478.118 747.291 478.118 cv
755.716 478.118 762.899 479.62 765.661 481.764 cv
766.436 481.159 766.867 480.522 766.867 479.841 cv
766.867 476.735 758.104 474.215 747.291 474.215 cv
cp
.137255 0 .0117647 0 cmyk
f
761.948 462.125 mo
764.587 463.955 li
764.587 463.955 763.729 484.928 757.644 490.884 cv
751.56 496.84 744.348 497.231 737.787 492.061 cv
731.227 486.889 730.15 464.217 730.15 464.217 cv
734.732 462.387 li
761.948 462.125 li
cp
.415686 .737255 .964706 .54902 cmyk
f
729.82 463.281 mo
729.82 464.175 730.31 465.025 731.194 465.8 cv
732.078 466.573 733.357 467.271 734.938 467.855 cv
735.729 468.148 736.595 475.211 737.524 475.443 cv
738.454 475.676 739.447 469.078 740.492 469.242 cv
742.583 469.569 744.881 469.75 747.294 469.75 cv
749.706 469.75 752.005 469.569 754.095 469.242 cv
756.186 468.915 758.068 468.441 759.648 467.855 cv
760.439 467.563 761.154 472.341 761.782 471.996 cv
762.41 471.652 762.951 466.187 763.394 465.8 cv
764.277 465.025 764.767 464.175 764.767 463.281 cv
764.767 459.709 756.943 456.813 747.294 456.813 cv
737.644 456.813 729.82 459.709 729.82 463.281 cv
cp
.286275 .733333 1 .227451 cmyk
f
769.069 476.97 mo
772.139 478.187 773.959 479.661 773.959 481.264 cv
773.959 485.388 762.016 488.729 747.287 488.729 cv
732.559 488.729 720.632 485.388 720.632 481.264 cv
720.632 479.661 722.453 478.187 725.521 476.97 cv
725.122 477.581 724.908 478.225 724.908 478.88 cv
724.908 483.393 734.921 487.047 747.287 487.047 cv
759.652 487.047 769.683 483.393 769.683 478.88 cv
769.683 478.225 769.47 477.581 769.069 476.97 cv
cp
.137255 0 .0117647 0 cmyk
f
728.33 490.063 mo
728.33 491.544 729.45 493.144 730.832 493.635 cv
732.214 494.127 733.334 493.325 733.334 491.844 cv
733.334 490.362 732.214 488.764 730.832 488.271 cv
729.45 487.78 728.33 488.582 728.33 490.063 cv
cp
0 0 0 0 cmyk
f
870.714 483.543 mo
866.592 491.715 866.169 500.328 870.705 506.403 cv
875.232 512.487 878.211 514.521 880.803 518.337 cv
883.386 522.162 881.757 540.279 876.807 560.223 cv
870.462 585.846 853.335 599.148 847.458 598.68 cv
841.59 598.212 827.793 589.689 819.153 560.223 cv
812.808 538.587 809.982 524.655 814.122 518.337 cv
818.262 512.028 820.557 511.497 824.931 505.827 cv
829.314 500.148 828.945 492.273 824.868 483.543 cv
870.714 483.543 li
.137255 0 .0117647 0 cmyk
f
814.346 542.219 mo
836.364 547.251 858.395 548.149 880.412 542.639 cv
879.544 548.084 878.33 554.071 876.803 560.233 cv
870.453 585.854 855.049 598.905 847.467 598.682 cv
839.885 598.459 827.789 589.698 819.147 560.233 cv
817.166 553.479 815.535 547.475 814.346 542.219 cv
cp
.572549 .172549 0 0 cmyk
f
867.636 482.778 mo
864.054 489.87 863.685 503.055 867.618 508.329 cv
871.551 513.612 874.296 515.691 876.384 518.877 cv
878.472 522.063 874.26 554.409 869.256 566.316 cv
864.261 578.223 855.306 586.62 847.431 586.467 cv
839.565 586.314 832.95 579.267 827.19 566.316 cv
821.43 553.356 816.255 521.784 818.496 518.508 cv
820.746 515.223 824.085 512.748 827.883 507.825 cv
831.69 502.902 831.366 490.356 827.829 482.778 cv
867.636 482.778 li
f
817.227 520.2 mo
850.581 521.262 li
877.761 520.767 li
879.813 524.592 875.43 557.928 870.246 570.267 cv
865.017 582.723 855.657 591.498 847.431 591.345 cv
839.205 591.192 832.284 583.821 826.263 570.267 cv
820.242 556.722 814.824 523.71 817.173 520.272 cv
817.227 520.2 li
.694118 .0980392 1 .00784314 cmyk
f
817.227 520.2 mo
817.173 520.272 li
814.824 523.701 820.242 556.713 826.263 570.267 cv
832.293 583.812 839.205 591.192 847.44 591.345 cv
855.666 591.507 865.026 582.714 870.255 570.267 cv
875.439 557.919 879.822 524.601 877.77 520.776 cv
877.644 520.776 li
877.617 530.991 873.963 554.886 869.778 564.849 cv
864.657 577.053 854.532 580.248 847.44 580.113 cv
840.339 579.978 832.59 578.124 826.686 564.849 cv
821.835 553.95 817.398 530.208 817.245 520.2 cv
817.227 520.2 li
.780392 .364706 1 .290196 cmyk
f
847.062 513.639 mo
859.158 513.639 869.76 515.295 875.628 517.779 cv
876.447 518.715 877.203 519.633 877.878 520.659 cv
878.283 521.271 878.454 522.927 878.445 525.294 cv
873.747 528.606 861.471 530.937 847.062 530.937 cv
833.409 530.937 821.682 528.831 816.489 525.789 cv
816.372 522.981 816.516 520.983 817.002 520.272 cv
817.668 519.309 818.433 518.4 819.27 517.491 cv
825.273 515.169 835.47 513.639 847.062 513.639 cv
.415686 0 .894118 0 cmyk
f
826.131 531.806 mo
824.762 531.806 823.435 531.311 822.348 530.28 cv
821.575 529.549 821.003 528.624 820.635 527.588 cv
823.388 528.508 826.84 529.278 830.785 529.847 cv
829.385 531.131 827.729 531.806 826.131 531.806 cv
.129412 0 .227451 0 cmyk
f
825.676 515.647 mo
826.443 515.336 827.232 515.177 828.007 515.177 cv
828.022 515.177 828.036 515.177 828.051 515.177 cv
827.232 515.325 826.439 515.481 825.676 515.647 cv
.121569 .00784314 0 0 cmyk
f
830.785 529.847 mo
826.84 529.278 823.388 528.508 820.635 527.588 cv
819.671 524.875 820.108 521.407 821.997 518.697 cv
823.019 517.228 824.312 516.198 825.676 515.647 cv
826.439 515.481 827.232 515.325 828.051 515.177 cv
829.404 515.188 830.714 515.682 831.789 516.699 cv
834.597 519.354 834.75 524.538 832.14 528.291 cv
831.728 528.882 831.272 529.401 830.785 529.847 cv
.0745098 0 .168627 0 cmyk
f
831.035 562.643 mo
831.03 565.748 833.544 568.27 836.649 568.274 cv
839.756 568.279 842.277 565.766 842.282 562.66 cv
842.282 562.643 li
842.287 559.536 839.773 557.015 836.668 557.01 cv
833.562 557.005 831.04 559.519 831.035 562.624 cv
831.035 562.643 li
cp
.415686 0 .894118 0 cmyk
f
857.232 554.136 mo
857.23 555.471 858.31 556.554 859.644 556.556 cv
860.979 556.558 862.062 555.478 862.063 554.144 cv
862.063 554.136 li
862.065 552.802 860.985 551.719 859.651 551.717 cv
858.317 551.715 857.234 552.794 857.232 554.129 cv
857.232 554.136 li
cp
f
865.784 533.906 mo
865.784 535.063 866.722 535.999 867.877 535.999 cv
869.032 535.999 869.97 535.063 869.97 533.906 cv
869.97 532.751 869.032 531.814 867.877 531.814 cv
866.722 531.814 865.784 532.751 865.784 533.906 cv
cp
f
845.708 543.451 mo
845.708 544.817 846.815 545.925 848.181 545.925 cv
849.547 545.925 850.654 544.817 850.654 543.451 cv
850.654 542.086 849.547 540.979 848.181 540.979 cv
846.815 540.979 845.708 542.086 845.708 543.451 cv
cp
f
835.66 537.448 mo
835.66 538.221 836.285 538.847 837.058 538.847 cv
837.83 538.847 838.455 538.221 838.455 537.448 cv
838.455 536.677 837.83 536.051 837.058 536.051 cv
836.285 536.051 835.66 536.677 835.66 537.448 cv
cp
f
874.016 480.666 mo
848.953 488.466 833.92 485.495 820.616 480.666 cv
820.616 480.666 821.671 490.184 825.132 493.57 cv
828.594 496.957 838.081 498.063 847.677 497.965 cv
857.182 497.868 866.032 496.101 869.499 493.57 cv
872.967 491.04 874.016 480.666 874.016 480.666 cv
cp
.137255 0 .0117647 0 cmyk
f
871.92 480.999 mo
848.825 488.188 834.971 485.449 822.711 480.999 cv
822.711 480.999 823.684 489.771 826.873 492.892 cv
830.063 496.013 838.806 497.031 847.648 496.94 cv
856.407 496.852 864.563 495.223 867.759 492.892 cv
870.954 490.56 871.92 480.999 871.92 480.999 cv
cp
.4 .0666667 0 0 cmyk
f
820.647 480.75 mo
820.647 484.875 832.587 488.219 847.315 488.219 cv
862.044 488.219 873.983 484.875 873.983 480.75 cv
873.983 476.626 862.044 473.282 847.315 473.282 cv
832.587 473.282 820.647 476.626 820.647 480.75 cv
cp
.137255 0 .0117647 0 cmyk
f
824.925 480.262 mo
824.925 483.725 834.949 486.532 847.315 486.532 cv
859.682 486.532 869.706 483.725 869.706 480.262 cv
869.706 476.799 859.682 473.991 847.315 473.991 cv
834.949 473.991 824.925 476.799 824.925 480.262 cv
cp
.4 .0666667 0 0 cmyk
f
827.735 479.833 mo
827.735 482.938 836.502 485.455 847.315 485.455 cv
858.13 485.455 866.896 482.938 866.896 479.833 cv
866.896 476.728 858.13 474.211 847.315 474.211 cv
836.502 474.211 827.735 476.728 827.735 479.833 cv
cp
.572549 .172549 0 0 cmyk
f
847.313 474.215 mo
836.499 474.215 827.737 476.735 827.737 479.841 cv
827.737 480.522 828.197 481.159 828.971 481.764 cv
831.733 479.62 838.888 478.118 847.313 478.118 cv
855.738 478.118 862.921 479.62 865.684 481.764 cv
866.458 481.159 866.889 480.522 866.889 479.841 cv
866.889 476.735 858.127 474.215 847.313 474.215 cv
cp
.137255 0 .0117647 0 cmyk
f
869.092 476.97 mo
872.16 478.187 873.98 479.66 873.98 481.264 cv
873.98 485.388 862.037 488.729 847.309 488.729 cv
832.58 488.729 820.654 485.388 820.654 481.264 cv
820.654 479.66 822.475 478.187 825.544 476.97 cv
825.144 477.581 824.931 478.225 824.931 478.88 cv
824.931 483.393 834.943 487.047 847.309 487.047 cv
859.675 487.047 869.705 483.393 869.705 478.88 cv
869.705 478.225 869.491 477.581 869.092 476.97 cv
cp
f
828.353 490.063 mo
828.35 491.543 829.467 493.145 830.849 493.639 cv
832.23 494.134 833.354 493.336 833.356 491.855 cv
833.356 491.844 li
833.359 490.364 832.242 488.763 830.86 488.268 cv
829.479 487.772 828.355 488.571 828.353 490.051 cv
828.353 490.063 li
cp
0 0 0 0 cmyk
f
838.42 454.507 mo
834.444 446.956 841.23 441.168 848.553 439.07 cv
858.376 436.255 862.579 431.861 858.93 426.227 cv
855.035 420.215 851.901 418.787 845.826 415.322 cv
853.592 416.27 861.869 420.957 864.728 424.907 cv
867.585 428.857 868.748 438.085 860.764 442.772 cv
854.795 446.277 846.128 450.288 851.57 458.203 cv
854.151 461.958 857.119 466.602 850.987 464.674 cv
844.854 462.745 840.835 459.094 838.42 454.507 cv
cp
.694118 .0980392 1 .00784314 cmyk
f
825.309 417.329 mo
816.831 429.465 843.501 427.967 834.953 442.358 cv
831.546 433.703 824.441 436.845 816.951 430.381 cv
812.067 426.167 816.769 420.202 825.309 417.329 cv
825.309 417.329 li
cp
f
836.584 420.495 mo
824.755 412.845 834.483 402.484 849.605 407.855 cv
844.397 407.534 833.916 411.62 836.584 420.495 cv
cp
f
191.763 483.543 mo
187.641 491.715 187.209 500.328 191.745 506.403 cv
196.281 512.487 199.251 514.521 201.843 518.337 cv
204.435 522.162 202.797 540.279 197.856 560.232 cv
191.502 585.846 174.375 599.148 168.507 598.68 cv
162.63 598.212 148.833 589.689 140.193 560.232 cv
133.848 538.596 131.031 524.655 135.162 518.337 cv
139.302 512.028 141.597 511.497 145.98 505.827 cv
150.363 500.148 149.985 492.273 145.917 483.543 cv
191.763 483.543 li
.137255 0 .0117647 0 cmyk
f
135.391 542.219 mo
157.41 547.251 179.44 548.149 201.458 542.639 cv
200.589 548.085 199.375 554.071 197.848 560.233 cv
191.498 585.854 176.095 598.905 168.512 598.682 cv
160.93 598.459 148.835 589.698 140.193 560.233 cv
138.212 553.479 136.581 547.475 135.391 542.219 cv
cp
.572549 .172549 0 0 cmyk
f
188.676 482.778 mo
185.094 489.87 184.725 503.055 188.667 508.329 cv
192.6 513.612 195.336 515.691 197.424 518.877 cv
199.521 522.063 195.3 554.409 190.305 566.316 cv
185.301 578.223 176.346 586.611 168.48 586.467 cv
160.605 586.314 153.999 579.267 148.239 566.316 cv
142.479 553.356 137.295 521.784 139.545 518.508 cv
141.786 515.223 145.125 512.748 148.932 507.825 cv
152.73 502.902 152.415 490.356 148.878 482.778 cv
188.676 482.778 li
f
138.276 520.2 mo
171.63 521.262 li
198.81 520.767 li
200.862 524.592 196.479 557.928 191.295 570.267 cv
186.066 582.723 176.706 591.498 168.48 591.345 cv
160.245 591.192 153.333 583.821 147.312 570.267 cv
141.282 556.722 135.873 523.71 138.222 520.272 cv
138.276 520.2 li
.262745 1 .533333 .117647 cmyk
f
138.267 520.2 mo
138.213 520.272 li
135.864 523.701 141.291 556.713 147.312 570.267 cv
153.333 583.812 160.254 591.192 168.48 591.345 cv
176.706 591.507 186.066 582.714 191.295 570.267 cv
196.479 557.919 200.871 524.601 198.819 520.776 cv
198.693 520.776 li
198.666 530.991 195.012 554.886 190.827 564.849 cv
185.697 577.053 175.581 580.248 168.48 580.113 cv
161.379 579.978 153.63 578.124 147.735 564.849 cv
142.884 553.95 138.447 530.208 138.285 520.2 cv
138.267 520.2 li
.52549 1 .4 .352941 cmyk
f
168.111 513.639 mo
180.198 513.639 190.8 515.295 196.677 517.779 cv
197.496 518.715 198.243 519.633 198.918 520.659 cv
199.323 521.271 199.503 522.927 199.494 525.294 cv
194.787 528.606 182.511 530.937 168.111 530.937 cv
154.449 530.937 142.722 528.831 137.538 525.789 cv
137.421 522.981 137.565 520.983 138.051 520.272 cv
138.717 519.309 139.482 518.4 140.319 517.491 cv
146.313 515.169 156.519 513.639 168.111 513.639 cv
0 .882353 .592157 0 cmyk
f
147.178 531.806 mo
145.808 531.806 144.479 531.311 143.388 530.28 cv
142.615 529.549 142.044 528.623 141.677 527.587 cv
144.429 528.508 147.884 529.279 151.833 529.848 cv
150.433 531.131 148.777 531.806 147.178 531.806 cv
.0431373 .2 .0352941 0 cmyk
f
146.721 515.647 mo
147.488 515.336 148.277 515.177 149.053 515.177 cv
149.068 515.177 149.082 515.177 149.097 515.177 cv
148.278 515.325 147.484 515.481 146.721 515.647 cv
.121569 .00784314 0 0 cmyk
f
151.833 529.848 mo
147.884 529.279 144.429 528.508 141.677 527.587 cv
140.716 524.875 141.157 521.406 143.046 518.697 cv
144.064 517.228 145.357 516.198 146.721 515.647 cv
147.484 515.481 148.278 515.325 149.097 515.177 cv
150.451 515.188 151.762 515.682 152.838 516.699 cv
155.637 519.354 155.799 524.538 153.189 528.291 cv
152.777 528.882 152.32 529.402 151.833 529.848 cv
0 .172549 .0509804 0 cmyk
f
152.081 562.643 mo
152.081 565.748 154.599 568.266 157.704 568.266 cv
160.81 568.266 163.328 565.748 163.328 562.643 cv
163.328 559.536 160.81 557.019 157.704 557.019 cv
154.599 557.019 152.081 559.536 152.081 562.643 cv
cp
0 .882353 .592157 0 cmyk
f
178.278 554.136 mo
178.278 555.47 179.359 556.552 180.693 556.552 cv
182.027 556.552 183.109 555.47 183.109 554.136 cv
183.109 552.802 182.027 551.721 180.693 551.721 cv
179.359 551.721 178.278 552.802 178.278 554.136 cv
cp
f
186.83 533.906 mo
186.83 535.063 187.767 535.999 188.922 535.999 cv
190.078 535.999 191.015 535.063 191.015 533.906 cv
191.015 532.751 190.078 531.814 188.922 531.814 cv
187.767 531.814 186.83 532.751 186.83 533.906 cv
cp
f
166.754 543.451 mo
166.754 544.817 167.861 545.925 169.227 545.925 cv
170.592 545.925 171.7 544.817 171.7 543.451 cv
171.7 542.086 170.592 540.979 169.227 540.979 cv
167.861 540.979 166.754 542.086 166.754 543.451 cv
cp
f
156.706 537.448 mo
156.706 538.221 157.331 538.847 158.103 538.847 cv
158.875 538.847 159.501 538.221 159.501 537.448 cv
159.501 536.677 158.875 536.051 158.103 536.051 cv
157.331 536.051 156.706 536.677 156.706 537.448 cv
cp
f
195.061 480.666 mo
169.999 488.466 154.965 485.495 141.662 480.666 cv
141.662 480.666 142.716 490.184 146.178 493.57 cv
149.639 496.957 159.126 498.063 168.723 497.965 cv
178.227 497.868 187.077 496.101 190.545 493.57 cv
194.013 491.04 195.061 480.666 195.061 480.666 cv
cp
.137255 0 .0117647 0 cmyk
f
192.965 480.999 mo
169.871 488.188 156.017 485.449 143.757 480.999 cv
143.757 480.999 144.729 489.771 147.918 492.892 cv
151.108 496.013 159.851 497.031 168.694 496.941 cv
177.452 496.852 185.608 495.223 188.804 492.892 cv
192 490.56 192.965 480.999 192.965 480.999 cv
cp
.4 .0666667 0 0 cmyk
f
141.693 480.75 mo
141.693 484.875 153.633 488.219 168.361 488.219 cv
183.089 488.219 195.029 484.875 195.029 480.75 cv
195.029 476.626 183.089 473.282 168.361 473.282 cv
153.633 473.282 141.693 476.626 141.693 480.75 cv
cp
.137255 0 .0117647 0 cmyk
f
145.971 480.262 mo
145.971 483.725 155.995 486.532 168.361 486.532 cv
180.728 486.532 190.752 483.725 190.752 480.262 cv
190.752 476.799 180.728 473.991 168.361 473.991 cv
155.995 473.991 145.971 476.799 145.971 480.262 cv
cp
.4 .0666667 0 0 cmyk
f
148.781 479.833 mo
148.781 482.938 157.547 485.455 168.361 485.455 cv
179.175 485.455 187.942 482.938 187.942 479.833 cv
187.942 476.728 179.175 474.211 168.361 474.211 cv
157.547 474.211 148.781 476.728 148.781 479.833 cv
cp
.572549 .172549 0 0 cmyk
f
168.358 474.215 mo
157.544 474.215 148.782 476.735 148.782 479.841 cv
148.782 480.522 149.242 481.159 150.017 481.764 cv
152.779 479.62 159.934 478.118 168.358 478.118 cv
176.784 478.118 183.967 479.62 186.729 481.764 cv
187.503 481.159 187.935 480.522 187.935 479.841 cv
187.935 476.735 179.172 474.215 168.358 474.215 cv
cp
.137255 0 .0117647 0 cmyk
f
183.016 462.125 mo
185.654 463.955 li
185.654 463.955 184.796 484.928 178.711 490.884 cv
172.627 496.84 165.416 497.231 158.855 492.061 cv
152.294 486.889 151.218 464.217 151.218 464.217 cv
155.8 462.387 li
183.016 462.125 li
cp
.415686 .737255 .964706 .54902 cmyk
f
150.888 463.281 mo
150.888 464.175 151.377 465.025 152.262 465.8 cv
153.146 466.573 154.425 467.271 156.006 467.855 cv
156.796 468.148 157.663 475.211 158.592 475.443 cv
159.521 475.676 160.515 469.078 161.56 469.242 cv
163.65 469.569 165.949 469.75 168.361 469.75 cv
170.774 469.75 173.072 469.569 175.163 469.242 cv
177.253 468.915 179.136 468.441 180.717 467.855 cv
181.507 467.563 182.222 472.341 182.85 471.996 cv
183.478 471.652 184.019 466.187 184.461 465.8 cv
185.345 465.025 185.834 464.175 185.834 463.281 cv
185.834 459.709 178.011 456.813 168.361 456.813 cv
158.711 456.813 150.888 459.709 150.888 463.281 cv
cp
.286275 .733333 1 .227451 cmyk
f
190.137 476.97 mo
193.206 478.187 195.026 479.661 195.026 481.264 cv
195.026 485.388 183.083 488.729 168.354 488.729 cv
153.626 488.729 141.7 485.388 141.7 481.264 cv
141.7 479.661 143.52 478.187 146.589 476.97 cv
146.189 477.581 145.976 478.225 145.976 478.88 cv
145.976 483.393 155.988 487.047 168.354 487.047 cv
180.72 487.047 190.75 483.393 190.75 478.88 cv
190.75 478.225 190.537 477.581 190.137 476.97 cv
cp
.137255 0 .0117647 0 cmyk
f
149.398 490.063 mo
149.398 491.544 150.518 493.144 151.9 493.635 cv
153.282 494.127 154.402 493.325 154.402 491.844 cv
154.402 490.362 153.282 488.764 151.9 488.271 cv
150.518 487.78 149.398 488.582 149.398 490.063 cv
cp
0 0 0 0 cmyk
f
291.789 483.543 mo
287.658 491.715 287.235 500.328 291.771 506.403 cv
296.298 512.487 299.277 514.521 301.869 518.337 cv
304.452 522.162 302.823 540.279 297.873 560.223 cv
291.528 585.846 274.401 599.148 268.524 598.68 cv
262.656 598.212 248.859 589.689 240.219 560.223 cv
233.874 538.587 231.048 524.655 235.188 518.337 cv
239.328 512.028 241.623 511.497 245.997 505.827 cv
250.38 500.148 250.011 492.273 245.934 483.543 cv
291.789 483.543 li
.137255 0 .0117647 0 cmyk
f
235.413 542.219 mo
257.432 547.251 279.462 548.149 301.48 542.639 cv
300.611 548.084 299.397 554.071 297.87 560.233 cv
291.521 585.854 276.117 598.905 268.534 598.682 cv
260.952 598.459 248.857 589.698 240.215 560.233 cv
238.234 553.479 236.603 547.475 235.414 542.219 cv
235.413 542.219 li
cp
.572549 .172549 0 0 cmyk
f
288.702 482.778 mo
285.12 489.87 284.751 503.055 288.684 508.329 cv
292.617 513.612 295.362 515.691 297.45 518.877 cv
299.538 522.063 295.326 554.409 290.322 566.316 cv
285.327 578.223 276.372 586.62 268.497 586.467 cv
260.631 586.314 254.016 579.267 248.256 566.316 cv
242.496 553.356 237.321 521.784 239.562 518.508 cv
241.812 515.223 245.151 512.748 248.949 507.825 cv
252.756 502.902 252.432 490.356 248.895 482.778 cv
288.702 482.778 li
f
238.293 520.2 mo
271.647 521.262 li
298.827 520.767 li
300.879 524.592 296.496 557.928 291.312 570.267 cv
286.083 582.723 276.732 591.498 268.497 591.345 cv
260.271 591.192 253.359 583.821 247.329 570.267 cv
241.308 556.722 235.89 523.71 238.239 520.272 cv
238.293 520.2 li
.262745 1 .533333 .117647 cmyk
f
238.293 520.2 mo
238.239 520.272 li
235.89 523.701 241.308 556.713 247.338 570.267 cv
253.359 583.812 260.271 591.192 268.506 591.345 cv
276.732 591.507 286.092 582.714 291.321 570.267 cv
296.505 557.919 300.888 524.601 298.836 520.776 cv
298.719 520.776 li
298.683 530.991 295.029 554.886 290.844 564.849 cv
285.723 577.053 275.598 580.248 268.506 580.113 cv
261.405 579.978 253.656 578.124 247.752 564.849 cv
242.91 553.95 238.464 530.208 238.311 520.2 cv
238.293 520.2 li
.52549 1 .4 .352941 cmyk
f
268.128 513.639 mo
280.224 513.639 290.826 515.295 296.694 517.779 cv
297.522 518.715 298.269 519.633 298.944 520.659 cv
299.349 521.271 299.52 522.927 299.511 525.294 cv
294.813 528.606 282.537 530.937 268.128 530.937 cv
254.475 530.937 242.748 528.831 237.555 525.789 cv
237.438 522.981 237.582 520.983 238.068 520.272 cv
238.743 519.309 239.499 518.4 240.336 517.491 cv
246.339 515.169 256.536 513.639 268.128 513.639 cv
0 .882353 .592157 0 cmyk
f
247.199 531.806 mo
245.829 531.806 244.501 531.311 243.414 530.28 cv
242.641 529.549 242.069 528.624 241.701 527.588 cv
244.454 528.508 247.908 529.279 251.854 529.848 cv
250.455 531.131 248.799 531.806 247.199 531.806 cv
.0431373 .2 .0352941 0 cmyk
f
246.743 515.646 mo
247.51 515.336 248.299 515.177 249.075 515.177 cv
249.089 515.177 249.103 515.177 249.118 515.177 cv
248.299 515.325 247.507 515.481 246.743 515.646 cv
.121569 .00784314 0 0 cmyk
f
251.854 529.848 mo
247.908 529.279 244.454 528.508 241.701 527.588 cv
240.737 524.875 241.174 521.407 243.063 518.697 cv
244.085 517.227 245.378 516.198 246.743 515.646 cv
247.507 515.481 248.299 515.325 249.118 515.177 cv
250.472 515.188 251.785 515.682 252.864 516.699 cv
255.663 519.354 255.816 524.538 253.206 528.291 cv
252.795 528.882 252.34 529.401 251.854 529.848 cv
0 .172549 .0509804 0 cmyk
f
252.103 562.643 mo
252.098 565.748 254.611 568.27 257.717 568.274 cv
260.823 568.279 263.345 565.766 263.35 562.66 cv
263.35 562.643 li
263.354 559.536 260.841 557.015 257.735 557.01 cv
254.629 557.005 252.108 559.519 252.103 562.624 cv
252.103 562.643 li
cp
0 .882353 .592157 0 cmyk
f
278.3 554.136 mo
278.298 555.471 279.377 556.554 280.711 556.556 cv
282.046 556.558 283.129 555.478 283.131 554.144 cv
283.131 554.136 li
283.133 552.802 282.053 551.719 280.719 551.717 cv
279.385 551.715 278.302 552.794 278.3 554.129 cv
278.3 554.136 li
cp
f
286.852 533.906 mo
286.852 535.063 287.789 535.999 288.944 535.999 cv
290.1 535.999 291.037 535.063 291.037 533.906 cv
291.037 532.751 290.1 531.814 288.944 531.814 cv
287.789 531.814 286.852 532.751 286.852 533.906 cv
cp
f
266.776 543.451 mo
266.776 544.817 267.883 545.925 269.249 545.925 cv
270.614 545.925 271.722 544.817 271.722 543.451 cv
271.722 542.086 270.614 540.979 269.249 540.979 cv
267.883 540.979 266.776 542.086 266.776 543.451 cv
cp
f
256.728 537.448 mo
256.728 538.221 257.354 538.847 258.125 538.847 cv
258.897 538.847 259.523 538.221 259.523 537.448 cv
259.523 536.677 258.897 536.051 258.125 536.051 cv
257.354 536.051 256.728 536.677 256.728 537.448 cv
cp
f
295.083 480.666 mo
270.021 488.466 254.987 485.495 241.684 480.666 cv
241.684 480.666 242.738 490.184 246.2 493.57 cv
249.661 496.957 259.148 498.063 268.745 497.965 cv
278.249 497.868 287.1 496.101 290.567 493.57 cv
294.035 491.04 295.083 480.666 295.083 480.666 cv
cp
.137255 0 .0117647 0 cmyk
f
292.988 480.999 mo
269.893 488.188 256.039 485.449 243.779 480.999 cv
243.779 480.999 244.751 489.771 247.94 492.892 cv
251.13 496.013 259.873 497.031 268.716 496.94 cv
277.475 496.852 285.63 495.223 288.826 492.892 cv
292.021 490.56 292.987 480.999 292.987 480.999 cv
292.988 480.999 li
cp
.4 .0666667 0 0 cmyk
f
241.715 480.75 mo
241.715 484.875 253.655 488.219 268.383 488.219 cv
283.112 488.219 295.051 484.875 295.051 480.75 cv
295.051 476.626 283.112 473.282 268.383 473.282 cv
253.655 473.282 241.715 476.626 241.715 480.75 cv
cp
.137255 0 .0117647 0 cmyk
f
245.993 480.262 mo
245.993 483.725 256.018 486.532 268.383 486.532 cv
280.75 486.532 290.774 483.725 290.774 480.262 cv
290.774 476.799 280.75 473.991 268.383 473.991 cv
256.018 473.991 245.993 476.799 245.993 480.262 cv
cp
.4 .0666667 0 0 cmyk
f
248.803 479.833 mo
248.803 482.938 257.569 485.455 268.383 485.455 cv
279.197 485.455 287.964 482.938 287.964 479.833 cv
287.964 476.728 279.197 474.211 268.383 474.211 cv
257.569 474.211 248.803 476.728 248.803 479.833 cv
cp
.572549 .172549 0 0 cmyk
f
268.38 474.215 mo
257.566 474.215 248.805 476.735 248.805 479.841 cv
248.805 480.522 249.265 481.159 250.039 481.764 cv
252.801 479.62 259.956 478.118 268.38 478.118 cv
276.806 478.118 283.989 479.62 286.751 481.764 cv
287.525 481.159 287.957 480.522 287.957 479.841 cv
287.957 476.735 279.195 474.215 268.38 474.215 cv
cp
.137255 0 .0117647 0 cmyk
f
290.159 476.97 mo
293.229 478.187 295.049 479.66 295.049 481.264 cv
295.049 485.388 283.105 488.729 268.376 488.729 cv
253.648 488.729 241.722 485.388 241.722 481.264 cv
241.722 479.66 243.542 478.187 246.611 476.97 cv
246.211 477.581 245.998 478.225 245.998 478.88 cv
245.998 483.393 256.011 487.047 268.376 487.047 cv
280.743 487.047 290.772 483.393 290.772 478.88 cv
290.772 478.225 290.559 477.581 290.159 476.97 cv
cp
f
249.42 490.063 mo
249.417 491.543 250.535 493.145 251.917 493.639 cv
253.298 494.134 254.421 493.336 254.424 491.855 cv
254.424 491.844 li
254.427 490.364 253.31 488.763 251.928 488.268 cv
250.546 487.772 249.423 488.571 249.42 490.051 cv
249.42 490.063 li
cp
0 0 0 0 cmyk
f
259.487 454.507 mo
255.512 446.956 262.298 441.168 269.62 439.07 cv
279.443 436.255 283.647 431.861 279.997 426.227 cv
276.103 420.215 272.969 418.787 266.894 415.321 cv
274.659 416.27 282.937 420.957 285.795 424.907 cv
288.653 428.857 289.815 438.085 281.832 442.772 cv
275.862 446.277 267.195 450.288 272.638 458.203 cv
275.219 461.957 278.188 466.602 272.055 464.674 cv
265.922 462.745 261.903 459.094 259.487 454.507 cv
cp
.262745 1 .533333 .117647 cmyk
f
246.376 417.329 mo
237.898 429.464 264.569 427.967 256.021 442.358 cv
252.613 433.703 245.509 436.845 238.019 430.381 cv
233.136 426.167 237.836 420.202 246.376 417.329 cv
cp
f
257.651 426.151 mo
245.823 418.502 255.551 408.141 270.673 413.512 cv
265.465 413.191 254.984 417.277 257.651 426.151 cv
cp
f
482.184 483.543 mo
478.062 491.715 477.63 500.328 482.166 506.403 cv
486.702 512.487 489.672 514.521 492.264 518.337 cv
494.856 522.162 493.218 540.279 488.277 560.232 cv
481.923 585.846 464.796 599.148 458.928 598.68 cv
453.051 598.212 439.254 589.689 430.614 560.232 cv
424.269 538.596 421.452 524.655 425.583 518.337 cv
429.723 512.028 432.018 511.497 436.401 505.827 cv
440.784 500.148 440.406 492.273 436.338 483.543 cv
482.184 483.543 li
.137255 0 .0117647 0 cmyk
f
425.812 542.219 mo
447.83 547.251 469.86 548.149 491.879 542.639 cv
491.01 548.085 489.796 554.071 488.269 560.233 cv
481.919 585.854 466.516 598.905 458.933 598.682 cv
451.351 598.459 439.256 589.698 430.613 560.233 cv
428.633 553.479 427.002 547.475 425.812 542.219 cv
cp
.572549 .172549 0 0 cmyk
f
479.097 482.778 mo
475.515 489.87 475.146 503.055 479.079 508.329 cv
483.021 513.612 485.757 515.691 487.845 518.877 cv
489.942 522.063 485.721 554.409 480.726 566.316 cv
475.722 578.223 466.767 586.611 458.901 586.467 cv
451.026 586.314 444.42 579.267 438.66 566.316 cv
432.9 553.356 427.716 521.784 429.966 518.508 cv
432.207 515.223 435.546 512.748 439.353 507.825 cv
443.151 502.902 442.827 490.356 439.299 482.778 cv
479.097 482.778 li
f
428.697 520.2 mo
462.051 521.262 li
489.231 520.767 li
491.283 524.592 486.9 557.928 481.716 570.267 cv
476.487 582.723 467.127 591.498 458.901 591.345 cv
450.666 591.192 443.754 583.821 437.733 570.267 cv
431.703 556.722 426.294 523.71 428.643 520.272 cv
428.697 520.2 li
.807843 .254902 .313726 .00784314 cmyk
f
428.688 520.2 mo
428.634 520.272 li
426.285 523.701 431.712 556.713 437.733 570.267 cv
443.754 583.812 450.675 591.192 458.901 591.345 cv
467.127 591.507 476.487 582.714 481.716 570.267 cv
486.9 557.919 491.292 524.601 489.24 520.776 cv
489.114 520.776 li
489.078 530.991 485.433 554.886 481.248 564.849 cv
476.118 577.053 466.002 580.248 458.901 580.113 cv
451.8 579.978 444.051 578.124 438.156 564.849 cv
433.305 553.95 428.868 530.208 428.706 520.2 cv
428.688 520.2 li
.913725 .478431 .443137 .180392 cmyk
f
458.532 513.639 mo
470.619 513.639 481.221 515.295 487.098 517.779 cv
487.917 518.715 488.664 519.633 489.339 520.659 cv
489.744 521.271 489.924 522.927 489.915 525.294 cv
485.208 528.606 472.932 530.937 458.532 530.937 cv
444.87 530.937 433.143 528.831 427.95 525.789 cv
427.842 522.981 427.986 520.983 428.472 520.272 cv
429.138 519.309 429.903 518.4 430.74 517.491 cv
436.734 515.169 446.94 513.639 458.532 513.639 cv
.478431 0 .109804 0 cmyk
f
437.599 531.806 mo
436.229 531.806 434.9 531.311 433.809 530.28 cv
433.036 529.549 432.465 528.624 432.098 527.589 cv
434.852 528.509 438.306 529.279 442.254 529.848 cv
440.854 531.131 439.198 531.806 437.599 531.806 cv
.172549 .00784314 .054902 0 cmyk
f
437.142 515.647 mo
437.909 515.336 438.698 515.177 439.474 515.177 cv
439.489 515.177 439.503 515.177 439.518 515.177 cv
438.698 515.325 437.905 515.481 437.142 515.647 cv
.121569 .00784314 0 0 cmyk
f
442.254 529.848 mo
438.306 529.279 434.852 528.509 432.098 527.589 cv
431.137 524.876 431.578 521.407 433.467 518.697 cv
434.485 517.228 435.778 516.198 437.142 515.647 cv
437.905 515.481 438.698 515.325 439.518 515.177 cv
440.872 515.188 442.183 515.682 443.259 516.699 cv
446.058 519.354 446.22 524.538 443.61 528.291 cv
443.198 528.882 442.741 529.402 442.254 529.848 cv
.101961 0 .0156863 0 cmyk
f
442.501 562.643 mo
442.501 565.748 445.02 568.266 448.125 568.266 cv
451.23 568.266 453.748 565.748 453.748 562.643 cv
453.748 559.536 451.23 557.019 448.125 557.019 cv
445.02 557.019 442.501 559.536 442.501 562.643 cv
cp
.478431 0 .109804 0 cmyk
f
468.698 554.136 mo
468.698 555.47 469.78 556.552 471.114 556.552 cv
472.448 556.552 473.529 555.47 473.529 554.136 cv
473.529 552.802 472.448 551.721 471.114 551.721 cv
469.78 551.721 468.698 552.802 468.698 554.136 cv
cp
f
477.251 533.906 mo
477.251 535.063 478.188 535.999 479.343 535.999 cv
480.499 535.999 481.436 535.063 481.436 533.906 cv
481.436 532.751 480.499 531.814 479.343 531.814 cv
478.188 531.814 477.251 532.751 477.251 533.906 cv
cp
f
457.175 543.451 mo
457.175 544.817 458.281 545.925 459.647 545.925 cv
461.013 545.925 462.12 544.817 462.12 543.451 cv
462.12 542.086 461.013 540.979 459.647 540.979 cv
458.281 540.979 457.175 542.086 457.175 543.451 cv
cp
f
447.126 537.448 mo
447.126 538.221 447.752 538.847 448.523 538.847 cv
449.296 538.847 449.922 538.221 449.922 537.448 cv
449.922 536.677 449.296 536.051 448.523 536.051 cv
447.752 536.051 447.126 536.677 447.126 537.448 cv
cp
f
485.481 480.666 mo
460.42 488.466 445.386 485.495 432.082 480.666 cv
432.082 480.666 433.137 490.184 436.599 493.57 cv
440.06 496.957 449.547 498.063 459.144 497.965 cv
468.647 497.868 477.498 496.101 480.966 493.57 cv
484.434 491.04 485.481 480.666 485.481 480.666 cv
cp
.137255 0 .0117647 0 cmyk
f
483.386 480.999 mo
460.291 488.188 446.438 485.449 434.178 480.999 cv
434.178 480.999 435.149 489.771 438.339 492.892 cv
441.529 496.013 450.271 497.031 459.115 496.941 cv
467.873 496.852 476.029 495.223 479.225 492.892 cv
482.42 490.56 483.386 480.999 483.386 480.999 cv
cp
.4 .0666667 0 0 cmyk
f
432.114 480.75 mo
432.114 484.875 444.054 488.219 458.782 488.219 cv
473.51 488.219 485.45 484.875 485.45 480.75 cv
485.45 476.626 473.51 473.282 458.782 473.282 cv
444.054 473.282 432.114 476.626 432.114 480.75 cv
cp
.137255 0 .0117647 0 cmyk
f
436.392 480.262 mo
436.392 483.725 446.416 486.532 458.782 486.532 cv
471.148 486.532 481.173 483.725 481.173 480.262 cv
481.173 476.799 471.148 473.991 458.782 473.991 cv
446.416 473.991 436.392 476.799 436.392 480.262 cv
cp
.4 .0666667 0 0 cmyk
f
439.201 479.833 mo
439.201 482.938 447.968 485.455 458.782 485.455 cv
469.596 485.455 478.362 482.938 478.362 479.833 cv
478.362 476.728 469.596 474.211 458.782 474.211 cv
447.968 474.211 439.201 476.728 439.201 479.833 cv
cp
.572549 .172549 0 0 cmyk
f
458.779 474.215 mo
447.965 474.215 439.203 476.735 439.203 479.841 cv
439.203 480.522 439.663 481.159 440.438 481.764 cv
443.199 479.62 450.354 478.118 458.779 478.118 cv
467.204 478.118 474.388 479.62 477.149 481.764 cv
477.924 481.159 478.355 480.522 478.355 479.841 cv
478.355 476.735 469.593 474.215 458.779 474.215 cv
cp
.137255 0 .0117647 0 cmyk
f
473.437 462.125 mo
476.075 463.955 li
476.075 463.955 475.217 484.928 469.132 490.884 cv
463.048 496.84 455.836 497.231 449.275 492.061 cv
442.715 486.889 441.639 464.217 441.639 464.217 cv
446.221 462.387 li
473.437 462.125 li
cp
.415686 .737255 .964706 .54902 cmyk
f
441.309 463.281 mo
441.309 464.175 441.798 465.025 442.683 465.8 cv
443.566 466.573 444.846 467.271 446.427 467.855 cv
447.217 468.148 448.083 475.211 449.013 475.443 cv
449.942 475.676 450.936 469.078 451.98 469.242 cv
454.071 469.569 456.369 469.75 458.782 469.75 cv
461.194 469.75 463.493 469.569 465.583 469.242 cv
467.674 468.915 469.557 468.441 471.137 467.855 cv
471.928 467.563 472.643 472.341 473.271 471.996 cv
473.898 471.652 474.439 466.187 474.882 465.8 cv
475.766 465.025 476.255 464.175 476.255 463.281 cv
476.255 459.709 468.432 456.813 458.782 456.813 cv
449.132 456.813 441.309 459.709 441.309 463.281 cv
cp
.286275 .733333 1 .227451 cmyk
f
480.558 476.97 mo
483.627 478.187 485.447 479.661 485.447 481.264 cv
485.447 485.388 473.504 488.729 458.775 488.729 cv
444.047 488.729 432.12 485.388 432.12 481.264 cv
432.12 479.661 433.94 478.187 437.01 476.97 cv
436.61 477.581 436.396 478.225 436.396 478.88 cv
436.396 483.393 446.409 487.047 458.775 487.047 cv
471.141 487.047 481.171 483.393 481.171 478.88 cv
481.171 478.225 480.958 477.581 480.558 476.97 cv
cp
.137255 0 .0117647 0 cmyk
f
439.818 490.063 mo
439.818 491.544 440.938 493.144 442.32 493.635 cv
443.702 494.127 444.822 493.325 444.822 491.844 cv
444.822 490.362 443.702 488.764 442.32 488.271 cv
440.938 487.78 439.818 488.582 439.818 490.063 cv
cp
0 0 0 0 cmyk
f
582.21 483.543 mo
578.079 491.715 577.656 500.328 582.192 506.403 cv
586.719 512.487 589.698 514.521 592.29 518.337 cv
594.873 522.162 593.244 540.279 588.294 560.223 cv
581.949 585.846 564.822 599.148 558.945 598.68 cv
553.077 598.212 539.28 589.689 530.64 560.223 cv
524.295 538.587 521.469 524.655 525.609 518.337 cv
529.749 512.028 532.044 511.497 536.418 505.827 cv
540.801 500.148 540.432 492.273 536.355 483.543 cv
582.21 483.543 li
.137255 0 .0117647 0 cmyk
f
525.834 542.219 mo
547.853 547.251 569.883 548.149 591.9 542.639 cv
591.032 548.084 589.818 554.071 588.291 560.233 cv
581.941 585.854 566.537 598.905 558.955 598.682 cv
551.373 598.459 539.277 589.698 530.636 560.233 cv
528.654 553.479 527.023 547.475 525.834 542.219 cv
cp
.572549 .172549 0 0 cmyk
f
579.123 482.778 mo
575.541 489.87 575.172 503.055 579.105 508.329 cv
583.038 513.612 585.783 515.691 587.871 518.877 cv
589.959 522.063 585.747 554.409 580.743 566.316 cv
575.748 578.223 566.793 586.62 558.918 586.467 cv
551.052 586.314 544.437 579.267 538.677 566.316 cv
532.917 553.356 527.742 521.784 529.983 518.508 cv
532.233 515.223 535.572 512.748 539.37 507.825 cv
543.177 502.902 542.853 490.356 539.316 482.778 cv
579.123 482.778 li
f
528.714 520.2 mo
562.068 521.262 li
589.248 520.767 li
591.3 524.592 586.917 557.928 581.733 570.267 cv
576.504 582.723 567.144 591.498 558.918 591.345 cv
550.692 591.192 543.78 583.821 537.75 570.267 cv
531.729 556.722 526.311 523.71 528.66 520.272 cv
528.714 520.2 li
.807843 .254902 .313726 .00784314 cmyk
f
528.714 520.2 mo
528.66 520.272 li
526.311 523.701 531.729 556.713 537.75 570.267 cv
543.78 583.812 550.692 591.192 558.927 591.345 cv
567.153 591.507 576.513 582.714 581.742 570.267 cv
586.926 557.919 591.309 524.601 589.257 520.776 cv
589.14 520.776 li
589.104 530.991 585.45 554.886 581.265 564.849 cv
576.144 577.053 566.019 580.248 558.927 580.113 cv
551.826 579.978 544.077 578.124 538.173 564.849 cv
533.331 553.95 528.885 530.208 528.732 520.2 cv
528.714 520.2 li
.913725 .478431 .443137 .180392 cmyk
f
558.549 513.639 mo
570.645 513.639 581.247 515.295 587.115 517.779 cv
587.934 518.715 588.69 519.633 589.365 520.659 cv
589.77 521.271 589.941 522.927 589.932 525.294 cv
585.234 528.606 572.958 530.937 558.549 530.937 cv
544.896 530.937 533.169 528.831 527.976 525.789 cv
527.859 522.981 528.003 520.983 528.489 520.272 cv
529.164 519.309 529.92 518.4 530.757 517.491 cv
536.76 515.169 546.957 513.639 558.549 513.639 cv
.478431 0 .109804 0 cmyk
f
537.62 531.806 mo
536.25 531.806 534.922 531.311 533.835 530.28 cv
533.062 529.549 532.49 528.624 532.122 527.588 cv
534.875 528.508 538.329 529.279 542.275 529.848 cv
540.876 531.131 539.22 531.806 537.62 531.806 cv
.172549 .00784314 .054902 0 cmyk
f
537.164 515.646 mo
537.931 515.336 538.72 515.177 539.496 515.177 cv
539.51 515.177 539.524 515.177 539.538 515.177 cv
538.719 515.325 537.928 515.481 537.164 515.646 cv
.121569 .00784314 0 0 cmyk
f
542.275 529.848 mo
538.329 529.279 534.875 528.508 532.122 527.588 cv
531.158 524.875 531.595 521.407 533.484 518.697 cv
534.506 517.227 535.799 516.198 537.164 515.646 cv
537.928 515.481 538.719 515.325 539.538 515.177 cv
540.893 515.188 542.206 515.682 543.285 516.699 cv
546.084 519.354 546.237 524.538 543.627 528.291 cv
543.216 528.882 542.761 529.401 542.275 529.848 cv
.101961 0 .0156863 0 cmyk
f
542.523 562.643 mo
542.519 565.748 545.032 568.27 548.138 568.274 cv
551.244 568.279 553.766 565.766 553.771 562.66 cv
553.771 562.643 li
553.775 559.536 551.262 557.015 548.156 557.01 cv
545.05 557.005 542.528 559.519 542.523 562.624 cv
542.523 562.643 li
cp
.478431 0 .109804 0 cmyk
f
568.721 554.136 mo
568.719 555.471 569.798 556.554 571.132 556.556 cv
572.467 556.558 573.55 555.478 573.552 554.144 cv
573.552 554.136 li
573.554 552.802 572.474 551.719 571.14 551.717 cv
569.806 551.715 568.723 552.794 568.721 554.129 cv
568.721 554.136 li
cp
f
577.272 533.906 mo
577.272 535.063 578.21 535.999 579.365 535.999 cv
580.521 535.999 581.458 535.063 581.458 533.906 cv
581.458 532.751 580.521 531.814 579.365 531.814 cv
578.21 531.814 577.272 532.751 577.272 533.906 cv
cp
f
557.196 543.451 mo
557.196 544.817 558.304 545.925 559.669 545.925 cv
561.035 545.925 562.143 544.817 562.143 543.451 cv
562.143 542.086 561.035 540.979 559.669 540.979 cv
558.304 540.979 557.196 542.086 557.196 543.451 cv
cp
f
547.148 537.448 mo
547.148 538.221 547.774 538.847 548.546 538.847 cv
549.318 538.847 549.943 538.221 549.943 537.448 cv
549.943 536.677 549.318 536.051 548.546 536.051 cv
547.774 536.051 547.148 536.677 547.148 537.448 cv
cp
f
585.504 480.666 mo
560.441 488.466 545.408 485.495 532.104 480.666 cv
532.104 480.666 533.159 490.184 536.62 493.57 cv
540.082 496.957 549.569 498.063 559.165 497.965 cv
568.669 497.868 577.521 496.101 580.987 493.57 cv
584.455 491.04 585.504 480.666 585.504 480.666 cv
cp
.137255 0 .0117647 0 cmyk
f
583.408 480.999 mo
560.313 488.188 546.459 485.449 534.199 480.999 cv
534.199 480.999 535.172 489.771 538.361 492.892 cv
541.551 496.013 550.294 497.031 559.137 496.94 cv
567.896 496.852 576.051 495.223 579.247 492.892 cv
582.442 490.56 583.408 480.999 583.408 480.999 cv
cp
.4 .0666667 0 0 cmyk
f
532.136 480.75 mo
532.136 484.875 544.075 488.219 558.804 488.219 cv
573.532 488.219 585.472 484.875 585.472 480.75 cv
585.472 476.626 573.532 473.282 558.804 473.282 cv
544.075 473.282 532.136 476.626 532.136 480.75 cv
cp
.137255 0 .0117647 0 cmyk
f
536.413 480.262 mo
536.413 483.725 546.438 486.532 558.804 486.532 cv
571.17 486.532 581.194 483.725 581.194 480.262 cv
581.194 476.799 571.17 473.991 558.804 473.991 cv
546.438 473.991 536.413 476.799 536.413 480.262 cv
cp
.4 .0666667 0 0 cmyk
f
539.224 479.833 mo
539.224 482.938 547.99 485.455 558.804 485.455 cv
569.618 485.455 578.385 482.938 578.385 479.833 cv
578.385 476.728 569.618 474.211 558.804 474.211 cv
547.99 474.211 539.224 476.728 539.224 479.833 cv
cp
.572549 .172549 0 0 cmyk
f
558.801 474.215 mo
547.987 474.215 539.226 476.735 539.226 479.841 cv
539.226 480.522 539.686 481.159 540.459 481.764 cv
543.222 479.62 550.376 478.118 558.801 478.118 cv
567.227 478.118 574.409 479.62 577.172 481.764 cv
577.946 481.159 578.377 480.522 578.377 479.841 cv
578.377 476.735 569.615 474.215 558.801 474.215 cv
cp
.137255 0 .0117647 0 cmyk
f
580.58 476.97 mo
583.648 478.187 585.469 479.66 585.469 481.264 cv
585.469 485.388 573.525 488.729 558.797 488.729 cv
544.068 488.729 532.143 485.388 532.143 481.264 cv
532.143 479.66 533.963 478.187 537.032 476.97 cv
536.632 477.581 536.419 478.225 536.419 478.88 cv
536.419 483.393 546.432 487.047 558.797 487.047 cv
571.163 487.047 581.193 483.393 581.193 478.88 cv
581.193 478.225 580.979 477.581 580.58 476.97 cv
cp
f
539.841 490.063 mo
539.838 491.543 540.955 493.145 542.337 493.639 cv
543.719 494.134 544.842 493.336 544.845 491.855 cv
544.845 491.844 li
544.848 490.364 543.73 488.763 542.349 488.268 cv
540.967 487.772 539.844 488.571 539.841 490.051 cv
539.841 490.063 li
cp
0 0 0 0 cmyk
f
549.908 454.507 mo
545.933 446.956 552.719 441.168 560.041 439.07 cv
569.864 436.255 574.067 431.861 570.418 426.227 cv
566.523 420.215 563.39 418.787 557.314 415.322 cv
565.08 416.27 573.357 420.957 576.216 424.907 cv
579.073 428.857 580.236 438.085 572.252 442.772 cv
566.282 446.277 557.616 450.288 563.059 458.203 cv
565.64 461.958 568.607 466.602 562.476 464.674 cv
556.343 462.745 552.323 459.094 549.908 454.507 cv
cp
.807843 .254902 .313726 .00784314 cmyk
f
536.797 417.329 mo
528.319 429.465 554.989 427.967 546.441 442.358 cv
543.034 433.703 535.93 436.845 528.439 430.381 cv
523.556 426.167 528.257 420.202 536.797 417.329 cv
536.797 417.329 li
cp
f
548.072 420.495 mo
536.243 412.845 545.972 402.484 561.094 407.855 cv
555.886 407.534 545.404 411.62 548.072 420.495 cv
cp
f
770.697 172.089 mo
766.575 180.261 766.143 188.874 770.679 194.949 cv
775.215 201.033 778.185 203.067 780.777 206.883 cv
783.369 210.708 781.731 228.825 776.79 248.769 cv
770.436 274.392 753.309 287.694 747.441 287.226 cv
741.564 286.758 727.767 278.235 719.127 248.769 cv
712.782 227.133 709.956 213.201 714.096 206.883 cv
718.236 200.574 720.531 200.043 724.914 194.373 cv
729.288 188.694 728.919 180.819 724.851 172.089 cv
770.697 172.089 li
.137255 0 .0117647 0 cmyk
f
714.323 230.763 mo
736.342 235.796 758.372 236.694 780.391 231.184 cv
779.521 236.629 778.308 242.616 776.78 248.778 cv
770.431 274.398 755.027 287.45 747.444 287.227 cv
739.862 287.003 727.768 278.243 719.125 248.778 cv
717.145 242.024 715.514 236.02 714.324 230.763 cv
714.323 230.763 li
cp
.572549 .172549 0 0 cmyk
f
767.61 171.324 mo
764.028 178.416 763.659 191.601 767.592 196.875 cv
771.534 202.158 774.27 204.237 776.358 207.423 cv
778.455 210.609 774.234 242.955 769.239 254.862 cv
764.235 266.769 755.28 275.157 747.414 275.013 cv
739.539 274.86 732.933 267.813 727.173 254.862 cv
721.404 241.902 716.229 210.33 718.479 207.054 cv
720.72 203.769 724.059 201.294 727.866 196.371 cv
731.664 191.448 731.34 178.902 727.812 171.324 cv
767.61 171.324 li
f
717.21 208.746 mo
750.564 209.808 li
777.735 209.313 li
779.796 213.138 775.413 246.474 770.229 258.813 cv
765 271.269 755.64 280.044 747.405 279.891 cv
739.179 279.729 732.267 272.358 726.246 258.813 cv
720.216 245.268 714.807 212.247 717.156 208.818 cv
717.21 208.746 li
0 .615686 .945098 0 cmyk
f
717.201 208.746 mo
717.147 208.809 li
714.798 212.247 720.216 245.259 726.246 258.813 cv
732.267 272.358 739.188 279.738 747.414 279.891 cv
755.64 280.053 765 271.26 770.229 258.813 cv
775.413 246.465 779.805 213.147 777.744 209.322 cv
777.627 209.322 li
777.591 219.537 773.937 243.432 769.761 253.395 cv
764.631 265.599 754.515 268.794 747.414 268.659 cv
740.313 268.524 732.564 266.67 726.66 253.395 cv
721.818 242.496 717.381 218.754 717.219 208.746 cv
717.201 208.746 li
.121569 .937255 1 .027451 cmyk
f
747.036 202.185 mo
759.132 202.185 769.734 203.841 775.602 206.325 cv
776.43 207.261 777.177 208.179 777.852 209.205 cv
778.257 209.817 778.437 211.473 778.428 213.84 cv
773.721 217.143 761.445 219.483 747.036 219.483 cv
733.383 219.483 721.656 217.368 716.463 214.335 cv
716.346 211.527 716.49 209.529 716.985 208.818 cv
717.651 207.846 718.416 206.946 719.253 206.037 cv
725.247 203.715 735.453 202.185 747.036 202.185 cv
.0196078 .152941 .713726 0 cmyk
f
726.113 220.348 mo
724.743 220.348 723.413 219.854 722.322 218.826 cv
721.548 218.094 720.977 217.168 720.61 216.131 cv
723.365 217.05 726.82 217.822 730.769 218.392 cv
729.369 219.674 727.713 220.349 726.113 220.348 cv
0 .105882 .14902 0 cmyk
f
725.651 204.193 mo
726.419 203.883 727.21 203.723 727.987 203.723 cv
728.001 203.723 728.016 203.723 728.03 203.724 cv
727.209 203.871 726.416 204.028 725.651 204.193 cv
.121569 .00784314 0 0 cmyk
f
730.769 218.392 mo
726.82 217.822 723.365 217.05 720.61 216.131 cv
719.649 213.419 720.089 209.952 721.971 207.243 cv
722.992 205.774 724.286 204.745 725.651 204.193 cv
726.416 204.028 727.209 203.871 728.03 203.724 cv
729.385 203.734 730.696 204.228 731.772 205.245 cv
734.571 207.9 734.733 213.084 732.123 216.837 cv
731.711 217.427 731.256 217.946 730.769 218.392 cv
.00784314 .0196078 .121569 0 cmyk
f
731.013 251.187 mo
731.013 254.293 733.531 256.811 736.637 256.811 cv
739.742 256.811 742.26 254.293 742.26 251.187 cv
742.26 248.082 739.742 245.563 736.637 245.563 cv
733.531 245.563 731.013 248.082 731.013 251.187 cv
cp
.0196078 .152941 .713726 0 cmyk
f
757.21 242.681 mo
757.21 244.015 758.292 245.097 759.626 245.097 cv
760.96 245.097 762.041 244.015 762.041 242.681 cv
762.041 241.347 760.96 240.265 759.626 240.265 cv
758.292 240.265 757.21 241.347 757.21 242.681 cv
cp
f
765.763 222.452 mo
765.763 223.607 766.699 224.544 767.854 224.544 cv
769.011 224.544 769.947 223.607 769.947 222.452 cv
769.947 221.296 769.011 220.359 767.854 220.359 cv
766.699 220.359 765.763 221.296 765.763 222.452 cv
cp
f
745.687 231.997 mo
745.687 233.362 746.793 234.469 748.159 234.469 cv
749.524 234.469 750.632 233.362 750.632 231.997 cv
750.632 230.631 749.524 229.523 748.159 229.523 cv
746.793 229.523 745.687 230.631 745.687 231.997 cv
cp
f
735.638 225.993 mo
735.638 226.766 736.264 227.391 737.035 227.391 cv
737.808 227.391 738.434 226.766 738.434 225.993 cv
738.434 225.222 737.808 224.596 737.035 224.596 cv
736.264 224.596 735.638 225.222 735.638 225.993 cv
cp
f
773.993 169.21 mo
748.932 177.011 733.897 174.04 720.594 169.21 cv
720.594 169.21 721.648 178.729 725.11 182.115 cv
728.571 185.502 738.059 186.608 747.655 186.51 cv
757.159 186.413 766.01 184.646 769.478 182.115 cv
772.945 179.585 773.993 169.21 773.993 169.21 cv
cp
.137255 0 .0117647 0 cmyk
f
771.898 169.544 mo
748.803 176.732 734.949 173.995 722.689 169.544 cv
722.689 169.544 723.661 178.315 726.851 181.436 cv
730.041 184.557 738.783 185.576 747.627 185.486 cv
756.385 185.396 764.541 183.768 767.736 181.436 cv
770.932 179.104 771.897 169.544 771.897 169.544 cv
771.898 169.544 li
cp
.4 .0666667 0 0 cmyk
f
720.626 169.295 mo
720.626 173.42 732.565 176.764 747.294 176.764 cv
762.021 176.764 773.962 173.42 773.962 169.295 cv
773.962 165.171 762.021 161.827 747.294 161.827 cv
732.565 161.827 720.626 165.171 720.626 169.295 cv
cp
.137255 0 .0117647 0 cmyk
f
724.903 168.807 mo
724.903 172.27 734.928 175.077 747.294 175.077 cv
759.66 175.077 769.685 172.27 769.685 168.807 cv
769.685 165.344 759.66 162.536 747.294 162.536 cv
734.928 162.536 724.903 165.344 724.903 168.807 cv
cp
.4 .0666667 0 0 cmyk
f
727.713 168.378 mo
727.713 171.483 736.479 174 747.294 174 cv
758.107 174 766.874 171.483 766.874 168.378 cv
766.874 165.272 758.107 162.755 747.294 162.755 cv
736.479 162.755 727.713 165.272 727.713 168.378 cv
cp
.572549 .172549 0 0 cmyk
f
747.291 162.759 mo
736.477 162.759 727.715 165.28 727.715 168.385 cv
727.715 169.067 728.175 169.704 728.949 170.309 cv
731.711 168.165 738.865 166.663 747.291 166.663 cv
755.716 166.663 762.899 168.165 765.661 170.309 cv
766.436 169.704 766.867 169.067 766.867 168.385 cv
766.867 165.28 758.104 162.759 747.291 162.759 cv
cp
.137255 0 .0117647 0 cmyk
f
761.948 150.67 mo
764.587 152.5 li
764.587 152.5 763.729 173.472 757.644 179.429 cv
751.56 185.385 744.348 185.776 737.787 180.605 cv
731.227 175.434 730.15 152.762 730.15 152.762 cv
734.732 150.932 li
761.948 150.67 li
cp
.415686 .737255 .964706 .54902 cmyk
f
729.82 151.826 mo
729.82 152.72 730.31 153.57 731.194 154.344 cv
732.078 155.118 733.357 155.815 734.938 156.401 cv
735.729 156.693 736.595 163.755 737.524 163.988 cv
738.454 164.221 739.447 157.624 740.492 157.787 cv
742.583 158.114 744.881 158.295 747.294 158.295 cv
749.706 158.295 752.005 158.114 754.095 157.787 cv
756.186 157.46 758.068 156.986 759.648 156.401 cv
760.439 156.108 761.154 160.886 761.782 160.542 cv
762.41 160.197 762.951 154.731 763.394 154.344 cv
764.277 153.57 764.767 152.72 764.767 151.826 cv
764.767 148.254 756.943 145.357 747.294 145.357 cv
737.644 145.357 729.82 148.254 729.82 151.826 cv
cp
.286275 .733333 1 .227451 cmyk
f
769.069 165.515 mo
772.139 166.731 773.959 168.206 773.959 169.809 cv
773.959 173.933 762.016 177.274 747.287 177.274 cv
732.559 177.274 720.632 173.933 720.632 169.809 cv
720.632 168.206 722.453 166.731 725.521 165.515 cv
725.122 166.126 724.908 166.77 724.908 167.425 cv
724.908 171.938 734.921 175.591 747.287 175.591 cv
759.652 175.591 769.683 171.938 769.683 167.425 cv
769.683 166.77 769.47 166.126 769.069 165.515 cv
cp
.137255 0 .0117647 0 cmyk
f
728.33 178.608 mo
728.33 180.089 729.45 181.688 730.832 182.18 cv
732.214 182.672 733.334 181.87 733.334 180.389 cv
733.334 178.908 732.214 177.309 730.832 176.817 cv
729.45 176.325 728.33 177.127 728.33 178.608 cv
cp
0 0 0 0 cmyk
f
870.714 172.089 mo
866.592 180.261 866.169 188.874 870.705 194.949 cv
875.232 201.033 878.211 203.067 880.803 206.883 cv
883.386 210.708 881.757 228.825 876.807 248.769 cv
870.462 274.392 853.335 287.694 847.458 287.226 cv
841.59 286.758 827.793 278.235 819.153 248.769 cv
812.808 227.133 809.982 213.201 814.122 206.883 cv
818.262 200.574 820.557 200.043 824.931 194.373 cv
829.314 188.694 828.945 180.819 824.868 172.089 cv
870.714 172.089 li
.137255 0 .0117647 0 cmyk
f
814.346 230.763 mo
836.364 235.795 858.395 236.694 880.412 231.184 cv
879.544 236.629 878.33 242.616 876.803 248.778 cv
870.453 274.398 855.049 287.45 847.467 287.227 cv
839.885 287.004 827.789 278.243 819.147 248.778 cv
817.166 242.024 815.535 236.02 814.346 230.763 cv
cp
.572549 .172549 0 0 cmyk
f
867.636 171.324 mo
864.054 178.416 863.685 191.601 867.618 196.875 cv
871.551 202.158 874.296 204.237 876.384 207.423 cv
878.472 210.609 874.26 242.955 869.256 254.862 cv
864.261 266.769 855.306 275.157 847.431 275.013 cv
839.565 274.86 832.95 267.813 827.19 254.862 cv
821.43 241.902 816.255 210.33 818.496 207.054 cv
820.746 203.769 824.085 201.294 827.883 196.371 cv
831.69 191.448 831.366 178.902 827.829 171.324 cv
867.636 171.324 li
f
817.227 208.746 mo
850.581 209.808 li
877.761 209.313 li
879.813 213.138 875.43 246.474 870.246 258.813 cv
865.017 271.269 855.657 280.044 847.431 279.891 cv
839.205 279.729 832.284 272.358 826.263 258.813 cv
820.242 245.268 814.824 212.247 817.173 208.818 cv
817.227 208.746 li
0 .615686 .945098 0 cmyk
f
817.227 208.746 mo
817.173 208.809 li
814.824 212.247 820.242 245.259 826.263 258.813 cv
832.293 272.358 839.205 279.738 847.44 279.891 cv
855.666 280.053 865.026 271.26 870.255 258.813 cv
875.439 246.465 879.822 213.147 877.77 209.322 cv
877.644 209.322 li
877.617 219.537 873.963 243.432 869.778 253.395 cv
864.657 265.599 854.532 268.794 847.44 268.659 cv
840.339 268.524 832.59 266.67 826.686 253.395 cv
821.835 242.496 817.398 218.754 817.245 208.746 cv
817.227 208.746 li
.121569 .937255 1 .027451 cmyk
f
847.062 202.185 mo
859.158 202.185 869.76 203.841 875.628 206.325 cv
876.447 207.261 877.203 208.179 877.878 209.205 cv
878.283 209.817 878.454 211.473 878.445 213.84 cv
873.747 217.143 861.471 219.483 847.062 219.483 cv
833.409 219.483 821.682 217.368 816.489 214.335 cv
816.372 211.527 816.516 209.529 817.002 208.818 cv
817.668 207.846 818.433 206.946 819.27 206.037 cv
825.273 203.715 835.47 202.185 847.062 202.185 cv
.0196078 .152941 .713726 0 cmyk
f
826.132 220.348 mo
824.763 220.348 823.436 219.854 822.348 218.826 cv
821.574 218.094 821.002 217.167 820.634 216.13 cv
823.387 217.049 826.841 217.821 830.787 218.391 cv
829.387 219.674 827.731 220.349 826.132 220.348 cv
0 .105882 .14902 0 cmyk
f
825.676 204.193 mo
826.443 203.883 827.232 203.723 828.007 203.723 cv
828.022 203.723 828.036 203.723 828.051 203.724 cv
827.232 203.871 826.439 204.027 825.676 204.193 cv
.121569 .00784314 0 0 cmyk
f
830.787 218.391 mo
826.841 217.821 823.387 217.049 820.634 216.13 cv
819.672 213.418 820.109 209.952 821.997 207.243 cv
823.019 205.774 824.312 204.744 825.676 204.193 cv
826.439 204.027 827.232 203.871 828.051 203.724 cv
829.404 203.734 830.714 204.228 831.789 205.245 cv
834.597 207.9 834.75 213.084 832.14 216.837 cv
831.729 217.427 831.273 217.945 830.787 218.391 cv
.00784314 .0196078 .121569 0 cmyk
f
831.035 251.187 mo
831.03 254.293 833.544 256.814 836.649 256.819 cv
839.756 256.824 842.277 254.311 842.282 251.205 cv
842.282 251.187 li
842.287 248.082 839.773 245.56 836.668 245.555 cv
833.562 245.55 831.04 248.063 831.035 251.169 cv
831.035 251.187 li
cp
.0196078 .152941 .713726 0 cmyk
f
857.232 242.681 mo
857.23 244.015 858.31 245.099 859.644 245.101 cv
860.979 245.103 862.062 244.023 862.063 242.688 cv
862.063 242.681 li
862.065 241.347 860.985 240.264 859.651 240.262 cv
858.317 240.259 857.234 241.339 857.232 242.673 cv
857.232 242.681 li
cp
f
865.784 222.451 mo
865.784 223.607 866.722 224.544 867.877 224.544 cv
869.032 224.544 869.97 223.607 869.97 222.451 cv
869.97 221.296 869.032 220.359 867.877 220.359 cv
866.722 220.359 865.784 221.296 865.784 222.451 cv
cp
f
845.708 231.997 mo
845.708 233.362 846.815 234.469 848.181 234.469 cv
849.547 234.469 850.654 233.362 850.654 231.997 cv
850.654 230.631 849.547 229.523 848.181 229.523 cv
846.815 229.523 845.708 230.631 845.708 231.997 cv
cp
f
835.66 225.994 mo
835.66 226.766 836.285 227.392 837.058 227.392 cv
837.83 227.392 838.455 226.766 838.455 225.994 cv
838.455 225.222 837.83 224.596 837.058 224.596 cv
836.285 224.596 835.66 225.222 835.66 225.994 cv
cp
f
874.016 169.21 mo
848.953 177.011 833.92 174.04 820.616 169.21 cv
820.616 169.21 821.671 178.729 825.132 182.115 cv
828.594 185.502 838.081 186.608 847.677 186.51 cv
857.182 186.413 866.032 184.646 869.499 182.115 cv
872.967 179.585 874.016 169.21 874.016 169.21 cv
cp
.137255 0 .0117647 0 cmyk
f
871.92 169.544 mo
848.825 176.732 834.971 173.995 822.711 169.544 cv
822.711 169.544 823.684 178.315 826.873 181.436 cv
830.063 184.557 838.806 185.576 847.648 185.486 cv
856.407 185.396 864.563 183.768 867.759 181.436 cv
870.954 179.104 871.92 169.544 871.92 169.544 cv
cp
.4 .0666667 0 0 cmyk
f
820.647 169.295 mo
820.647 173.42 832.587 176.763 847.315 176.763 cv
862.044 176.763 873.983 173.42 873.983 169.295 cv
873.983 165.171 862.044 161.827 847.315 161.827 cv
832.587 161.827 820.647 165.171 820.647 169.295 cv
cp
.137255 0 .0117647 0 cmyk
f
824.925 168.807 mo
824.925 172.27 834.949 175.077 847.315 175.077 cv
859.682 175.077 869.706 172.27 869.706 168.807 cv
869.706 165.344 859.682 162.536 847.315 162.536 cv
834.949 162.536 824.925 165.344 824.925 168.807 cv
cp
.4 .0666667 0 0 cmyk
f
827.735 168.378 mo
827.735 171.483 836.502 174 847.315 174 cv
858.13 174 866.896 171.483 866.896 168.378 cv
866.896 165.272 858.13 162.755 847.315 162.755 cv
836.502 162.755 827.735 165.272 827.735 168.378 cv
cp
.572549 .172549 0 0 cmyk
f
847.313 162.759 mo
836.499 162.759 827.737 165.28 827.737 168.385 cv
827.737 169.067 828.197 169.704 828.971 170.309 cv
831.733 168.165 838.888 166.663 847.313 166.663 cv
855.738 166.663 862.921 168.165 865.684 170.309 cv
866.458 169.704 866.889 169.067 866.889 168.385 cv
866.889 165.28 858.127 162.759 847.313 162.759 cv
cp
.137255 0 .0117647 0 cmyk
f
869.092 165.515 mo
872.16 166.731 873.98 168.206 873.98 169.809 cv
873.98 173.933 862.037 177.274 847.309 177.274 cv
832.58 177.274 820.654 173.933 820.654 169.809 cv
820.654 168.206 822.475 166.731 825.544 165.515 cv
825.144 166.126 824.931 166.77 824.931 167.425 cv
824.931 171.938 834.943 175.591 847.309 175.591 cv
859.675 175.591 869.705 171.938 869.705 167.425 cv
869.705 166.77 869.491 166.126 869.092 165.515 cv
cp
f
828.353 178.608 mo
828.35 180.088 829.467 181.689 830.849 182.184 cv
832.23 182.679 833.354 181.881 833.356 180.401 cv
833.356 180.389 li
833.359 178.909 832.242 177.308 830.86 176.813 cv
829.479 176.318 828.355 177.116 828.353 178.596 cv
828.353 178.608 li
cp
0 0 0 0 cmyk
f
838.42 143.051 mo
834.444 135.5 841.23 129.713 848.553 127.615 cv
858.376 124.8 862.579 120.406 858.93 114.771 cv
855.035 108.76 851.901 107.332 845.826 103.866 cv
853.592 104.814 861.869 109.501 864.728 113.452 cv
867.585 117.402 868.748 126.63 860.764 131.317 cv
854.795 134.822 846.128 138.833 851.57 146.748 cv
854.151 150.502 857.119 155.147 850.987 153.219 cv
844.854 151.29 840.835 147.639 838.42 143.051 cv
cp
0 .615686 .945098 0 cmyk
f
825.309 105.874 mo
816.831 118.009 843.501 116.512 834.953 130.903 cv
831.546 122.248 824.441 125.39 816.951 118.926 cv
812.067 114.712 816.769 108.747 825.309 105.874 cv
cp
f
836.584 109.039 mo
824.755 101.39 834.483 91.0288 849.605 96.3999 cv
844.397 96.0791 833.916 100.165 836.584 109.039 cv
cp
f
191.763 791.19 mo
187.641 799.362 187.209 807.975 191.745 814.05 cv
196.281 820.134 199.251 822.168 201.843 825.984 cv
204.435 829.809 202.797 847.926 197.856 867.87 cv
191.502 893.493 174.375 906.795 168.507 906.327 cv
162.63 905.859 148.833 897.336 140.193 867.87 cv
133.848 846.234 131.031 832.293 135.162 825.984 cv
139.302 819.675 141.597 819.144 145.98 813.474 cv
150.363 807.795 149.985 799.911 145.917 791.19 cv
191.763 791.19 li
.137255 0 .0117647 0 cmyk
f
135.391 849.863 mo
157.41 854.896 179.44 855.794 201.458 850.284 cv
200.589 855.729 199.375 861.716 197.848 867.878 cv
191.498 893.498 176.095 906.55 168.512 906.326 cv
160.93 906.104 148.835 897.343 140.193 867.878 cv
138.212 861.124 136.581 855.119 135.391 849.863 cv
cp
.572549 .172549 0 0 cmyk
f
188.676 790.425 mo
185.094 797.517 184.725 810.702 188.667 815.976 cv
192.6 821.259 195.336 823.329 197.424 826.524 cv
199.521 829.71 195.3 862.056 190.305 873.963 cv
185.301 885.87 176.346 894.258 168.48 894.114 cv
160.605 893.961 153.999 886.914 148.239 873.963 cv
142.479 861.003 137.295 829.431 139.545 826.155 cv
141.786 822.87 145.125 820.395 148.932 815.472 cv
152.73 810.549 152.415 798.003 148.878 790.425 cv
188.676 790.425 li
f
138.276 827.847 mo
171.63 828.909 li
198.81 828.414 li
200.862 832.239 196.479 865.566 191.295 877.914 cv
186.066 890.361 176.706 899.145 168.48 898.992 cv
160.245 898.83 153.333 891.459 147.312 877.914 cv
141.282 864.36 135.873 831.348 138.222 827.919 cv
138.276 827.847 li
.564706 .792157 0 0 cmyk
f
138.267 827.847 mo
138.213 827.91 li
135.864 831.348 141.291 864.36 147.312 877.914 cv
153.333 891.459 160.254 898.839 168.48 898.992 cv
176.706 899.145 186.066 890.361 191.295 877.914 cv
196.479 865.566 200.871 832.248 198.819 828.423 cv
198.693 828.423 li
198.666 838.638 195.012 862.533 190.827 872.496 cv
185.697 884.691 175.581 887.895 168.48 887.76 cv
161.379 887.625 153.63 885.771 147.735 872.496 cv
142.884 861.597 138.447 837.855 138.285 827.847 cv
138.267 827.847 li
.803922 .992157 .0509804 .00784314 cmyk
f
168.111 821.286 mo
180.198 821.286 190.8 822.942 196.677 825.426 cv
197.496 826.362 198.243 827.28 198.918 828.306 cv
199.323 828.918 199.503 830.574 199.494 832.941 cv
194.787 836.244 182.511 838.584 168.111 838.584 cv
154.449 838.584 142.722 836.469 137.538 833.436 cv
137.421 830.628 137.565 828.63 138.051 827.919 cv
138.717 826.947 139.482 826.047 140.319 825.138 cv
146.313 822.816 156.519 821.286 168.111 821.286 cv
.141176 .317647 0 0 cmyk
f
147.179 839.449 mo
145.809 839.449 144.479 838.955 143.388 837.927 cv
142.614 837.195 142.042 836.268 141.675 835.23 cv
144.429 836.15 147.884 836.922 151.835 837.493 cv
150.435 838.776 148.779 839.45 147.179 839.449 cv
.0666667 .145098 0 0 cmyk
f
146.721 823.294 mo
147.488 822.983 148.277 822.824 149.053 822.824 cv
149.068 822.824 149.082 822.824 149.097 822.824 cv
148.278 822.972 147.484 823.128 146.721 823.294 cv
.121569 .00784314 0 0 cmyk
f
151.835 837.493 mo
147.884 836.922 144.429 836.15 141.675 835.23 cv
140.716 832.518 141.158 829.052 143.046 826.344 cv
144.064 824.875 145.357 823.845 146.721 823.294 cv
147.484 823.128 148.278 822.972 149.097 822.824 cv
150.451 822.835 151.762 823.329 152.838 824.346 cv
155.637 826.992 155.799 832.185 153.189 835.938 cv
152.778 836.528 152.322 837.047 151.835 837.493 cv
.0117647 .054902 0 0 cmyk
f
152.081 870.287 mo
152.081 873.393 154.599 875.91 157.704 875.91 cv
160.81 875.91 163.328 873.393 163.328 870.287 cv
163.328 867.182 160.81 864.663 157.704 864.663 cv
154.599 864.663 152.081 867.182 152.081 870.287 cv
cp
.141176 .317647 0 0 cmyk
f
178.278 861.781 mo
178.278 863.115 179.359 864.196 180.693 864.196 cv
182.027 864.196 183.109 863.115 183.109 861.781 cv
183.109 860.446 182.027 859.365 180.693 859.365 cv
179.359 859.365 178.278 860.446 178.278 861.781 cv
cp
f
186.83 841.552 mo
186.83 842.707 187.767 843.644 188.922 843.644 cv
190.078 843.644 191.015 842.707 191.015 841.552 cv
191.015 840.396 190.078 839.459 188.922 839.459 cv
187.767 839.459 186.83 840.396 186.83 841.552 cv
cp
f
166.754 851.097 mo
166.754 852.462 167.861 853.569 169.227 853.569 cv
170.592 853.569 171.7 852.462 171.7 851.097 cv
171.7 849.73 170.592 848.623 169.227 848.623 cv
167.861 848.623 166.754 849.73 166.754 851.097 cv
cp
f
156.706 845.094 mo
156.706 845.865 157.331 846.491 158.103 846.491 cv
158.875 846.491 159.501 845.865 159.501 845.094 cv
159.501 844.321 158.875 843.695 158.103 843.695 cv
157.331 843.695 156.706 844.321 156.706 845.094 cv
cp
f
195.061 788.311 mo
169.999 796.11 154.965 793.14 141.662 788.311 cv
141.662 788.311 142.716 797.828 146.178 801.215 cv
149.639 804.603 159.126 805.708 168.723 805.61 cv
178.227 805.513 187.077 803.745 190.545 801.215 cv
194.013 798.686 195.061 788.311 195.061 788.311 cv
cp
.137255 0 .0117647 0 cmyk
f
192.965 788.644 mo
169.871 795.832 156.017 793.095 143.757 788.644 cv
143.757 788.644 144.729 797.415 147.918 800.536 cv
151.108 803.657 159.851 804.676 168.694 804.586 cv
177.452 804.497 185.608 802.867 188.804 800.536 cv
192 798.204 192.965 788.644 192.965 788.644 cv
cp
.4 .0666667 0 0 cmyk
f
141.693 788.396 mo
141.693 792.52 153.633 795.863 168.361 795.863 cv
183.089 795.863 195.029 792.52 195.029 788.396 cv
195.029 784.271 183.089 780.927 168.361 780.927 cv
153.633 780.927 141.693 784.271 141.693 788.396 cv
cp
.137255 0 .0117647 0 cmyk
f
145.971 787.906 mo
145.971 791.369 155.995 794.177 168.361 794.177 cv
180.728 794.177 190.752 791.369 190.752 787.906 cv
190.752 784.443 180.728 781.636 168.361 781.636 cv
155.995 781.636 145.971 784.443 145.971 787.906 cv
cp
.4 .0666667 0 0 cmyk
f
148.781 787.478 mo
148.781 790.583 157.547 793.1 168.361 793.1 cv
179.175 793.1 187.942 790.583 187.942 787.478 cv
187.942 784.372 179.175 781.855 168.361 781.855 cv
157.547 781.855 148.781 784.372 148.781 787.478 cv
cp
.572549 .172549 0 0 cmyk
f
168.358 781.859 mo
157.544 781.859 148.782 784.38 148.782 787.485 cv
148.782 788.167 149.242 788.804 150.017 789.408 cv
152.779 787.265 159.934 785.763 168.358 785.763 cv
176.784 785.763 183.967 787.265 186.729 789.408 cv
187.503 788.804 187.935 788.167 187.935 787.485 cv
187.935 784.38 179.172 781.859 168.358 781.859 cv
cp
.137255 0 .0117647 0 cmyk
f
183.016 769.771 mo
185.654 771.601 li
185.654 771.601 184.796 792.572 178.711 798.528 cv
172.627 804.484 165.416 804.876 158.855 799.705 cv
152.294 794.533 151.218 771.861 151.218 771.861 cv
155.8 770.031 li
183.016 769.771 li
cp
.415686 .737255 .964706 .54902 cmyk
f
150.888 770.927 mo
150.888 771.819 151.377 772.67 152.262 773.444 cv
153.146 774.218 154.425 774.915 156.006 775.501 cv
156.796 775.793 157.663 782.855 158.592 783.088 cv
159.521 783.32 160.515 776.724 161.56 776.887 cv
163.65 777.214 165.949 777.396 168.361 777.396 cv
170.774 777.396 173.072 777.214 175.163 776.887 cv
177.253 776.56 179.136 776.086 180.717 775.501 cv
181.507 775.208 182.222 779.985 182.85 779.642 cv
183.478 779.297 184.019 773.831 184.461 773.444 cv
185.345 772.67 185.834 771.819 185.834 770.927 cv
185.834 767.354 178.011 764.457 168.361 764.457 cv
158.711 764.457 150.888 767.354 150.888 770.927 cv
cp
.286275 .733333 1 .227451 cmyk
f
190.137 784.615 mo
193.206 785.831 195.026 787.306 195.026 788.908 cv
195.026 793.033 183.083 796.374 168.354 796.374 cv
153.626 796.374 141.7 793.033 141.7 788.908 cv
141.7 787.306 143.52 785.831 146.589 784.615 cv
146.189 785.226 145.976 785.869 145.976 786.525 cv
145.976 791.037 155.988 794.691 168.354 794.691 cv
180.72 794.691 190.75 791.037 190.75 786.525 cv
190.75 785.869 190.537 785.226 190.137 784.615 cv
cp
.137255 0 .0117647 0 cmyk
f
149.398 797.708 mo
149.398 799.189 150.518 800.788 151.9 801.28 cv
153.282 801.771 154.402 800.97 154.402 799.488 cv
154.402 798.008 153.282 796.408 151.9 795.917 cv
150.518 795.425 149.398 796.227 149.398 797.708 cv
cp
0 0 0 0 cmyk
f
291.789 791.19 mo
287.658 799.362 287.235 807.975 291.771 814.05 cv
296.298 820.134 299.277 822.168 301.869 825.984 cv
304.452 829.809 302.823 847.926 297.873 867.87 cv
291.528 893.493 274.401 906.795 268.524 906.327 cv
262.656 905.859 248.859 897.336 240.219 867.87 cv
233.874 846.234 231.048 832.293 235.188 825.984 cv
239.328 819.675 241.623 819.144 245.997 813.474 cv
250.38 807.795 250.011 799.911 245.934 791.19 cv
291.789 791.19 li
.137255 0 .0117647 0 cmyk
f
235.413 849.863 mo
257.432 854.896 279.462 855.794 301.48 850.284 cv
300.611 855.729 299.397 861.716 297.87 867.878 cv
291.521 893.498 276.117 906.55 268.534 906.327 cv
260.952 906.104 248.857 897.343 240.215 867.878 cv
238.234 861.124 236.603 855.119 235.414 849.863 cv
235.413 849.863 li
cp
.572549 .172549 0 0 cmyk
f
288.702 790.425 mo
285.12 797.517 284.751 810.702 288.684 815.976 cv
292.617 821.259 295.362 823.329 297.45 826.524 cv
299.538 829.71 295.326 862.056 290.322 873.963 cv
285.327 885.87 276.372 894.258 268.497 894.114 cv
260.631 893.961 254.016 886.914 248.256 873.963 cv
242.496 861.003 237.321 829.431 239.562 826.155 cv
241.812 822.87 245.151 820.395 248.949 815.472 cv
252.756 810.549 252.432 798.003 248.895 790.425 cv
288.702 790.425 li
f
238.293 827.847 mo
271.647 828.909 li
298.827 828.414 li
300.879 832.239 296.496 865.566 291.312 877.914 cv
286.083 890.361 276.732 899.145 268.497 898.992 cv
260.271 898.83 253.359 891.459 247.329 877.914 cv
241.308 864.36 235.89 831.348 238.239 827.919 cv
238.293 827.847 li
.564706 .792157 0 0 cmyk
f
238.293 827.847 mo
238.239 827.91 li
235.89 831.348 241.308 864.36 247.338 877.914 cv
253.359 891.459 260.271 898.839 268.506 898.992 cv
276.732 899.145 286.092 890.361 291.321 877.914 cv
296.505 865.566 300.888 832.248 298.836 828.423 cv
298.719 828.423 li
298.683 838.638 295.029 862.533 290.844 872.496 cv
285.723 884.691 275.598 887.895 268.506 887.76 cv
261.405 887.625 253.656 885.771 247.752 872.496 cv
242.91 861.597 238.464 837.855 238.311 827.847 cv
238.293 827.847 li
.803922 .992157 .0509804 .00784314 cmyk
f
268.128 821.286 mo
280.224 821.286 290.826 822.942 296.694 825.426 cv
297.522 826.362 298.269 827.28 298.944 828.306 cv
299.349 828.918 299.52 830.574 299.511 832.941 cv
294.813 836.244 282.537 838.584 268.128 838.584 cv
254.475 838.584 242.748 836.469 237.555 833.436 cv
237.438 830.628 237.582 828.63 238.068 827.919 cv
238.743 826.947 239.499 826.047 240.336 825.138 cv
246.339 822.816 256.536 821.286 268.128 821.286 cv
.141176 .317647 0 0 cmyk
f
247.201 839.449 mo
245.83 839.449 244.502 838.955 243.414 837.927 cv
242.64 837.195 242.068 836.268 241.7 835.231 cv
244.454 836.15 247.908 836.922 251.856 837.492 cv
250.457 838.775 248.801 839.45 247.201 839.449 cv
.0666667 .145098 0 0 cmyk
f
246.743 823.293 mo
247.51 822.983 248.299 822.824 249.075 822.824 cv
249.089 822.824 249.103 822.824 249.118 822.824 cv
248.299 822.972 247.507 823.128 246.743 823.293 cv
.121569 .00784314 0 0 cmyk
f
251.856 837.492 mo
247.908 836.922 244.454 836.15 241.7 835.231 cv
240.738 832.519 241.175 829.053 243.063 826.344 cv
244.085 824.875 245.378 823.845 246.743 823.293 cv
247.507 823.128 248.299 822.972 249.118 822.824 cv
250.472 822.835 251.785 823.329 252.864 824.346 cv
255.663 826.992 255.816 832.185 253.206 835.938 cv
252.796 836.528 252.341 837.047 251.856 837.492 cv
.0117647 .054902 0 0 cmyk
f
252.103 870.287 mo
252.098 873.393 254.611 875.914 257.717 875.92 cv
260.823 875.925 263.345 873.411 263.35 870.305 cv
263.35 870.287 li
263.354 867.182 260.841 864.659 257.735 864.654 cv
254.629 864.649 252.108 867.163 252.103 870.27 cv
252.103 870.287 li
cp
.141176 .317647 0 0 cmyk
f
278.3 861.781 mo
278.298 863.115 279.377 864.198 280.711 864.2 cv
282.046 864.202 283.129 863.123 283.131 861.789 cv
283.131 861.781 li
283.133 860.447 282.053 859.363 280.719 859.361 cv
279.385 859.359 278.302 860.439 278.3 861.773 cv
278.3 861.781 li
cp
f
286.852 841.552 mo
286.852 842.707 287.789 843.644 288.944 843.644 cv
290.1 843.644 291.037 842.707 291.037 841.552 cv
291.037 840.396 290.1 839.459 288.944 839.459 cv
287.789 839.459 286.852 840.396 286.852 841.552 cv
cp
f
266.776 851.097 mo
266.776 852.462 267.883 853.569 269.249 853.569 cv
270.614 853.569 271.722 852.462 271.722 851.097 cv
271.722 849.73 270.614 848.623 269.249 848.623 cv
267.883 848.623 266.776 849.73 266.776 851.097 cv
cp
f
256.728 845.094 mo
256.728 845.865 257.354 846.491 258.125 846.491 cv
258.897 846.491 259.523 845.865 259.523 845.094 cv
259.523 844.321 258.897 843.695 258.125 843.695 cv
257.354 843.695 256.728 844.321 256.728 845.094 cv
cp
f
295.083 788.311 mo
270.021 796.11 254.987 793.14 241.684 788.311 cv
241.684 788.311 242.738 797.828 246.2 801.215 cv
249.661 804.603 259.148 805.708 268.745 805.61 cv
278.249 805.513 287.1 803.745 290.567 801.215 cv
294.035 798.686 295.083 788.311 295.083 788.311 cv
cp
.137255 0 .0117647 0 cmyk
f
292.988 788.645 mo
269.893 795.832 256.039 793.095 243.779 788.645 cv
243.779 788.645 244.751 797.415 247.94 800.536 cv
251.13 803.657 259.873 804.676 268.716 804.586 cv
277.475 804.496 285.63 802.867 288.826 800.536 cv
292.021 798.204 292.987 788.645 292.987 788.645 cv
292.988 788.645 li
cp
.4 .0666667 0 0 cmyk
f
241.715 788.396 mo
241.715 792.52 253.655 795.863 268.383 795.863 cv
283.112 795.863 295.051 792.52 295.051 788.396 cv
295.051 784.271 283.112 780.927 268.383 780.927 cv
253.655 780.927 241.715 784.271 241.715 788.396 cv
cp
.137255 0 .0117647 0 cmyk
f
245.993 787.906 mo
245.993 791.369 256.018 794.177 268.383 794.177 cv
280.75 794.177 290.774 791.369 290.774 787.906 cv
290.774 784.443 280.75 781.637 268.383 781.637 cv
256.018 781.637 245.993 784.443 245.993 787.906 cv
cp
.4 .0666667 0 0 cmyk
f
248.803 787.478 mo
248.803 790.583 257.569 793.1 268.383 793.1 cv
279.197 793.1 287.964 790.583 287.964 787.478 cv
287.964 784.372 279.197 781.855 268.383 781.855 cv
257.569 781.855 248.803 784.372 248.803 787.478 cv
cp
.572549 .172549 0 0 cmyk
f
268.38 781.859 mo
257.566 781.859 248.805 784.38 248.805 787.485 cv
248.805 788.167 249.265 788.804 250.039 789.408 cv
252.801 787.265 259.956 785.763 268.38 785.763 cv
276.806 785.763 283.989 787.265 286.751 789.408 cv
287.525 788.804 287.957 788.167 287.957 787.485 cv
287.957 784.38 279.195 781.859 268.38 781.859 cv
cp
.137255 0 .0117647 0 cmyk
f
290.159 784.615 mo
293.229 785.831 295.049 787.306 295.049 788.908 cv
295.049 793.033 283.105 796.374 268.376 796.374 cv
253.648 796.374 241.722 793.033 241.722 788.908 cv
241.722 787.306 243.542 785.831 246.611 784.615 cv
246.211 785.226 245.998 785.869 245.998 786.525 cv
245.998 791.037 256.011 794.691 268.376 794.691 cv
280.743 794.691 290.772 791.038 290.772 786.525 cv
290.772 785.869 290.559 785.226 290.159 784.615 cv
cp
f
249.42 797.708 mo
249.417 799.188 250.535 800.789 251.917 801.284 cv
253.298 801.779 254.421 800.98 254.424 799.501 cv
254.424 799.488 li
254.427 798.009 253.31 796.408 251.928 795.913 cv
250.546 795.418 249.423 796.216 249.42 797.696 cv
249.42 797.708 li
cp
0 0 0 0 cmyk
f
259.487 762.151 mo
255.512 754.601 262.298 748.813 269.62 746.715 cv
279.443 743.899 283.647 739.506 279.997 733.872 cv
276.103 727.86 272.969 726.432 266.894 722.967 cv
274.659 723.914 282.937 728.602 285.795 732.552 cv
288.653 736.502 289.815 745.73 281.832 750.417 cv
275.862 753.922 267.195 757.933 272.638 765.848 cv
275.219 769.603 278.188 774.247 272.055 772.318 cv
265.922 770.391 261.903 766.738 259.487 762.151 cv
cp
.564706 .792157 0 0 cmyk
f
246.376 724.974 mo
237.898 737.109 264.569 735.611 256.021 750.004 cv
252.613 741.348 245.509 744.49 238.019 738.025 cv
233.136 733.812 237.836 727.847 246.376 724.974 cv
cp
f
257.651 728.14 mo
245.823 720.49 255.551 710.129 270.673 715.5 cv
265.465 715.179 254.984 719.265 257.651 728.14 cv
cp
f
1060.16 172.089 mo
1056.04 180.261 1055.61 188.874 1060.15 194.949 cv
1064.68 201.033 1067.65 203.067 1070.24 206.883 cv
1072.84 210.708 1071.2 228.825 1066.26 248.769 cv
1059.9 274.392 1042.78 287.694 1036.9 287.226 cv
1031.03 286.758 1017.23 278.235 1008.59 248.769 cv
1002.25 227.133 999.423 213.201 1003.56 206.883 cv
1007.7 200.574 1010 200.043 1014.38 194.373 cv
1018.75 188.694 1018.39 180.819 1014.32 172.089 cv
1060.16 172.089 li
.137255 0 .0117647 0 cmyk
f
1003.79 230.763 mo
1025.81 235.796 1047.84 236.694 1069.86 231.184 cv
1068.99 236.629 1067.77 242.616 1066.25 248.778 cv
1059.9 274.398 1044.49 287.45 1036.91 287.227 cv
1029.33 287.003 1017.23 278.243 1008.59 248.778 cv
1006.61 242.024 1004.98 236.02 1003.79 230.763 cv
cp
.572549 .172549 0 0 cmyk
f
1057.08 171.324 mo
1053.49 178.416 1053.13 191.601 1057.06 196.875 cv
1060.99 202.158 1063.74 204.237 1065.82 207.423 cv
1067.91 210.609 1063.7 242.955 1058.7 254.862 cv
1053.7 266.769 1044.75 275.157 1036.87 275.013 cv
1029.01 274.86 1022.4 267.813 1016.64 254.862 cv
1010.87 241.902 1005.7 210.33 1007.94 207.054 cv
1010.19 203.769 1013.53 201.294 1017.33 196.371 cv
1021.13 191.448 1020.81 178.902 1017.27 171.324 cv
1057.08 171.324 li
f
1006.68 208.746 mo
1040.03 209.808 li
1067.2 209.313 li
1069.26 213.138 1064.87 246.474 1059.69 258.813 cv
1054.46 271.269 1045.11 280.044 1036.87 279.891 cv
1028.65 279.729 1021.73 272.358 1015.7 258.813 cv
1009.68 245.268 1004.27 212.247 1006.61 208.818 cv
1006.68 208.746 li
.0784314 .968627 1 .00784314 cmyk
f
1006.67 208.746 mo
1006.61 208.809 li
1004.26 212.247 1009.68 245.259 1015.71 258.813 cv
1021.73 272.358 1028.65 279.738 1036.88 279.891 cv
1045.11 280.053 1054.47 271.26 1059.7 258.813 cv
1064.88 246.465 1069.27 213.147 1067.21 209.322 cv
1067.09 209.322 li
1067.06 219.537 1063.4 243.432 1059.22 253.395 cv
1054.1 265.599 1043.98 268.794 1036.88 268.659 cv
1029.78 268.524 1022.03 266.67 1016.13 253.395 cv
1011.28 242.496 1006.85 218.754 1006.69 208.746 cv
1006.67 208.746 li
.286275 1 1 .376471 cmyk
f
1036.5 202.185 mo
1048.6 202.185 1059.2 203.841 1065.07 206.325 cv
1065.9 207.261 1066.64 208.179 1067.32 209.205 cv
1067.72 209.817 1067.9 211.473 1067.89 213.84 cv
1063.19 217.143 1050.91 219.483 1036.5 219.483 cv
1022.85 219.483 1011.12 217.368 1005.93 214.335 cv
1005.81 211.527 1005.96 209.529 1006.45 208.818 cv
1007.12 207.846 1007.88 206.946 1008.71 206.037 cv
1014.71 203.715 1024.91 202.185 1036.5 202.185 cv
0 .666667 .807843 0 cmyk
f
1015.58 220.348 mo
1014.21 220.348 1012.88 219.854 1011.79 218.826 cv
1011.02 218.094 1010.44 217.168 1010.08 216.131 cv
1012.83 217.05 1016.29 217.822 1020.24 218.392 cv
1018.83 219.675 1017.18 220.349 1015.58 220.348 cv
.0117647 .192157 .0901961 0 cmyk
f
1015.12 204.191 mo
1015.89 203.882 1016.68 203.723 1017.45 203.723 cv
1017.47 203.723 1017.48 203.723 1017.49 203.723 cv
1016.68 203.87 1015.89 204.027 1015.12 204.191 cv
.121569 .00784314 0 0 cmyk
f
1020.24 218.392 mo
1016.29 217.822 1012.83 217.05 1010.08 216.131 cv
1009.12 213.419 1009.56 209.952 1011.44 207.243 cv
1012.46 205.773 1013.76 204.742 1015.12 204.191 cv
1015.89 204.027 1016.68 203.87 1017.49 203.723 cv
1018.85 203.733 1020.16 204.227 1021.24 205.245 cv
1024.04 207.9 1024.19 213.084 1021.59 216.837 cv
1021.18 217.427 1020.72 217.946 1020.24 218.392 cv
0 .117647 .113725 0 cmyk
f
1020.48 251.187 mo
1020.48 254.293 1023 256.811 1026.1 256.811 cv
1029.21 256.811 1031.73 254.293 1031.73 251.187 cv
1031.73 248.082 1029.21 245.563 1026.1 245.563 cv
1023 245.563 1020.48 248.082 1020.48 251.187 cv
cp
0 .666667 .807843 0 cmyk
f
1046.68 242.681 mo
1046.68 244.015 1047.76 245.097 1049.09 245.097 cv
1050.43 245.097 1051.51 244.015 1051.51 242.681 cv
1051.51 241.347 1050.43 240.265 1049.09 240.265 cv
1047.76 240.265 1046.68 241.347 1046.68 242.681 cv
cp
f
1055.23 222.452 mo
1055.23 223.607 1056.17 224.544 1057.32 224.544 cv
1058.48 224.544 1059.41 223.607 1059.41 222.452 cv
1059.41 221.296 1058.48 220.359 1057.32 220.359 cv
1056.17 220.359 1055.23 221.296 1055.23 222.452 cv
cp
f
1035.15 231.997 mo
1035.15 233.362 1036.26 234.469 1037.63 234.469 cv
1038.99 234.469 1040.1 233.362 1040.1 231.997 cv
1040.1 230.631 1038.99 229.523 1037.63 229.523 cv
1036.26 229.523 1035.15 230.631 1035.15 231.997 cv
cp
f
1025.1 225.993 mo
1025.1 226.766 1025.73 227.391 1026.5 227.391 cv
1027.27 227.391 1027.9 226.766 1027.9 225.993 cv
1027.9 225.222 1027.27 224.596 1026.5 224.596 cv
1025.73 224.596 1025.1 225.222 1025.1 225.993 cv
cp
f
1063.46 169.21 mo
1038.4 177.011 1023.36 174.04 1010.06 169.21 cv
1010.06 169.21 1011.12 178.729 1014.58 182.115 cv
1018.04 185.502 1027.53 186.608 1037.12 186.51 cv
1046.63 186.413 1055.48 184.646 1058.94 182.115 cv
1062.41 179.585 1063.46 169.21 1063.46 169.21 cv
cp
.137255 0 .0117647 0 cmyk
f
1061.36 169.544 mo
1038.27 176.732 1024.42 173.995 1012.16 169.544 cv
1012.16 169.544 1013.13 178.315 1016.32 181.436 cv
1019.51 184.557 1028.25 185.576 1037.09 185.486 cv
1045.85 185.396 1054.01 183.768 1057.2 181.436 cv
1060.4 179.104 1061.36 169.544 1061.36 169.544 cv
cp
.4 .0666667 0 0 cmyk
f
1010.09 169.295 mo
1010.09 173.42 1022.03 176.764 1036.76 176.764 cv
1051.49 176.764 1063.43 173.42 1063.43 169.295 cv
1063.43 165.171 1051.49 161.827 1036.76 161.827 cv
1022.03 161.827 1010.09 165.171 1010.09 169.295 cv
cp
.137255 0 .0117647 0 cmyk
f
1014.37 168.807 mo
1014.37 172.27 1024.39 175.077 1036.76 175.077 cv
1049.13 175.077 1059.15 172.27 1059.15 168.807 cv
1059.15 165.344 1049.13 162.536 1036.76 162.536 cv
1024.39 162.536 1014.37 165.344 1014.37 168.807 cv
cp
.4 .0666667 0 0 cmyk
f
1017.18 168.378 mo
1017.18 171.483 1025.95 174 1036.76 174 cv
1047.57 174 1056.34 171.483 1056.34 168.378 cv
1056.34 165.272 1047.57 162.755 1036.76 162.755 cv
1025.95 162.755 1017.18 165.272 1017.18 168.378 cv
cp
.572549 .172549 0 0 cmyk
f
1036.76 162.759 mo
1025.94 162.759 1017.18 165.28 1017.18 168.385 cv
1017.18 169.067 1017.64 169.704 1018.42 170.309 cv
1021.18 168.165 1028.33 166.663 1036.76 166.663 cv
1045.18 166.663 1052.37 168.165 1055.13 170.309 cv
1055.9 169.704 1056.33 169.067 1056.33 168.385 cv
1056.33 165.28 1047.57 162.759 1036.76 162.759 cv
cp
.137255 0 .0117647 0 cmyk
f
1051.41 150.67 mo
1054.05 152.5 li
1054.05 152.5 1053.19 173.472 1047.11 179.429 cv
1041.03 185.385 1033.81 185.776 1027.25 180.605 cv
1020.69 175.434 1019.62 152.762 1019.62 152.762 cv
1024.2 150.932 li
1051.41 150.67 li
cp
.415686 .737255 .964706 .54902 cmyk
f
1019.29 151.826 mo
1019.29 152.72 1019.78 153.57 1020.66 154.344 cv
1021.54 155.118 1022.82 155.815 1024.4 156.401 cv
1025.2 156.693 1026.06 163.755 1026.99 163.988 cv
1027.92 164.221 1028.91 157.624 1029.96 157.787 cv
1032.05 158.114 1034.35 158.295 1036.76 158.295 cv
1039.17 158.295 1041.47 158.114 1043.56 157.787 cv
1045.65 157.46 1047.53 156.986 1049.12 156.401 cv
1049.91 156.108 1050.62 160.886 1051.25 160.542 cv
1051.88 160.197 1052.42 154.731 1052.86 154.344 cv
1053.74 153.57 1054.23 152.72 1054.23 151.826 cv
1054.23 148.254 1046.41 145.357 1036.76 145.357 cv
1027.11 145.357 1019.29 148.254 1019.29 151.826 cv
cp
.286275 .733333 1 .227451 cmyk
f
1058.54 165.515 mo
1061.6 166.731 1063.42 168.206 1063.42 169.809 cv
1063.42 173.933 1051.48 177.274 1036.75 177.274 cv
1022.02 177.274 1010.1 173.933 1010.1 169.809 cv
1010.1 168.206 1011.92 166.731 1014.99 165.515 cv
1014.59 166.126 1014.37 166.77 1014.37 167.425 cv
1014.37 171.938 1024.39 175.591 1036.75 175.591 cv
1049.12 175.591 1059.15 171.938 1059.15 167.425 cv
1059.15 166.77 1058.94 166.126 1058.54 165.515 cv
cp
.137255 0 .0117647 0 cmyk
f
1017.8 178.608 mo
1017.8 180.089 1018.92 181.688 1020.3 182.18 cv
1021.68 182.672 1022.8 181.87 1022.8 180.389 cv
1022.8 178.908 1021.68 177.309 1020.3 176.817 cv
1018.92 176.325 1017.8 177.127 1017.8 178.608 cv
cp
0 0 0 0 cmyk
f
1160.18 172.089 mo
1156.06 180.261 1155.64 188.874 1160.16 194.949 cv
1164.7 201.033 1167.68 203.067 1170.26 206.883 cv
1172.85 210.708 1171.22 228.825 1166.27 248.769 cv
1159.93 274.392 1142.79 287.694 1136.92 287.226 cv
1131.06 286.758 1117.26 278.235 1108.61 248.769 cv
1102.27 227.133 1099.45 213.201 1103.59 206.883 cv
1107.73 200.574 1110.01 200.043 1114.4 194.373 cv
1118.78 188.694 1118.41 180.819 1114.33 172.089 cv
1160.18 172.089 li
.137255 0 .0117647 0 cmyk
f
1103.81 230.763 mo
1125.83 235.795 1147.86 236.694 1169.88 231.184 cv
1169.01 236.629 1167.8 242.616 1166.27 248.778 cv
1159.92 274.398 1144.52 287.45 1136.93 287.227 cv
1129.35 287.004 1117.26 278.243 1108.61 248.778 cv
1106.63 242.024 1105 236.02 1103.81 230.763 cv
cp
.572549 .172549 0 0 cmyk
f
1157.09 171.324 mo
1153.52 178.416 1153.14 191.601 1157.08 196.875 cv
1161.02 202.158 1163.76 204.237 1165.85 207.423 cv
1167.94 210.609 1163.73 242.955 1158.72 254.862 cv
1153.73 266.769 1144.76 275.157 1136.9 275.013 cv
1129.03 274.86 1122.42 267.813 1116.66 254.862 cv
1110.9 241.902 1105.72 210.33 1107.96 207.054 cv
1110.21 203.769 1113.55 201.294 1117.35 196.371 cv
1121.16 191.448 1120.83 178.902 1117.3 171.324 cv
1157.09 171.324 li
f
1106.69 208.746 mo
1140.05 209.808 li
1167.23 209.313 li
1169.28 213.138 1164.9 246.474 1159.71 258.813 cv
1154.48 271.269 1145.12 280.044 1136.9 279.891 cv
1128.67 279.729 1121.75 272.358 1115.73 258.813 cv
1109.71 245.268 1104.29 212.247 1106.64 208.818 cv
1106.69 208.746 li
.0784314 .968627 1 .00784314 cmyk
f
1106.68 208.746 mo
1106.64 208.809 li
1104.29 212.247 1109.71 245.259 1115.73 258.813 cv
1121.76 272.358 1128.67 279.738 1136.9 279.891 cv
1145.13 280.053 1154.48 271.26 1159.72 258.813 cv
1164.91 246.465 1169.29 213.147 1167.24 209.322 cv
1167.11 209.322 li
1167.08 219.537 1163.43 243.432 1159.24 253.395 cv
1154.12 265.599 1144 268.794 1136.9 268.659 cv
1129.81 268.524 1122.06 266.67 1116.15 253.395 cv
1111.3 242.496 1106.86 218.754 1106.7 208.746 cv
1106.68 208.746 li
.286275 1 1 .376471 cmyk
f
1136.53 202.185 mo
1148.62 202.185 1159.23 203.841 1165.09 206.325 cv
1165.91 207.261 1166.67 208.179 1167.34 209.205 cv
1167.75 209.817 1167.92 211.473 1167.91 213.84 cv
1163.21 217.143 1150.93 219.483 1136.53 219.483 cv
1122.88 219.483 1111.15 217.368 1105.96 214.335 cv
1105.84 211.527 1105.98 209.529 1106.47 208.818 cv
1107.13 207.846 1107.9 206.946 1108.74 206.037 cv
1114.73 203.715 1124.94 202.185 1136.53 202.185 cv
0 .666667 .807843 0 cmyk
f
1115.6 220.348 mo
1114.23 220.348 1112.9 219.854 1111.81 218.826 cv
1111.04 218.094 1110.46 217.166 1110.1 216.129 cv
1112.85 217.048 1116.31 217.82 1120.25 218.391 cv
1118.85 219.674 1117.2 220.349 1115.6 220.348 cv
.0117647 .192157 .0901961 0 cmyk
f
1115.15 204.191 mo
1115.91 203.882 1116.7 203.723 1117.47 203.723 cv
1117.49 203.723 1117.5 203.723 1117.51 203.723 cv
1116.7 203.87 1115.91 204.026 1115.15 204.191 cv
.121569 .00784314 0 0 cmyk
f
1120.25 218.391 mo
1116.31 217.82 1112.85 217.048 1110.1 216.129 cv
1109.13 213.417 1109.58 209.951 1111.46 207.243 cv
1112.49 205.772 1113.78 204.742 1115.15 204.191 cv
1115.91 204.026 1116.7 203.87 1117.51 203.723 cv
1118.87 203.733 1120.18 204.227 1121.26 205.245 cv
1124.06 207.9 1124.22 213.084 1121.61 216.837 cv
1121.2 217.427 1120.74 217.945 1120.25 218.391 cv
0 .117647 .113725 0 cmyk
f
1120.5 251.187 mo
1120.5 254.293 1123.01 256.814 1126.12 256.819 cv
1129.22 256.824 1131.74 254.311 1131.75 251.205 cv
1131.75 251.187 li
1131.75 248.082 1129.24 245.56 1126.13 245.555 cv
1123.03 245.55 1120.51 248.063 1120.5 251.169 cv
1120.5 251.187 li
cp
0 .666667 .807843 0 cmyk
f
1146.7 242.681 mo
1146.7 244.015 1147.78 245.099 1149.11 245.101 cv
1150.44 245.103 1151.53 244.023 1151.53 242.688 cv
1151.53 242.681 li
1151.53 241.347 1150.45 240.264 1149.12 240.262 cv
1147.78 240.259 1146.7 241.339 1146.7 242.673 cv
1146.7 242.681 li
cp
f
1155.25 222.451 mo
1155.25 223.607 1156.19 224.544 1157.34 224.544 cv
1158.5 224.544 1159.44 223.607 1159.44 222.451 cv
1159.44 221.296 1158.5 220.359 1157.34 220.359 cv
1156.19 220.359 1155.25 221.296 1155.25 222.451 cv
cp
f
1135.17 231.997 mo
1135.17 233.362 1136.28 234.469 1137.65 234.469 cv
1139.01 234.469 1140.12 233.362 1140.12 231.997 cv
1140.12 230.631 1139.01 229.523 1137.65 229.523 cv
1136.28 229.523 1135.17 230.631 1135.17 231.997 cv
cp
f
1125.13 225.994 mo
1125.13 226.766 1125.75 227.392 1126.52 227.392 cv
1127.3 227.392 1127.92 226.766 1127.92 225.994 cv
1127.92 225.222 1127.3 224.596 1126.52 224.596 cv
1125.75 224.596 1125.13 225.222 1125.13 225.994 cv
cp
f
1163.48 169.21 mo
1138.42 177.011 1123.39 174.04 1110.08 169.21 cv
1110.08 169.21 1111.14 178.729 1114.6 182.115 cv
1118.06 185.502 1127.55 186.608 1137.14 186.51 cv
1146.65 186.413 1155.5 184.646 1158.97 182.115 cv
1162.43 179.585 1163.48 169.21 1163.48 169.21 cv
cp
.137255 0 .0117647 0 cmyk
f
1161.39 169.544 mo
1138.29 176.732 1124.44 173.995 1112.18 169.544 cv
1112.18 169.544 1113.15 178.315 1116.34 181.436 cv
1119.53 184.557 1128.27 185.576 1137.12 185.486 cv
1145.87 185.396 1154.03 183.768 1157.22 181.436 cv
1160.42 179.104 1161.39 169.544 1161.39 169.544 cv
cp
.4 .0666667 0 0 cmyk
f
1110.11 169.295 mo
1110.11 173.42 1122.05 176.763 1136.78 176.763 cv
1151.51 176.763 1163.45 173.42 1163.45 169.295 cv
1163.45 165.171 1151.51 161.827 1136.78 161.827 cv
1122.05 161.827 1110.11 165.171 1110.11 169.295 cv
cp
.137255 0 .0117647 0 cmyk
f
1114.39 168.807 mo
1114.39 172.27 1124.42 175.077 1136.78 175.077 cv
1149.15 175.077 1159.17 172.27 1159.17 168.807 cv
1159.17 165.344 1149.15 162.536 1136.78 162.536 cv
1124.42 162.536 1114.39 165.344 1114.39 168.807 cv
cp
.4 .0666667 0 0 cmyk
f
1117.2 168.378 mo
1117.2 171.483 1125.97 174 1136.78 174 cv
1147.6 174 1156.36 171.483 1156.36 168.378 cv
1156.36 165.272 1147.6 162.755 1136.78 162.755 cv
1125.97 162.755 1117.2 165.272 1117.2 168.378 cv
cp
.572549 .172549 0 0 cmyk
f
1136.78 162.759 mo
1125.96 162.759 1117.2 165.28 1117.2 168.385 cv
1117.2 169.067 1117.66 169.704 1118.44 170.309 cv
1121.2 168.165 1128.35 166.663 1136.78 166.663 cv
1145.2 166.663 1152.39 168.165 1155.15 170.309 cv
1155.92 169.704 1156.36 169.067 1156.36 168.385 cv
1156.36 165.28 1147.59 162.759 1136.78 162.759 cv
cp
.137255 0 .0117647 0 cmyk
f
1158.56 165.515 mo
1161.63 166.731 1163.45 168.206 1163.45 169.809 cv
1163.45 173.933 1151.5 177.274 1136.78 177.274 cv
1122.05 177.274 1110.12 173.933 1110.12 169.809 cv
1110.12 168.206 1111.94 166.731 1115.01 165.515 cv
1114.61 166.126 1114.4 166.77 1114.4 167.425 cv
1114.4 171.938 1124.41 175.591 1136.78 175.591 cv
1149.14 175.591 1159.17 171.938 1159.17 167.425 cv
1159.17 166.77 1158.96 166.126 1158.56 165.515 cv
cp
f
1117.82 178.608 mo
1117.82 180.088 1118.93 181.689 1120.31 182.184 cv
1121.7 182.679 1122.82 181.881 1122.82 180.401 cv
1122.82 180.389 li
1122.83 178.909 1121.71 177.308 1120.33 176.813 cv
1118.94 176.318 1117.82 177.116 1117.82 178.596 cv
1117.82 178.608 li
cp
0 0 0 0 cmyk
f
1127.89 143.051 mo
1123.91 135.5 1130.7 129.713 1138.02 127.615 cv
1147.84 124.8 1152.04 120.406 1148.4 114.771 cv
1144.5 108.76 1141.37 107.332 1135.29 103.866 cv
1143.06 104.814 1151.33 109.501 1154.19 113.452 cv
1157.05 117.402 1158.21 126.63 1150.23 131.317 cv
1144.26 134.822 1135.59 138.833 1141.04 146.748 cv
1143.62 150.502 1146.59 155.147 1140.45 153.219 cv
1134.32 151.29 1130.3 147.639 1127.89 143.051 cv
cp
.0784314 .968627 1 .00784314 cmyk
f
1114.78 105.874 mo
1106.3 118.009 1132.97 116.512 1124.42 130.903 cv
1121.01 122.248 1113.91 125.39 1106.42 118.926 cv
1101.53 114.712 1106.23 108.747 1114.78 105.874 cv
cp
f
1126.05 109.039 mo
1114.22 101.39 1123.95 91.0288 1139.07 96.3999 cv
1133.86 96.0791 1123.38 100.165 1126.05 109.039 cv
cp
f
840.308 426.151 mo
828.479 418.502 838.207 408.141 853.329 413.512 cv
848.121 413.191 837.64 417.277 840.308 426.151 cv
cp
.262745 1 .533333 .117647 cmyk
f
27 827.75 mo
0 827.75 li
0 828.25 li
27 828.25 li
/0 
<<
/Name (Black)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
35.75 837 mo
35.75 864 li
36.25 864 li
36.25 837 li
f
27 35.75 mo
0 35.75 li
0 36.25 li
27 36.25 li
f
36.25 27 mo
36.25 0 li
35.75 0 li
35.75 27 li
f
657 36.25 mo
684 36.25 li
684 35.75 li
657 35.75 li
f
648.25 27 mo
648.25 0 li
647.75 0 li
647.75 27 li
f
657 828.25 mo
684 828.25 li
684 827.75 li
657 827.75 li
f
647.75 837 mo
647.75 864 li
648.25 864 li
648.25 837 li
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 12.0.0
%%For: (ahninniah@gmail.com) ()
%%Title: (potion_type_8.eps)
%%CreationDate: 12/3/2014 2:59 PM
%AI9_DataStream
%Gb"-6CNC^ZOu@VM:W3/97Vqif:E6E?\-(S`'%NGAp[)*FCsVHAX>`2i'Q%Wf>=`MdIf7A9'0m9]8gItj&(M-B/Wj0a+Fu$'P6iKi
%5PaBuo'OE<l,EB%QbRo3fe\)_Qf:C^P9s/I5Q9W*:]BDHX81"<.G$R0(HU`37H)m5V/Za&E6mM)m-XWHiqCR]bLugUApS`GH%#;[
%AGYW^`T45Chp[kNaZns$B9thY%aL)I5LM^lIrVZQ:=&&mQe1E@[hIZl9JisKk.fa!>uUhgBDPsfAnQ$Xk$QR8o96qZe+FZo&mk0r
%YNNC(`%\U!^sVeXs89X\[l:d_k?Q'jPJ.D_opYmV&?Sh-Tm&6>LX`Bce`=]!Il79*o]GlDq"F@Nid^r\HM7BuKqkj7=3#?4>,"LM
%^DD!3E]F*eq!Hb:YW<XodDt!+9i/h/2u2G?PT.?[:O9aC(s)a!2\dj:r3rTns%r(M-[aJY1U5BRQX:f.%4qa25I$5$l[4>rdf:dL
%Qq8@olcZ@#j6Ie*0Ndt[n]NFW^I(osS5JR@q>&Rona2k(%+BR7C_GTcdH=Dl*\S=.)ZT]KT7g;foC0oHIla/#r;#D<k/Sk@lhkA]
%?f-<\qA[*K_uMZu1\n)\BCkH(?(BaaO$ZM1FT-T31-^smT5QqT43#Gt*\mYb971f.rVcY[hXo!t[s0m):L[\6rTDr,=3&)$YA[$e
%l1Gioo8@N>s3?Skq;+oAO8R@@5JaCq]sM1GVgTIHel!kF_!RuXJ1(%:]sh?RT7299nTj(E]`.Nql,iEM#<dq7Mn/<9k[,h>16^5L
%gY;NmiEGKte%ZAMomQSdYB(Z?r:'FXc,K3%L.kOr]q+ZJ5G7cNipca:R-;5]0)iohQc[(I[li2eqCr2h]uTT+n9[2J<+GFL(gJp&
%=,i?C7n7s=gu^bWH&ln#UR:d(k5E\)WAGoc8I8r@rUB2'Tiao8L/7T(@acc`9rGLD3lRBK'P3;bE:rG9HbTIB#R-6Kj<e;==;Hpm
%9t?-cbB7=YG5OW\oF&E2%/hZhQ##RtI\R<4L#:\[1)t<jqM!i%L/-\dWfk2]WmN9nk.]jXaQOFDPqa!`:^gXIDj37C!j+R2AmRr1
%`_qNu^ZAM\]lZNl([e)IB"gC-;FGt1%"6'4<$`&QH7mh?K>Rp.6QaL8QD'G1d7=,S2fqmQ"8pHgK7r,1L-FV+4A:$+A8m5)Zru5h
%B"koLjj=Bm1A3+CK3-&^H7p:Hk(P[,=m@W#9o>/WPX,Pt4,OO=mF$'dN'?5[MTNJj50CCVc1m8RkTJ\fhXWFcAGDr0H.0t&>[Eli
%hD+Wmb/d4Q-:rKk1A\k[N4lSLK?)3&#?1IHm%[Zs?`KG"jLY8"k%1:0Rk;rm#"YaRiZEH2LY4?Td-YE<%eHb1eh@Wq9eUQqGSBoH
%iGC&#IsB[YXG<\ST#u$CmDG#"FplKiAZ8dL<N>4(r6:s6jWCVdddU=eXHi7l?hpDMSJ0H@=+3Jtn&&N.M,D"-=Bgj^B7F8@%=dL&
%i'>!eJ)uH'5<KY.n5k'F^6J*(?hrsP:R:TsLA3@H=2(#>neZ`(G&#j\i=SQPhVXcNm74W-?61,e_kSINd_4FcM$Lt+Vg=g&-^48g
%dn:C9esZ#J5LT9.HmbKGAMj=5T1\[tRHR[-h3T>7rFDd;?fa3>W@7^A'r[XoE&?u/./P[24Z]Cn\K42K+#+9r;@M)Hs6/pFR\C-`
%mI)E8V!\,I"tqA#^i]uOl/5rA2cE0BV4rSkWnLNrJU*t^Nc]<PodO"#8bokLmEj*mWletcbtZT[iGSbIp=(C$2#>K"Thm*hb,,''
%Wb6d&VFR<nDu7`nkYr.K0%ZC_b&-M>rag'JAZ76AMEo(odR5q_i2H#sQ&B'Sg6#V#L>Xgeg,<3m>-r2A_]`<]agZa6>s*p<.^]*P
%-!bTR)Qr'A?1$#c]>&`?Os9g_HSC@%(7bh'W7p3F*[rQb[ia6)e4kXuOJDCs;t,AYKgY7p5r]jLad$;qLP!VhB^ZYF=>#t6]p.gK
%^@nLcLTYiZ"`s.2\o8JrUIB[C9Ig"%#L]9P*k@Xg`MA=fb:P'Jae]Keh;m>6Ln[(\k(57sR.-@JB/4<$q&oE;7boTE=XqP4%kr[5
%'"M>gafBeN$:tt1j3Y.2EM_H7\Ls/I553k9YOKjYPeP=br$u&&hb-sUiB*88qSV^j&.LQ.6W>H\Pfh-m0OMkIg]G65/7WuB6uF^M
%9X-m<qN/NAVO5"R8+^/oIEYU/&KR'3kkg`[OG&Ifc/CMMIn<,do'AL`!ajUS;KQ9N*7Q6`<(\A-Gh/^j+e!"&Qtcmrl$4D+je&k)
%-BCPgU(\\^\rj#/O+X)0CZ\05P;7G285U+hSm5lR^RlS7HXStcYn03l^bB-D4>`d$R&NQq%M!0to8b9@?>'Z,Gfh#j8?<FHOS%>[
%[:[\3Pl;QuQW`/MQfT;F?N>QuPKZa!*,$cg2cU(f1<@D#P4)>ol<bEA4Jr9/s3c?#$%`Oo<Tj[]08$@r+%)h-S!@^Q8mrZg1XhB@
%d2m\oD]T8N$=KS5OY6<SJHp(b=X9E<koZLB*fm[XYb,(=Qi,PkJpG">R[DUHfW5-7;eQCg:.'Kn0q:A%XM`E*b'4fkIDITk*Y4Y*
%*]9?"D0_u*'tcF[g-*cd6OX`")WOG+n!DGAeB-TFV3>?-aO>qX@kS2p51\+?d0dLGeH?pe#TTu[r!amC>csKdPfZ91R&=1@Z%"#D
%Dp3ZZ,'8/kUlgTQ97!aIC(?"UnrZF*Q3h-mWe."Fa)!E/&P8?7ks."Sp``S&,<YoM,(aN+`a$P6kD_'GBD+d^d$ri!c.IV!V"#k)
%pL^@_kIZ]E!@'+PL-lh@i["usd*"EGLsA<7@gKKD+6k&lUC_c@JtgJA(`hI&$l;,3aB89i["<;!_pNF;]OON4&[^j!]AWe0GZ[`D
%kbG8CT-^V$Lp`QQqIR*N^f-P<7"^Y9n_A,t4ug:7PTk1D?S$*aaqN7Jc!dT'\2;"WrB+X`nO1Tu&@dU$gl^7^OSEKDcT<s2eD,B7
%5E3HOZljjP'Ded"S^<A\\SA!]hb3LV1bN5/nTS>Q$'5oQR3%U%DRb8t1+rl"7CYec*bDkmH?Aq?g\$#E"joQK.H^V6l"QjJ/N&&X
%]koSAMmp:0V-nBFp^WU-?;X\YM#*0T4].&s#.6Et9#KfqH2pa/DAI-Q9DS1sFq'r%XPH3>+(?.5Q?B:F+,'g\dY_TS'Gdrh#bMao
%j'%D-BLt0K=NO2bjosF!1bG`l6Y]1n`um_95+=*&7EfoaDPqY&Mo]3SEFJld+533=7Y,$I7V!RI)fV/Sr'&=-aLY^3!g)Dq2(nJe
%MYoZ+"R`M$-AiHo^oEof)2CLCYG>L'5KY[tq"E,V\iL>b9!rAB*]c2ITU_'[RL"NS=8G;E#MZ*-1f54[)Ff2?OpTo2X:jl4Rmpt)
%k?uu?afUa:CKK7IdH"NufVZb+LFb36.BF<EhCS!dfr@'J<B$ksBk0rZgJ#JEm?U2Q->S_P;Kj[]K49e8C-RgYFN:gM>./:XWIlL,
%AAMm:@SX`N'>8Rs?,Ne.Bla9_8+o;NpT)tiO&a*'DJ1\-2>.'Ok%JS]%+;!]f"j7FNC[520VU'u9ef7tFZ23EU`(]BH"fI%N>iG8
%AV2HCEj\EtS*C:/edhuVL8Llp`eH,KL!SF?8MUK,JNUCO,.CY_*%mT`lYshfK72dd.5Wf"b0<r<b;PA&Cn,T$[0Q\=b)4lg1`bYO
%=F`+oVFqIpdQ3H2JI`f,L8#AJ2F])BHi`ri6!!g0raCb]B#LWWd:3U4PYd9dJP(4OUgC3SJ,&7M#`[T^R"OKCY^?GQ_e+^8:&\N-
%jbGMbUS<E?'g5P_s30!eA#AKPkZF0-/i,lSLDa&g(X%lrZbuaW2#?BG<_OYfj^Cg>q/Ks\hoc-+gZHjoA!fZ`NJE/foX?771dB>J
%8GG[n9:s89LSC"49hc[E'',Y`F.aJu)R-<`d`a%(7Nr`M!X(;pbZ"@-s,dLXG=]]sNAnZo<1VS\ODI(5I)THqQ!_\\qrA%an@(0C
%/CVFRkj;=r/B4(pV+/7hA(dGDU7Ve)r?6V+98>J77QUljq@iL00m:X0U[RE"dA487OX;CRV=;NTCZRZiL.c*Rm5,?O*KB\g@@LC1
%eUHB\'MWj@M,h#lhEA;2H1_!OR,8AZ":R'!"Z4;#=AbCqR;%Vf.8pu5l7,9c_=Zkdk[i]Vg)=\$#CaUYPqJ/!c_KrdMN6ja"[=i^
%;\mlZhL:?kO%8%AS_5;*^aKDOD%"ND%ub)^kojR<A9tIoJeB=^bURZ^o_rF0FK>lq^U0[fO9@p7^Cj[7k1>hXb*EOo"Y[7!Rc%7u
%7Q"S-[8b.a!PPr<YfqE>8,N4=p4Da@P=H6%7%-g\m*p>4.G2P4A(mn_TXk"eC!@0kT=Sil7GH:ekbnBD`+:e6aFs8UN*9:_<b(Zj
%LX+O-+K"TPrHlYq<\&gZ8uAp!P&24dL_46`=Yt=hYg[E9jHg+k#N!7->=X@3LE]4!e3UJ]?o-3kE<uiqoO-Up=;Qr;XIX0%n=6DS
%^23:H0UXu-G0#%r[;9PfNOiflCj<m7_&Sd#@_].tE?n<dr1TpnT$891$AuAm=+G=2q($V`To!q)LVdL/M4q7`^Pjb&3Yo\ti_.aQ
%;%H_B?8.RLK%l"6/,V"94^:;52_dO@+es1*/MINA'4lJD;O@t!\d5?`09;'bU[i]Lm11.$qhNjJK)FLbqpjujc%X%a>r!6P*V^e`
%+`O6/GH=SM\)qB#EZ4-`lmQ27+s&S%I&Mc2e][WdO>g>%PW)Y<n"HFi64EFJ);4-ak35@Q'mNeu%,cKT<X!BZ@OL#mO:<oGo6lC<
%?=>9<D^Z3]IN!6.9]21/Z"]0dA-OOt:%2%.'o,(AooT1.o6*aI,E\T'fb$,\F0LAWNiH""].e>H^R'l6\e,lk]K7pOQ4,5UZQOm"
%2@5W;^fnB##-V86J%R.[\RLK*R<Jmnm[hZ'NFHF'V6O31bN-nPm<N21pLD[IC`>VnRpHGbF`dt"@D"*fc%2Td"';!&A/?obn&*ES
%aVclm(G`u>(5%aO$O\sR.,JNJU)HDP!a&R](K+<2O0V7$s+XB!1he@Re=oBi)6g=QEAZNE.%MQa17'Gl+-k*.6+;XB0Pk]9(eKDB
%IkG[-aQA'n/ei8tT$odg*WC+MYp_1#TF9$A]Ud*[.'Ug1Vhb/`+T(fmro'+Ag\5se+ADkTqhCsuru5"_o^i.`$$j:!OYg2p%q@qa
%-M)c&_?9X0QWV5!8rLoIRiW?AAY;lso#BpBSYe6;fKB<YOpGQZ6Bk-%m*I\rOr?#_+Vd[WUGc.%=^WnLnre0Z[_fDT@mHZa;]Zg*
%Gi4,QRMs(J7q*W0C+DXrOYnc5hl<D$'ihJ?G`J$koY%Q<YLKeh5E2(dr64kk/,C%F3RI5ZH/L.3/@D7`:$lb*RG#c2P]=L%.((.]
%o$hka&+U*Z[F0J.`,FNdN^G9pPr-ND"s346heitRiI5[b(!Y.s;rCLZ=\)As%UDNhU,HUl"_N!]kX)[_CJUe/gj1M./Bu6S25(4o
%0Vrs"'a6;#0E!5$?7EqD7M@9D]Q;/rB@dWTFg5JSC*2L(Vi"PsGgS=\j>S2,hWE9W=kYif;7;8*%an$!pohnfBqqkP2S,L;3r\*C
%7Q8[M2-"@PGJjMqkW]GNRaq+.UUg=I.]nf?oQ6mh@\K:F,cd2S-EGQa#/PlMeH;.<TY-d:VJ&'B]f"1ppBfFE4_n:Wcb.?aJNJBJ
%];u-\jn?%+'aJT^k]<SBeh0@Gj>H\*GZL.R^kNd`bt;]t.P!<\P[0We70^CEe&U/h1LDaNeea411!pB93[UWV`AL*&+fhMTd%CSk
%XtD`4!MDr`c?4h%NO>ne1-n*LH#WmMcMV[.Gn+1cG]AV%kEjeeB:%N=X2>afp@\@WmF<;tD3YF2s7;Ck35'heko]rpT5lNtrpoD-
%?2X<ejkHiN>^Ubka$75h5Il.tT6tp3qnqLQCjpAEo;>0Wak)C)6I])758@XOI!YI`2-#*HI6=:E-XXO^htcW)ma$RFe(8M6Ds*Th
%od+urY:mW"&2p`LhY])'k48)EZC20^99nQ9lW^o4B,[b'=#E5ZGIR/-n_)U[pXdGe5Fg#"e\C*iD<RR<2ei!O)3=Wo()JXS`pV]g
%)sq%+^H9+gTj.<2+%G\hr!GqQ-=?dlHj)8t*fWd0_Z/Tm]?BO3dBdELbDW"TB9u]kJR0eGeDPfs?XIY,35;'"\NDse3?Q7O7&ce;
%WTr^6pj0jgJ#0p;iU97Bo^)A4pj0dn.Q8oH^-!`V[j8)C2H9!KPN3]V`kB'n1/mjdna!siq<7J;(8i0:X.Lc3e$ji)p!nOuT$6a#
%`HP#Te)[j=Dm(>^?MnhmG!Qr=nE]*/SGN*H+9/SAnk[;=DrnR!I.eBAbJMfa?a&PMBD^<4a1pJJH2d!e[l67D`tntnDr2?9s#u[7
%rG[(+E]q1!&r3A@SBs70^<>a)aZARMqP(>lm[eb0NqJTV4=Wh,r;-'1gY;N5(SiSF_5GJi](kf-7aq,'g#^m)j5$.f*hWCYr9MU&
%FmDd=Q90A5HZD+Gl'0LdXmKNR3>J'jIFtAk/p?4&LJ*-nmbVoK'6pk./re/V2g^:c>'hM0kLWe%B0:-[_Z"t%n'K=KYPrpR9Ds4A
%0-AB%Icug<8<9/9HN?;sb7X)(&jVXc_s+tk?dE[@mBch>EV]20J)c+:^L2'PT/;Wb"Ot2Yk4SR`76qhGpVlb06M?6M3Qd_I"+6a&
%17t_`mH`NefoKod4#jr7SLrW<IJMq$iL;ZR3W%es(LDPae@EcWYNE17l]_,N?^65RO/%?!s7l8JJ*89[LHbYid=.\>a^6FqrBL8A
%jH"EM.pSja-`A'sC-kJj@T6?UMUXO*j5dO"O%JeIeZJ)t`<du[p[r4ik!qUdjYeh_CMnE:e>VR3l.M7:J%M,`r+UWM`CZ@sW-B0&
%0;rEJpuF,h$leB)2u$cdT5Y'7@IXc(0`,Aq%e4^3R@sN>+3/&*o4Ob_T1*=%M^Q=fp$Wcaca\_'s*^fmd7q5-@Xk??IfAg9o'UjZ
%0'RT.-+`:$0Cp'R/!c)r'!;jJP@.9%=A<0\J^jnS1D*`tDZZsGX<t0?^j7U79/V:N"BH1<9jg+#JYejOC'(FBX<t0CMnh)B?o<Mc
%"BH1<cUD6p-ErrSC'(FBXQLe3>SC46?o<Mc"P.W+=M>*C-ErrSC'*_3#cuAU<YJS0?o<N.>Qe)D!ilX/-ErrSH7f9"H+GqceHAnd
%=O0ED\`W/5"BH1<9jg+'J^lm=S%rb?WsPk?,I!W7HP9LU?o<N.C]mf1FDh5]$*5JXSrLO#T'f<\21a9\f!>rjc-s?4X<t0?^j7m?
%X*M98J^jm('3NRM?o:aS-ErrSC'*_S#d!1Qh?6jm=A<0d)hHO%h4)2p!ilX/h%s2n:%[JTB=ImsQ<7LdSmS#t&kcQI4T(*:P;`k&
%9c*TLloQ;`22XWj0&eHV]h6"&[f(("79/25ai-4,!@IqpH#^,SU]FYk:[$!^Zha"U>e9IeRk=Dan_[\N"ZNpBSE&j`rkq1nO5DX5
%M\lBfLG*<4mpKP$2S*1#UK:FZ_NVObB.<Cuo+5rN79&s[N70U8;=A9D1OXL.H]-sj3Sj&fcO'\+%_dtc!sj<M=[gT78M/+WB.'mC
%0>;p_r;D$6jlI4t14G*"9M`-F2*X:B4_aK+gY8d<\!+"UDeR.]rl/G4q.bA"H1nZn@f,5oEXOi)Fair"\m&M=pL!)2Vf0mO=8lis
%J85n77q]otGsO7dbNnuKr-%Y'-%QkP;#?Y-1bITi*abO53,)JI:k_,+>TI0K/N9TjDpOG64P^l<RqnjX8j/jn!B[hQm=rWWm[L9#
%gZA-hcVADEC$3Mq5F1j5A`U"S1ELu8qVT-OAH2&aAKAe=;.SkUnM:JCjc?0Vqtfc2IQbBY]K3S#jWFLRh&>BEUC."f,S04PZtQ)E
%?C)5jPLo&mP\AQg9o=+LNUuu5nHlnJ:Vk#&8M;1Hiqh`JcbDM'qU[JWRsk9CQe+J$CRI/MI?$_&a%u804J%O^]:Ju-!=LPUcUi/*
%G4X2Wru[M.S%4UBg#a:1QbRHmJ@Ifg+0L%goX3M'B[Vb3qT-,/dYd9YZMX4[okX`-?i4kiHhI2IT3].D53ji)^]3Y27fT*QJh=R#
%Pi][</_K"G5FB"O*Bj@tc7Zj?><LlngTqoL`(rH"<kL-,D_Bp2M,a><]`kqOS%\sm<+PoKI!p>=L<PYQmFjD$moIr!38"a1hY29-
%gZSM1bq[F7=:5([BDqTSO5"P9s(MR[pjXr7?IQ6mq=e/`JD-8g%u;lVfZVt&S(l-Xh<sGfO`,GV._X#7pT5IG2l@H><']j9W/WmF
%l302[SGbESRus3J?<gh'X:eJnna>:oD<B=898uFlN&TYmr3&Q<S$USsLBXO0UT[g]5JTJ&%X2f9:9<V8\^&3.astnYc%OW!n^mHI
%g.S,\51lFmeuu-dp#bh25lT=3]A#!A:VT--=Pq<5n@2EQ]A&BH^&;AgqY^pD./qWdST9$(+(XWRWrDsEH?/o##*6!t\dR6gSa9bP
%`,:,b+l%j)h2`Y^dnLOoZGmr/Fgt3(NFo\te^4lJU);ut-f/+>rb4RlB)^!@jQ4MJmI?[pZd[YQ[CpY$h7MK";3U=Gn#e8=rUmhs
%_J-(2rIspChR,emor_lcc0u@IXn^/s(C&u=YE(>SY)_b/b^QD.:JW;r_j4<;0YCu`-`8niB?.K&WcHC.g;Bb:]HBT$o'J$ZIT\T[
%`t,>FHrp%IYKA*&r+UV.KoOUQoYW?q$[5kI2V[(ao@Y_go?HgYn\si)atDL+4$1-MJ\`PR0D'4tV`4+j:>aJOe:FsTMtob!3?G98
%'YRrTS5Sm8^?]A-YC'I+r;6BUr9*V4h[?X[lB6F^n@qF:r^B?g(]KIMi;G_[C[ec7RYQ+"0p]8)l/BASo'=DiYE)ISnUQZR:@cEp
%nlG:tQF,)(rP)$4@:])8jY!.&C[RA*2RmUd7rE,F()L=]2"a:dI,?J;l!Z6:b:LE!UCuAQSH@hpUr;)$eie_eBm_h[`m:g%5Q@uM
%5JI-ek46.Q3mllOk4uO^m(=RGk,244DG]TjkgatK\*iR"nmCuIPNaC8J<S*a0>@Fh0>@AX:QqFCkfm=Ho'6)B]@4)t")=g^3D'02
%7bG5pouZl$GC4BbhQ"=h&Jt<3mDZ.\r33fMpsrfT\e,.MWgl[d?Ce`7=5mh/*OEoo`e$fJ67iSZV':hlDH0>22r3ikig/2`mVRmi
%]fF%^=(^@T12$3Nk%>43p"dT(GOtOQc17*%/ou%kHHc?$miFd<r8c-2]g;Ja]=N#V:jPSdEEsHbnUX%,HhiC#me6PqOEF'jXKM/l
%\tcA[1qPs9DFn?;OLfJ0:naB3m,I0$DG$V'Ze;Mm%38&H?@Ul2Zq6r5*bt-0HN!KTLom(PZ`C.mN`D5I3C9^MJb.k9grHSdRFWcL
%C6t$&j_I8\(9BiShttQUgKs][WJiD+5L`bj7F?92Dh"-]DcUt'rp,UUN\\emKuVZCDMX\(3m5dm"-%@n1/;LLS?*<+QPTdO\"`UZ
%/-0h>Yr:_3.Jj"6q8E]XWhS*hMQZ=CQ1TGu^T#`-r-#'t82j[(qnqsGr-H)S`\Re+oCtTX"fZp1kC'[+Utg&.oC%b!1VZC5T:B1m
%Is3n$,9(%iD3^2%'L&"9GPfa?>nk\qA)Y&&n7'rBLi\qCDiV"C*.&C4*r2M4.slF:4_[LF'qC"sotB.PbeJc_2\leqLa&'13LCgS
%es2J64OTbfj`YWmhClo`d[_CcD'8=h_9s@3qRm]43Biqa)V5`U26PAB;!R?:k&el>5qs;IWuistIp5k<nf%B)\d&`?WWqXUZfB`"
%CC1kLGBJ3.cq=V^j#W6>6rhm8m,a]!>mnBg3uSWq4IP)sIXeUZ!;AbD%lE6_jq#aJJ_gjZ/\l(VX(OMZ@unDo:!_]AB5?b:Sp*Cq
%9A)VhX=LhVg/,U!EAi;co%r/njgf_\oak`0>cqunG^kuX#"mJ"b2''ZL%1&EY8?pQ*ooS(W+ONB]Yd@Bmdf^\cK=D*+8k$^8fS<c
%m$H-6(q(A%\bEeYBTESI26Zm7R46`HF4>F45dsV_k/Yq$Rd1b#X&D.8kg^fHo_[1Pr'-Ndr^&S!mc/Po8eqiR)>phUb:;&Y]rP+j
%9+YG`X<?=N2oRi/1p:D;[BP\!M3gE+GfValg^RSrfX)G&$QSnbJrBT15&^sH:)==o#;.WaA];dU"g7n-D2.5"pN7IHUKKXonHmKk
%i-<-]8*<EL*WJ18Q;]dnTAdWTO=!T?M0=on3)Etqq;WQ'h#-fXrmTrY"j`,*le=9Y#?]:Kk(hETQY5of3X,"Zp9IIIIO+9pRX[O$
%jm)F5G44%HX4%OO5Z5A'Ria.Bo]ZQcs5cW6qChSd?!QTr:VPT=?2WlXJ*qbDlnGS?8tYeQ1TgDMMS5Kd8W!:Tn)EKeG'.1^h7\:p
%:1fRYSY+)a^\LQGlEf:fJWnbS"#/J=!+si(2Ju)[T+`XB=R>qn0RL&$,k)m5)g(!3TA>"gNqAk[I%^(t-`:&<Dt=PhGB@j>j#\0:
%H$;!XrTs$C_g6=+mnRchgJd!pOf;X$Is?i]h<kFqGKK3E1,i:T1X]LZe@$U^12sc1Geu/KfZ]!Cc_#^amHZF?qVqOfS::)&\)6V'
%p!%:LqWn)]0>IJZbNheP.GfIL/QqPh2IFphr<W8tVa!bbo:Nerp7(m&mC1uQmcn7oBANOHZYD>?48AWnj_Vh3PQ?)iNkCD.%a1KV
%I=(I3JrRhZ,&9]Amqh@Wj>nTNG.$pc]CkCmGMOu#lA5E+08F)+BB)Brh>T97-U]Vsitk#bE2\A<r;=T"]`$k4rq7nER/836g,o+e
%B)_D.Wd[.F34\s4DZc'Z(LHS.90Dk/_'sbQEI>`qD;op;h=91Cc6D5i/j7k]i``bap>U1Xj'aUDmX$m9Vt8)[H>ilT4*#fJbN\ie
%D]>7SfmSMLDPnPI!'a`fN.jji4'leI[@YPe=R+Ii@kcY.jr)Y4@'&2[^<c3ZH5Mi)GtE@"GAj\Bmd*jnG@]ffh..kI3Sr`HGhoJ"
%m1NW.)lT=I)<]63^U)@^<IL/<SKms3mI@r:rn5j$/p(]*D]uGFmd#)pZ`AKpFlbf$"@r"F%QQm@*laSVf@SABcEOX]6(b\mgso0W
%f<+otn>?0@A_^GPao,MY]K2YSBp#fo<SbscP=o2,ptaf&Y;YXj8)nbn2D918?A\@KF>I-@Qf$hC7lE)`2Ee&86M5M7K.Ym1W<WZY
%7qqG:S'+MWKO'&f.spnrf.Z%ZmsK;jn_2'jkknn^2L4sS4N.+@.C8WZ?gQ2f^#)5\mjs'mkfe[-hJ*d9pD6(R?N!.*buL(cJ(tG1
%q/lS+b=-k-+)<f'?N8IJB)3G3&,btZl[-'1WmdB+^RX>Sgqg1D3QEIPeNi^I8t*Efe)VVN`B,Jd9*FM:'?#:A+Q1D?/gTg2HQc;;
%.S\4/`#-*'9q3VE3osh<eF4I#OBQ=E5>Ys6UXG^]=q/C_UnlR@$)KerXjVU\XIfp/\CcMna,Lf@)QQ!N@[6Ced@JS1D;RLCXfBE[
%%FnadN>>&b^U$7HTd)'fqbl?uPFh41HJ1\M*pi*&;.ErQ?f1$\[6&dW[rgL8]Etq_.nAlK<g-bOcGQjU-N2IVMrb?FfDreW!Sri_
%a47AC+PktFJam=,,a#YF_T(Xg6&]]0*/k=M\[DSq*.E8LP^W-!6['Ph8Cim(+k[A!\09Po7^A.jH$+N3K@8WN%m/RG8^<f;qe@s&
%!f!Z?,5MbeJl`ir'9sU]9`p9c?Go#:`3OQ>O9B8mocrN:-mKuUL]UYcSq:TBCEqaVR&\+Tj11aC]k\Bg_nDW/BZ%N<HO]_XZJ\bm
%fU0;tMUAPe`%_nnO$YU:nSq[^9Xk:<458-eAIZd#P\k'MXZ81;9fSXjb9ibPI7GuT#T.BECi9?("#7C44)H=qRa-V?<Ctp_j3kk\
%e+LG!",.<*p:>=r$oC<dUd"%:VL_V`V#(@j\"2*l9kmC_+OSn_H\I(F.U0;_A\HZ:Vh`NUCY6,F*GsH\YchKm<bC,Z*#k*N6o)@H
%O]_>!lc5_;[J<oeCSk?hZ^pJsK<kbp%F2C<jm5I6>W(O]5f#FL5s[7'%E&<MKL)0tQ-Z,ce&29CU)=4>-4X_NXW*'3Lh?K;K$d1>
%%Dj*c_u`t,<=EPYe6jGm_9,e1<EZL_h<A?(iu7@QF@R;<2;DuW\!7i?'$&#Qm?!:pHn:SG1%n-pUIH>`B?cBNE43(nD/e(aXMNS5
%At7at8'VQ*Ekt4:m0d;U;+En05U91kPDPK21k"R4!Lr=?+:JTLFY7>`:^BpG;I/a-(l4c`[CT.$<<K))L`7kl':8t"0N@->Z!nQZ
%==A:O^fW0hR4hRrm:.s7)Z&iC7iV:^oP<["Pqf`\ai<BnZ0[\+O%(q:os&a2$pPNTRQ8t"D.bra!3H9*"17I>\[\V!(TTP4!=Ulb
%"V;Z0"goO_N)F6jGS+>J``NK+$CDR@*[)hKc"]=,dn1KDd6Odh<N@UJ2RGGq^O`XnX>4._]%b8;c8G7Kl&I[oCZsBsD_#mH-'F80
%>@JJXs&_+Q>9Ac9`:.7KXdO5>cuujm%F?#d2*fp=S-tg@4E7'`F#=`!eu>uALP;+\=qPTG4q-Da[%^VQ&<PE*>Ept(=]pS-MH?pZ
%&k[MGR$F,s?PUVt^,4eLoML[</!P&'b+Vr!]N00QK?]]td'qIED:$n-Y<h(+i`;(JCeW[ua@:/"[tCt0DWS<72MtbM/Y"[cY+aOo
%G-mrG6aMMZ>8_I)ZdWr*aSEHQ/&qoT&.<+#crq18C(.7"rfp#["%nkU?3??kap<h.@KEQ6;o,i7]b1#KCt3![oifh8*]?Zo@Gah(
%Zsd=Z^4q&sMdO#.aZUQaLA7%g@bE/Yjd'R<MI<tHSi'HL_:d+W[)#mtZNb'sR;s7=QudI]=H4PD+;W>(_6kbseL4[4!%bCd.]nHs
%W\k6M&J>Pk!a)k-Jn[T!,OcZ)Wl6IR[AH#KCo1IT^7F\*_nLkR%Jq1__fF.hHSglp0eBfQZ;D%R/^\AK_fAsDCSk?hZ^pJsK<kbp
%%F2C<jYf:SBCEjF*(/XL/>,uFCfOjnJ[i_p=2T.i0Ng_g%8^4W,:"1`"gE`]$E2JZ8)Q>1<D-?CCJB#!fM&i1I6694L4'O.)YQ<H
%NocuapK/[[`Ne26b=6J&[m[Q"*6W3hXI4)<c??Xk%F,l^2)s@5P]Ie9PV[OD=H4PD+;W>(_6kbseL4[4"K]GN.^93MW`9Lm&JP\m
%JlkB?"kA>C8+8Gk<f9u?93$35fSm@qIQQB5L40U1)YuTLNocuipLl)s`Ne26bsl\(\&G[N*6W12XdO5>cuujm%F?#d2*fpASD,kt
%3!q:YYoJDS5V/j6K54ItX&6CH&6OR-%7jV'H4=Ok.3g5ZL_[10<<^p-(.[jQ0NO*3k"A]uqq0-'L425?d>!)Zr>PMq/ro%f3VR2<
%)o]);(<o<g/@WU);&mbr&ZqIB%FB:,UCGQgTJ]!hcCEWKr.u?O=S=(b.]GiIPnCDFp$O]2Nsd0C("N$];.b4T!'r&Dh`3h`JrmY0
%@e:lUQ%:]NAm'ro[>(\r@'?9GEBMEq\"R3s5n*j<\#[cTCFH^A*Gm4W:p?YOFs/G=,2**HCJ=WdoqPBDDLF@EJa(3">;P^dYjH6s
%)mD2-CV[BLH+.caP^Y=T'HtAbZfE?GKgGs9=ZB'W'JO7s0Y-HL?K8BQW[E=$4A7p_NItIGe,d*PD&(o^<lZ!4^tqnlG%-7EIAaR!
%_J;EHdiE9jfRU1,iH?!n8l/`bD[gJ9[2ocn\G=P!`[MQB%;sG3CY6)%*GsH[YcV?gG"1>c_,>*\Ru>S>]9@>=bXL\'@ViS7V!rAS
%)l#q!F=LjlMlm[cAtE1)-'\*m\`fP^SMt8I^'?%'NAfhZ$>#`cDCAOGY>sEC?o.*eo^-`j)tZ#OCXDgc>]aHm)j@`6Z;E6cm@\::
%7COk9NH3E`$YR_GCM:/_*GoK@d&`qo<ed.$FLMb=0pct/N=g+P(<idME[n0@CcZ)(.lheXPUpNo"sg=8&J>Pk!a)k-Jn[T!,OcZ)
%Wl6IR[AH#KCmJ>D^7F\*_nLkR%Jq35Mf-q*HSglp\`gK@Z;E6c/^\C!Mf)`]CSk?hZ^pJsK<kbp%F2C<jYktZ$UZO-QTFMC>_'V@
%=?t&5Jf^ur(0n27^o@'O!WQt3T4:Cod6u_8B@Ti-5T(`m5V.FC<)l2#BQ8]SQ*4AkZ<h=Xe&,e?2=0)^N]-6>f[m?G]3KHYE,85)
%%`sfimZCV+>]c#p1F/`B*1f#dY//f:G-o(gK<kbp>FBMDdf]lr5@/BX!>sg@@I\_=/>2))0fFt%ciK&H9FD-i#dV,.8$HY-CVfl[
%Q<)-6M?[NUXJ)YGC.!n(oG\XJ`@CJeW]PWF``tmGSaL/Y^P71HrO0m=[gL6sj=RVFl0'1FAk5Gd83B7'\jmrJ1Zo[Lm;,93TJ\uM
%J@;"/[qPmGlgEo1)h['6/>uR4jA]ZjflY4F=Hi/P@SP'FWu<B2-lRmFZ%f7cWXUP?i,<#)(9>ZGWp]ScR<&i9G.OFXr>PMioQsh,
%\j^].d9&<L8%1(=NUkJ6MeAf4FPA!C1Zo[Lm;,93TJ\uMJ@;"/\+,kHHT*&&(^((Q6*6S$V]o?iVDEtBRWN1-b*&-)5gr=C6.%s!
%LfLK*W&D"BK"llA>-'JdWk-s*B$N:+gZa_VoP<[Bd-kuMkSDFR7q:4#+5OA=2TeP!/Y7smd;=eTc(&R"[^-ukJCX_&!SV_ZgrAO>
%b_gdi$c+A!C-Cuj1ZJmV_J9dT0auWD4$sR`P)s=4!`gc1LmF<.:i!#0#59%)*65E+GT."@*n2lOGIuSQ\qYeuh9gt/%0[[X4u+59
%;I%E&JSCm,FPEPD-m.9r\2MW&[lq#So<&,Kc??Pq>6D;<Cg3<OG2ooNH::$/"nQW)<[b%0E<[hml#RWg'pLO:,KMFHGXfJP8`N(&
%"*Hl3;HnjaU"-E%2m>4TXIU3&7c3HIZg\kEmW:r<&2kYI5krEJFA!D+msqfC5.^-4D4HZ)CM4[MUY?jFRZZ4+D.braYcV><_m\rk
%]T#_>WG:MeSMEJm2sD^^mO/g_I#Q)0AEcIUX#<]%j<)EARf<!o:&k4_.o*Ra:*jO"GjSE$HoTHfo0f&SrCs."P<eX#/N'1qB2l5O
%^+7,U;5)GcR`Q7fV(Mb>Pj4J@3)lP4+,Q?6.ID($YgWW8_E-.MTD0HH]')<9?"]og.-.?oD's\Q'C;-CNcmHQ2;'e"F&>S/Q5GNt
%ZKHA.H`\WG(l:D\^DC/<HKm',4sUd];gK)khq38W?q8`P98M>lM,.*':T0.'JLqs<kB.WNk6#i_P")[RW+#"O*6Or*BV>2ebkVf3
%QO&aESb#^&_,+QoA+h`%5(XG_PQPA.CHeW@.]"hX;>3234rGUr_GJuTRK1'+PnG-m$'t$72Z!9cVCN_I/%0agBXQdjil@N+c)/g"
%QPUJ0g$RnohX'Y&:WKq_Y;_#sSWu5HpZk+j>PPh`T`;@UI_2<RI[f^gZAuNhI\^q'c9<e5HQ9)<80uZQ5Hr)V.J<tqd(>+@dO]A]
%*$Vcd4[i6mcj'j0SclE#EO&(jSSS@jI9LhLO>,G<,b.\,YdTIhpO$IC<b*$Z8`VlaAkd:sBO`-_(s-Km>nNMN:dg,Y1e:=Rk9;d_
%PY.Lq_6AaF/k$A@es[nYBfk@_@A+PR8SJd*BFmLoWlRNU/[X[caZXFUBHf!ZkQ3l7^g2s]M:dd@N^dWlC:K]lCZ9/i31H$eCSGX1
%-sLc4#DYTF:MM*<%aibTLMYBqnT5rYOE;'I)\WdIK2t=%%jsm/#cT*RO;&a)_MI<3cfts6F+[Df-IV9E$)fI:/:.M;USkQ3i4Z'A
%,eK4<ci@>W<"\!jXU2iq5S4C^_E_gf6Kq&VRL+m=FO9*]An`"^0b*Z=!n:7A1Y$9<7'0.FAj&^`d!Y%Khb/NRAg458*6U%+U\1Ep
%%ILDSEufC.ZS2d0,aN%.PPA-`FJKpQT^S_-,I>b;6b,j*@O8;i#8N=if(&#:8TsK(Pd58)JW,KY4&uB1VeC<gY\A?T!n&s,,9@(_
%:#+3U$HS9E]&GG&RFu-53YdbK5Piu2^m/q]NAE.eBhY8S8Le*lFY(>R/nVVFoo1I;f!m,ZU^]U<OYoW9Q=VdDF2%Aoo4U1knbPl=
%Tf+18TF4(4HR0RPV"#M6i-GQdO)/Z>D;HM.:.+52\YI/9,pNd9ncU_!7$UK<A=ZA(co[DQ)J]Kg.Nhla%SA*Z,hGEuT<`n$P;X5?
%'QY$&aG\!no?_^sUh1B;U\9'\*`O8IQ3:20E*j_t[>2cRo>7tjVF].c@<$kB=cule;hUei)NDCm6BO<DWn^i!^$4>RD$'/n(3o:V
%`r!1C'o+R36R7%*9?WK9"(Nu1:Gas0PE/OCqTe883!*["":#N(\di%LY7kGs]]mFgVH&TGl?e!OfiA_9.U&Ds=K#[:$.Fd]0MF!0
%4l;")LFLDf:RO=4U$;%Tm8["8Jrb1$6cn;t%L-IHQ^'@<'N5'6f3">(RVAB?#M&lH\r\bk_F8)LA4Xra2oq.SJI@cChQg!oH5/l=
%7<F09SrJhWeD7,@@b%]EZ=rTgTc6@3B^cJsMUY!k!Y*hp<b^]IU`bqR"l)1>jIe9(5OCIiW\^_,dY!(q8$)F(NB0cJ*mq&>Ejdt>
%%4kW0'moC<la.glZD]mHo$AKg0PSKS7QRX8[62E!g*mJ<k=FZHM1u7qQQbQHLp[)3JG*`s9@Ms,PB4K7cE5c/kd-ec#4e\TeZ9J,
%C?nBqN]q!Ma0KOA:d^OC5HMT*&P7SnW*!ar2eh970k?etQH_^LPqOn24Q\$;qn0CTl&Q4XPiVu\GfE&W(i0qKYsil)+tNdnM9mQ?
%.r83(1<#&n7DdL\"Ys[#l3A*V=?&`)cQEF.Yu%hY$XfcNfp#tpg#5$5+=%O9D&eA!nB/R\-/1(fYLts1*eFZ5rN=3FXSF0Hjb4!n
%L4qcmRQ\bQ9QqG`>uZk]#AcI767H*C1a/sA]!O/_Z2>ANLm\W&(_Mt%pa$LiaQ+U<7?SM3f&s=5aJO/&@ZrWCdel:#ZXt(\1b)Wi
%-_!]X*D0F0MQ,7'`9ad3=MZQU[AZfsC`M`Sf<"uDRMVVg/4:M(9$5R;2A1G"R7i_FM.cPoX4jnCA9l4;Z:@51)<]Z%@HE2RK"%DW
%g-dl5CcGnW`],T;eK20DP2*"@g?!%;),dDFZC,>s>YI[g@]9P9q?RZMK^HaM9gAOn\",Sk@1XIp(,:#SU-5b[O#NUS`7fY&O650&
%pbHdIlEZbXlNkP[mQ]R+na1TcDtA>In0(V5ZQZZWk.U!)j#R'!]<>VcR.S/b0bIH/c[-Y:l_tVn&Bnjb-DWSaOmKtNR>CsGAX0G7
%o,Y#-euApHBlPJ[2OR+YI3QXRW6,s#A/Q<0"NJX%<i1kfPO#d6_-$lb-.#V'B,/lC`_0s<*<c$D6qd^,m/]$.rhBP=BCn7":W-ME
%'c/]m;T8M^.IjPj,Xk0FDgZ9mWn]DA9>*8PYap@l=:"7li7P#M.-!C%(MYCPg_/M/BinnX\(=lCNb-Ng[o<W\;eBYj,lA.;/9\"$
%>f4'a+;>a622qE_?K_'=EFI,S1QGjV5*hl25tMigJZ(W1i$q5T(&TBO<8JpP?^Pic_CQBrBgd]dJg^%a%,j_8$=%AHK\YEX4G\]Y
%Y]40l2c"1G]U_0&YY\qPU."bpMA=]tWg8"a5]7P4H5j'r+*W2!4:Uj1L[@/DGCT:p+l=N+0;[$@'B1f-Z25ffpP`GApPF95g^sV(
%J\j.Y4dEV2HT@g&M.A$>6R)6,fh%?#/+JE@D"E[HX@rX+.I7^O4"^_]D*E_RCFYRsi(SMU1D)f@]q#R3WPHeF6\Cd\P9"f.Wg9WT
%WRWPDYJK'Nm-,RqB@P5QRjWg$aP/&f!9P6e4U1W<0^69!#-[XI^u"[.S_kg]XmqCeq+s7E[&4>kJdLPcBI;`g',D()S<AJZ4TUdZ
%hmXZcCRcFo]H;nR6TD>2'SD;`r-jF$.ODQkDlc@`RN#8'ZT%9u@]%A&e]_,I2X4/BC:TB7qj+K_C"=2H5M/Ubq&8sD@.Mu'`'3O8
%O.4,_%\[gC#L#*rD"nPI,,N)m)b2[94>\)3$\#s4C/SGh(R'H?+AfN4Xi+\b@?PY45.70[W"$BtEQAUWU5DR4?I#nU?!KGdI#[ij
%O23Ol3Z%aJ"?#2X^^O2&n;b6S+hFXh8$Zh7@354)9&I0C`JH4&DQ(eo^gM&;h9uJZLfBQ]_m6al2L;'ts8;BFng!kTI[\%X38qKM
%KCH',i#C5gn:dea6d>Li_n3E0Q4Rm:B)mhinf8gq5e$e^aiX[@%t9W@Z:NuG&kupM!$%r0VDO-i:15BCgr/ag]-Bp6r]mdICmf:V
%LJ/!!,S<8,h$l3,:3GXXHTI<\J2fk.3#4a.0RXJFX_7D']F&=So$W@^+R"V;LP`KV1dWgZG&g,&Oe<uf,".J.!F#9skDG;7C>u1K
%UF)!B-'$uR%H-W<,,dG>3^RAUA=X^.&Q/qX,%k&LAJ(cP"FhWcO=HrK2^-gQ/Hcdk\l"IS;@'+u=]WY37SRj7Jl7To46'I9jgGL>
%+0/n+$E\Iqf<X22[TKcH=J.7^NXKRa-eK)d^eHu;G4#;.@9Y7,`*,I6ZLYF#lc)^7$.gZJ=R1.E^[H6K+Kdf.^8[RH_,bo7(!+He
%QN-c:`_e4K*0R`iW(Ekq;Ic@L"9q:fH?ucM6A>cnqH?T>Pd[mhPgFeJJ&8!^@oMRH\?/)baiRInW6g9:jD+,TX2/7t`<M74f%1+a
%%2PQK(8!KO0`q1qFup#QLp0P8@p72uf!&<#Mp>GA@Mdl.NL>k=[eN&=Thl5'?7IC2F$&&6Qq<mR1JDNm"F(\*>fN_`KY4k>]G0)8
%XOM9g6Oa_K-oOoW[D"OqCnUQfT_Pl5b7$L*0W)&Q="/B$BnA-!1@?9Dl9KkiP7;!=%5an-kD0Y7pRZ4i2A(TK_X7sueJNAS08(!*
%!&0nuN3UiA]V@frEuKTD$\/!L9Qk_A:K]9E6Y@#uLQu%:07-BfVEj1o7ti%>A;!Y!%$//i:(=ScErg1ElI[YKht6>u^A@=rq'4`M
%H64qlbpMl5)U?\ZLUa7XL6gA`jDF*HTdekDNjHiW'i\^kkX@,.0[QDg-n3AHF\ZL$'C;J`T-c0^[,P."Q_#FU@=JEbO>/>O7=\Iq
%"e9?)4/N&,AgEEH=e8E_O'T,DGASo5qn]7"a.SOea2K$NN$(lZlnJdJiZlJroC-=2H&:aW3D^Ua-P;gf54R/1f%[;'OD!A_D:AJB
%CN8<78Y!.G5oY_$NB#:F`=78U,.uLC3dblmP`t>Hij76u:L]7:c6+!lceG,U,9!G*@(jI@j<+cg@cnKhKQ%qDWC.k#i^-Kc*3tb?
%/Vf!Klt3Q*&^E@,$q#q8C5t\T9WFK2/AN67Pm%I&`Ml%;bQ^)L-IsK!^rb2cRlL=DC`p9W!c':m7tm(s!tg_/s!]*t4sDBK3GrV.
%N(#?D;)%j"8GL9`.Qb;\2R+,XQ^+CZC".l(?;eMfC2i/4*06R5c,`DnRa"-u+dYcX>4bb2)hs^>XUsc*BV\<o8D)W>q$1AUGg>QR
%OQS4b`\qIaF#cke<9,X/*?eU<[iUbf%b'_42t?X0#SKVQMY!7O1U&u<J;Zn<rUS#[_%0c4"-#d>PXCHM_U7j9+cFac!9WbG;)'2)
%ddY!43psY2dhONI_iTTr&,6*9r3NG6nLm=o2+tH/]6A_+-+l3%-D#__p;J'g]m?seU\V:;Ij>kjd4)Y&Pp)u&"_U$T;r4G?:OHXt
%Xn^X8N?6^=p$p#GGF-qEMk/b/K7^NJYDjs*?@S"ghrj'")$OREr%n<PVG09(/G"^%iKm[pVAE>-p.m<ubeJDo^[u^LPt,:t*?YS'
%QB6t$pOm'^aY5=__rQa5Rp"8Q^a.d8AS_<N4=35^Y94B)O8t;=N`W1n7k$+KOV((%l:^5`Oe!.)YU^IA1)"3i;gEYY/HtrV*3%kY
%Sk89-KsSt!N_1.r1XIm1n:j`a.,d%(4pfLr=Sag*nWZTKYfNk[F%0(N-#V.Z)A/)&931Kd)Q=WGKtr&j<#E^ZOhPr$;^R`'GKq.+
%$LrSVp8+)6qp<bVbNuI&4nOrTn=?KL&VOQkLk4rAM"NW`OS8l@a.creHN4Q-3(@pP-6^lRms1Icj+R$g&P3Cd7!gmLK#8i[_$e]?
%+ZkU>??CY67p&01/)O@I\Q;Be"2i/c=I6.4d-QT#&%*GS'2/^K/t=&.K9LFRi>"AT[$rW@Ves4$9d:a,a"I%s3h;je"-+p")ou(7
%r=-fU"8@T<GMoQ_,X/m:=H7POUhm9Tm/E%*qqQ`qCY%O<_PSKY>=HsCD)#bif0+cIY-&<";jBmLm_qZB;8#&T`ne*F=SZ39dH!rc
%j%+J]b3Tc$)Yq%<bb07Y<&P2NkqmQ@8E]E7KV*moj<Q>Ujn.PcqT,9jdAA.8_G9kQKUbl4djFX3;Db?\a9>#$4pS`[8Duu%8E-^h
%fZkih2,5-Wff\_$7Z4?@A31r#&n2VG;V<pfX-*?Q<Y]Tc/XGL]cY:J.ZpYSXkFC^GWC-o$7k%2QcHCqSWSbe6)Ws5D]pGiAj?.X;
%oVR.5gnZ4W3EQVZH&et"UW,V+3T$[-<\:aXl$aS6U/#^j5Xgnc$"cfe@&HC<YbH+`<kLcs?Q;j2@We4'ZT)M)RgF'o^cqBM[$HZH
%Vk]C:A&3`jOYnY5*+GOXU(41!\>Cbt@9^kNO:@eZ8JM*W%<;W]%A=MukPMY^-eilT69=V-^`J8*12I5ZTdE@EpQ/;a)=tpCPKf.O
%D6jq_=R713LDr7M*6V#$4,8Wf@MTn#OL&bhEG0?^kS'Z3#rNjG@]E>T)3s;1KI#672Fa!q)OW`jCiY9B"hA>/,H:3p3YRWe+ZEmC
%S;q-T#gV?D)@W/0e8kb7fV0P3p,dJd)880fdoF<9`*!adlSc4DRPdsN8sHI*hBNf1G`=]+,KM3+'@1*,flVdE\d8WL.=3pD^'I#U
%]:dY%dWh!s,%#`KD_TFMg.(k\^l'`kif%OPH2O`h*bSo9W$f*1ApU+rp`@KO`Xuu[6hN:(Jrg,V-pA@UfjP(VHQAA]@2:j,Yt()+
%=Wu"J(-OBeAVr2%[4Dl;_")K^%PEF9EuhE:6t.Z4]c/g7jc)-+#W#dXK/<sr<;\@0??J^=:Md0qM17FIS$^.*jHSgN7TM#S;@X=P
%&>Uj\Bc'EuQ*'30BrjmjlC<hsUq@b([63e"j!I=Co#.CUSmiA$9k:EU!(m,VjG#!>=,9SY2KV:sLI-/9/@jM5Z,%/&4%414R,XhB
%,3?:/S-,@R3?VpJf#(Jl18#Ga%J!>B&i1HR@T!mYl!FenMNM/7V(PI/KLd_YJN]D-PWMVL/;`(L..DZdU,m<UGEO)i9>SYI-0%(O
%:6dDY:cr8&$V;T=aX)F!7$-k.Ft$!;cN0;0#mE>r(QbiW,a7iMA,d$1m?'FI8aX3e"FsAeYd?)06Y75^0$t=&.e@=&7&1sAa[_AW
%LMsb58=Rj#OCd;GR.QmD!VUO:]gpq<hPF'j8+o3&QQWSbk@HWK_LO3t8-([[e%K'\:3FqAqdpDMM6&G'%8[%\cmr%l%//-.i?ru(
%1:+4=8GkI;`l%GT9'>FD++KlXcK@d!<7*?cP*t[Y:m9#h<M&P00:q.h!%9";",c;]=`PeOKHsh_4gW=7P?A++]Gn7*Op^rgU`q^"
%S8f0SLbmnk'WIF\s#k\,R9;?,<O+s7dSVHLPL(1LLlm><co<5?(MBJ$73M#$Ulgr_m?(=d3M^[S'"8Y1@W0&8o5_]VkVQ-r^N7sA
%UVSu8]IRF-_@6V0/bDerdu)Kf-._sl_%9H``NVeck@YWOBOd+iA(EF*f^Z>kX"[iLHG!EUCJq<,\_eRlef?Ql;JrOo[?s/U?GlQU
%g(g*>7QbGoN@1WVK^"HEcE]lp^ihDN&G_@L4k7g?VRj^D*O(jKMMYkdQYcmn=q-m(0tXa^:.&!^9!RBmG,8\-li78u.hkR(KG,+J
%08W+1)jV/TB,aj_Z3!M8(AOgkWt\ZZ,R6<$?mT:)Wt7iGEpTBnfg&4c@YKjgR4FGO<5YBFQkqY7_0\.k_:\,5rC$k'ZCi@TdCVqm
%Ed0dV2Bf52@DWNm.r];j'-#.JhaOt':<8N]$lJ`#8/_^JL*s;)fVU/?AWo)Jiqtuso/QInhSIFJT^7(u;iHbj=Rf=!jiN_r7,@U+
%FeBe\GPC%cLp\Sb`%cE.Yb;n#R2</4ST(M0;<sF226/mY'ZRe;RcH&$O"C5e'$V*]8(0l__to@4>V,!#'Z^TEj?E@EHBL2=gWOqi
%SFMdWVM%<BBOC:m5DdrtAB22i++_2dQ@TL(_NT#P+*7<nr2REgoGZ$uSRQZ@H:5PrGV4J6fg27Vg\h&`Wk;LSWd6`1I-I:jE]JQ+
%M6\XO?AQ;RN=FG0<_(A\a^gW'jbl9)Zg7\0KY6!dB=4:e`fa*RHTBd!28RdT$65'"aP^]R2LF3f7'`;KMY0#i.@JY2,:CY]dfAPO
%Qj7Fr@;uB1^9@r5h;fC[N3q(VY?WCu'c[!cV4Nd`eoAel!Z$X?/JeM2h]:&Jd`WchdWb.dIiCX;!h`comTo5Kqa>,2Ad^;-eHNnQ
%@(.Y:`-EO"N`W$OjukXTa85OhmLkQ$76ZuS1.A1T^.q:/Lb9>M!?=i<$CF[j`aj[@\\TQ#/^V.6/nOKJ,^Z$m!KF`ONcd3u&=F.W
%?O\gV<1t]b2eqk_?m:Wa8Y9k&b4=E)G\Ei49jJrhZWo%6;_kB_AfJt^G^g[V2OOH)?K_%hZYMJTEV)XhCt1$3J7r0M$UiNJKq2W%
%BrrX<WH$S;2:r<U&HG*V\8&AlQa3pO4&f/c\[e-<:(%XA\"<%=2+?@k+15/U1H@rM>RdM:j$QParG.M(%!fNTZLDLgD7ClcD7I'(
%rAPnI>DTm5\%$!CI>>>A`XO-o%f/`#!6979k;!F)bTq?:^g=_LL6>O`NhD&A5-gr0V>uC9Plm&A@ZF,D5(6J3.[8B>9O(OQ0m8lD
%n78Ii"a5_@)U*l&\.ApM[8?*]X_+PVdhP#peUVU!^j?S71hu2ddLuXijIN&Y!;m93*s72c*;//PK@fp5JFNBIcL2DPf6@PZUoYP>
%:^C'=69.6!M<+^S;*r22S]\2DYX@Uoc9E!MTW-88VaeY`.gW>MTrL`,/PbEI7H1?o@W.L!N9]#cKo=lFND,`Hs-_VFCt-^7eT/^"
%A[i/)8kY>'SY&d(12MKNJRrLd.eFfU]VT952SW$M>jE979s>_L\8uI`5%uT?%O0kg73i0!`+L*>1H;)P.DE$;LQfo/d\bfb&%*fL
%L.$64S=G<Q/]T"$A\[a'ip4aLK93\dLR<UINpORg$#1H.L:Ki+7st%S+1'?SnV#ra:>C`2-H`Bi)ForaioS_orc1Zu],uh<WlX6@
%-$O\3cOV*L5@VD#QFd'$$6cbLr:>XlH4^mD714\r=BFUFJT$4(0Z7q)kBQb55KOe+/0QB5au?U#5n")?KJPS,bm3\K\J0$-&2B,t
%O-PnZ)@NW-o%?L]43k\%Ok#ep%q>AK+nRdfN[BnA#L,*De]2YqNY.s0NasKng<hOmg/a6EAW[u6LFjaHcVd"-\YAO7_1G^O851;A
%)i:p[C%t_ci1T#d#a!:s\'@K#`1RFX-c2d0I:>4UEOD%r,1a.0Tf>q98#_2].%+Quk@uK?Zo&N)9PDoY&ieEV*3sSB1j*N5&G!(n
%a\J+86T9$CGP]jU%$m4g>*@Cklu$#^Gf5J*99QlerI(;2#%h`7n-udJ%S<]IXf9/,g%,dbTff!mZFZ&Pmppu"dAdR*AcflEQ&p!n
%ONBMs8i;l1g<,FV6Hc9MCGe"mhMp8>KUEh'Q!CAX2KU0FF/N@S()ne_=PU<u2HXe"plr#XZsfI:p"07i&>EHga]N7**-eY'&KS*;
%`U:GT))EEXT])ZR[1G[:-Sear-1uV&.!lR7%>cLNUfP?H\#j#Q74.LNZZ&i6"1M1MSK9XfCoGu_ES('@:pH_R;ki:#mOpBa&9]bK
%o[PrP'l<.Cc3-n`R!Jm.WrtC?=UCBWU+,/q"MlGsZlBnD3(a0AHE8j`^h="_":o!Q76goihXZMSdr@F.Ga"E/9ZY%$3GhJBKQPM\
%M,:6-^$IY:g&`k:=SZB!7e!ConX*.a2:-C$"h?u@S3$g4>qr:]5($c;Lc:@N_kad-p2^gtN=WEC(!#QUZ%qT&KU>]Xb/Qm=C/3H5
%0I36l[$$uGG;ma-d?\//IRn*UpGVkOKQf1joUog</VJ*jh+B3NG*1`A=C9]L#[EC/1WfkOiSQ>uOYG@N6qi"G;T`%W..:uKjkR5U
%k_*fES@j%/du`OSQ`nbP/]8$%:6f";mmB_M/[H\Y01o<#ml[P0+;dh:&+<I]C_ZaB:5DAIFE@Xb6\\elg#OHs/LE7Db-IcX1>F>h
%V.;.>$0$lS$KE*aK1"4rb()1poVus4jlA56Euq]=gd>!P)3pN3@[Z<+!eDRjf:,Z5NQ\RK]d2;[WH"=l"HVQt\=nRp9Sh!1EMTm\
%_?':k)`JTs=VqH)^eL.c-cO%kOTVmANo*>\O'>*0#8\@`7bo*Ol]YK0/Yha:p@iu=i-*@gm5rUlX-!KWa7-'K3d+h$MH[(<=[HE2
%dbg<d[kQS^hcS##98m*B`\5o,-Ia'aqo#Fm)^kG0l$[T7'e+9F.L]P:5'>#d+DOd?'%mYV!69>cq@g*<aqHXhHk6+j8H,uP@qZM%
%P(RTT\eYPSHdD!lI3@o)5muZ`>t>ot_?=#cPXNkg>"=7G<.2IrPt*;99,(9D>a4:#S<uh>OZl=q7FHUq*``Fn?lWSs<h&X/Rd+n4
%)d]\CT4o>$KR+;HhI"MKY^CU?.Q1&+eP<!0F3/K.0o3J6$%8Fk7,7\HP3[EX(=6PkKEt[uk@GU<Fc`ENP7_>j/IZsD,P*o_$6L6a
%`1RLBo(WX*NPS:nPW8DbDD+S[(Z.ji%b<&lM0^(PL[68/:M[Q$$+:#)&)"aE$I@OtS"&)L2`JM-=8#ub%f]/a?+X^n)2g#XG+s9q
%3Qg*>)9F#'GCg>:n#hh(+q$0bkR\h?8ofrK$6kL[Yp=\A@['F?C<JUR'*LjZH[h4V8t7X]M(0k:PRn9Y=;I[9o2%u)B#r%KcWq<a
%X8$RaU'Z^"0)dG$m4'"4f#:jI2aar7,F.S3nP,7m.+02JG!jT-A%b3:)irA,b"B)OL%D0%U3S"i+FrN7]%,pVO>N"5.5RK_BXtO3
%?tlK4m,'h.gUpiMYLb<W^KYL*j1)??Zg(Hm>=f^;+,t\meul^4m;+"_[kLL]L_pnFM/?b1H!4GHMf#s"(QD[X]dH")R?1k9*#.4K
%&iFKN_pAL:30+`Y@QAEShrDUBq0Mb(1bf<S63<[$aK3QhB!F^,9C.7Ufc!5(9.sN>Uu7),7kABsYUN?p?r0G3OJtX*+,s\FOE#:O
%0'Kb,(h;KS:MD!PG<i$2$^2?q"a_E]Y$&34*HJrX$(IIS8_#kWKXX?K3i7c$94Dq&*0Sq^82rKQ8Krm):!CYn&9,W4T:/%uE>oMA
%-$Kr==$?6Z7U7jHokJ=E8R:eh>sb!^;iqA=1'?4(-.Y%p.+fg*<_"p72=eXnd)b;2W8jc$rdhT&i(t@W\*9G2feh=cFDHC:H,FQL
%CT55?ighFDZhC'W2I=E8%:fQ&Nf'bHD$,r%Pos#p045r;XR'*XBd\\f+Z<%[%U,q=@U5,X-=fr1Hm@-P86_XTA?'2O$5T,8Hprj:
%=2h%'ALo`&aVC#g<^Iis's39dU]$A.UoUX7U4<<'9sb22WKbM6e!Ph)9`eG_-n070aAXhS`RN*mH[+?eRd$jBC@\IJZaCSEDp9V9
%.Eg</<*9TILVQY^*,'uT5j4A^"*J:rBC9fO9hcE8eVEUNAth7l\0uGWLiS,=+;P1^>q[okYk'"J?!?#Qi#Dnb0c"Df6r"pfSm%)u
%a^%`3O>Fjh&h_au6A59iHdjH^?-Isj+d+reL3^^`++j,.>9+?$6C`%q>u4XbAoYgl6.@/>WT+SZ4(eg8LJ_A3#^U0GV,EE8)j"Ym
%^u5C`Y)9SV"i29("g-i@\",%`.T#pPE@H!l_j<W4lYT0hQEc-p[TL*bQ6?Hj28C>;QZ_h+`GQ0O;2pms.P-.EnWnqg?1B&,e8/$(
%SJFaG+JP,Xagk#aY!%+ID!L[=>O#bYa]CAm,A_:]*Fp.&-.#1j,i-H'JlpbI0I/r77#bpZ$M'9j2FJ%38ek#6RZlOjYVuAL_?2,D
%>cL=3=Y^.H+n^kK,r.Re3Gptp+itY]SjT#,,=3$Gl['\2V9h8+7\V6%STM2sjM[!F;gn+;7'`DrkBknQ[QT$:@2"^UK<XCBhalVF
%iL?L`KqsiK)8!Ot-lXnB[J7cY71m7TRa'Pk-BKY)=_ce2^$1CdD=[*^Q?Ve-_QVYP'G&oX]h,F..'jl,,W&XXX%#9#Q;'VL&lZ$W
%!'$"sN=Dt'ad]FG^ZdL^0Gb/4eQ0#5"=qXd>[V+c>=e*HbL;>d;\PRFP"SeMQ1>&H*]?^=&G+URT&`"p+_Gu!K)qD+AaKo/-7fbA
%*+r]j@JZ2l#MeSf>+e?iB^(EX_ID6/5n[/8M91>Vl5f?O5a!SKTFc=e)]!Y2KS]ejB76IbYm:Z@(V7OfhQ9LXJnN:KHOBAe,h7hY
%Z=f#WGD3l17s<WM#8_"9B%_rbcOlLMX&4B*Jtdl0#tUq;%m`cZ@>+$*Tl\K`<]GF>'p#S3n"rs7:_WZ_&Ca*C9TKEl]P$(9YEOR4
%H[_\DqG;lKGr7j6Fn^#mnu^$Ch^.127YDKO7OCg5ZA[Z4/cl.o005)U<]dC*M."48l8;^03)>/u#3?&OBf0-Y16(HEBgcJ=+\&5:
%-&2Bb*DJEP,N62:GnUue@?=*KpQ-%X+uS@qKTdC@dNMCdXFJor-M<HC=^bjn62!?H#Y<"HV]d7JW&Q%e!od/HOZCK5<Yj(rAat])
%/a,dn<i*V$KJQdKd4jTDFUg84X0c?ROP-H798H3e$l$+@PD33p+)N8(/Xa7''2fCP0[bnB%PS_JJ8B:1&QZ=baPk^@S@QRi?'$Tg
%<'Z$:"<>;\(*GE%J^7\K(<[5)]&FkkH.1j!muo\k4-@J9Q[/<=gQ\(5!o7Cd-nf>!/";=NEe4Hkpt3uc-(E%cD_.(J5Z7lkS)@bA
%B80;TL6P5h=I`(QkrpBe99/'OUV)3-a<"5PJATG/.8+If_<m2>@B5Ud8P+8K]So3U%142V%FKp3Cfrr<S4Hq9beheh$]#0^"q\Xd
%/bQ/umT>oaUi[sEgYDbcnkX=I#j[e-hTh\\DEBhbpbHcR)$4H%5GDDncf].o?g!.DM<i&ADQS=?3V<pr_8CR0Xro@ck7ei/R)>U1
%8utCaiB<\%7pnP"b&SfPA/R)B)IG'2q-_9?;'D1TppNN\i*0!3H>j34.X#[2&@,as4Om?;/#B!%^,<u:L<PreIeW]ni:7J!fi$#^
%C4G+k?EVt6ZNcma=;ZcK'DBl"(Pml'_qSKuHn+kMo+?<W3#k.';#ilb1ud(H'T68Ch?$&EQ',A4)[fMQ=c%&J<T0IKCqZ)L$\`LM
%N"*`5o3@P";ar>sfP@_#j8Ei!f3n&7HC`q@m&ert[b,T\S@*c8Di>:+]g>Y'$:plr,7S;POe=T]50\ZG'6rRR$@C3(%eVe2jiIFA
%DHp,:jS&A_6;1nt_P<mW'R=WMNnQ"JR@GuD[YA7Zo:_nTmPVda#.u"Hm*?gcFj$6.:iH<d./$J3Lq=b:\u!Z"GGqu'_Pou*(n<,3
%dn$(mZoCo`U<9Wq331-gOpJb=cB1(r"8DI\!=g9DXb)JW:s=,io9l+P<MealBB$?K6kq"=Eihoe/n->LBWt>.^;AJuXRKP3>4,fd
%^1HBS4cn!gSY%r=KRAok;4[g:2ro;oni:6\p%B99c;0(?cf]G"T?+L];[*_:*j05"9%MA\1!RfPI;Go,+>jFF<Zg;a['9^eGNWpe
%#_t?o@TJX;O(t[/>;MV+LcH7=W%'PC4[O6$/S<.!Nk,R)[8c+t<j^AiL3h%AVmI`Kf_K71m(J.")q]Ln1td@00m'&8g\a6$Dlk\:
%2PG!_5Y+kEU75(6Y\e&"#,neI$3WO>3%TfKVOW'c,I0^CDosFe4:^-`c"B`tE#S*Uf7kO)HU%><pi^[k<3cZRPRKho40^#TK/O?8
%JQ#N]pq\J#5K-A=+/="M<\a/3-dJkk/ID5dYbl0KMmY#-<%$GI(llV^@1hu#oUd3h>(4DMg.rA'!N1<hFV+P;LOAQMoX/PmAV<9U
%d:*\\fiS!%:sV,uL+#i:)c&GK@>]k4Z1Bs=>&IgFK3/MEh1F[Liga..,\)q_$3sm?rciEBi+UP>Zht+q3J`jT0cN)@7qst.Pg(TA
%i5?0880jo\+6%@P((rid2f&PI09i>Si#!'#RL6rDI^uBV>g`FM9dV`ce7@"fAC?[=pOe@@IRcr?AR(Di1RX!A>RKZ\piNPC/?4)^
%ZYqnePWBp$0.6N<f0[hPS0Z:CC'pZA29UjpdsT2unS0p>a\gaF<[#]JUbX`*BL=_!20\oI((HQG%9i&Oh<]#`1O-j,5tcX<X8RI=
%M[&K6N,Pl&F6HW\K^GMZHc^tRP,q$W_QG.+U`1OY+jB#?]=6/tKe/B+kVUde#c4Ne4XDr5`K>5<<^VDhV^5;Q_G!_!1=)djm6mpb
%\Q94S)^mU@gpOjS:i)g"Pb@fInVT?:,iTL]qP?!RP#Z3q"f%=1A;5dd93I'g:n]TWo')H(a`>!-!\?&OQ>.lm\!7teL#ts'UJRr0
%7S]d<+JX>1Hd']/.8osnFY%a:!Fl5O#)p1Ff*70C(nVEXT6?,1\:Z?o$o2"O3<!qr1t)S@N"Y2KIRHG!9eU-s.Ll2SXQ(9Bb(H@u
%UcF7;Q)u72C3EC5$_7o?Qpj&ZD#/+.FWA'a0nV0$QjGPTh8iI7C*=6:THI=rA/C\YSAoF9jtcgcAVP"rQX3gtKMfK6X`U/.>E=MO
%GmpT$`q@l;O3Jd:k0a'npM4qph[[I4Ps_DW6oE8j7*431K2TQHS,?>Za;%+YBBd2UJMc+l4K#&N5'ri.<u'D<*R\$]]GHG*qA_h\
%k+6TUKoN%L#!iQ0iaYng#AQ(@hOim8qRW#q%?2&AQuhc,`0!'M"P8gP&lO:5oG]I(`3D8F)/gNi-\PFtB+A@)R%qSIMi_!jG]2(!
%6_8HsZtK8?bE983jS1S?dlDZ[7\FG8nch;u4Z\@T8+nd]:YqM2.KlRqoJRk^j\?H=]"B865,Q;HG*h@*:*`/^d/.,N'<7uonn[P.
%</C[91C"TVjkLKh1ppk%4!Xmufhho5esqpPmo/a8B+a:!R7,(g!6>0Bf+48(nE/leJiLIZT5g[r[E*41nY09$EG1^hl-WQ8>.0Ps
%i5i&ZB,onu!X:K<'!6MCA40gN=B>J0+eRrgadQ'MP&JJ+Tc/P'D5K3K'9<t?Zd1)dY_*C=`DL%fGg"g#'47=#:`pkqPTo0t@V7o#
%H\>6c;?07*,&k[aLE**WO:Y/WJsb2\fZh4<00).MeG#9XXI)PO0Rd+pFQ/i5SgY0PPg]EP.q,f5?>,l)"D?KIc"KWmo,_npm4a3I
%OO"+b.+LZGrMnC!^P!]F1.oHChj[Vopt=3&pm32FHcW@I6idK1@k?kE>r"mIkWU:-Q#tI4bboe5,Z?)d8gC=OmjPq#o^hrBS1::O
%AV*o9D>Hh4R3O<j^W\_n]ssa0qf8cqM=CDKX?&\4^jEF\H.cjX9:)@#B#,!".1Sk<o9KjhaUM/hWBe@93\1'n87gGeh&lfW(t()K
%18-[*_(iXMfP_,;QV03$0PYBrAVT-B8t]VuQ?sp'#YVXAG\(,JN^?h<RsJD6aQrg-JMY9hb-&?HE-#L0AF6-f]Z]/mHc9@XQ@&'n
%!T$I^Q`s^\+cKVCd:1do\"%V"o=Fji>.X26);<r&?sg8:GYe6Y/H$H^j#$QcjnY95ZOZE[4nNDc_DPj*??oHH3E-J#aI(=cl6D,\
%7$FM37Ea;OMZb:EXor:\ZXuaH^bjjND0"nh<!)jrktkT9(T=X&NN]QrONYI5c=5badd4i=cfIoM"H)5_qer(-+ATn`X-;h*pYT?k
%"u7TNJ%r7*_#7^=%61C5_6u9Eb8JWZA.R7Yh;<1!T,V`ubsM>,fJ[]*N*(f`VG7$#k7T\R[*tWkSR^igD<(T,1Muc4l[Y8HQ'P.Y
%<&l;"9#<1tO5;I)AcFs3k3Z+#2Iop3!=C^dZEp:bYWW8e6:n>!HrgdahR#\?^b$U1bnU*cM&6)[,6\4LTo`:Y-Z'lij2dUWOR7YX
%-q'__YTd\a^*X)-SO4_N"N.-M)]TVD"'sHG""YVe0i=lL/;Hi(nt$BAJcj2iGrZOa+"#K7;GLUn"u7U>EC:t^a)[WH+VVG^C3a:o
%6pC;0Y`B__R5":<\`t_$TnBCcM`+&HJr/:#4cQ:tN\iM%Y>_ua2YE5XVK<AQ<O/n@U_HrYaIA.;b*Ke`g^JL%W:,V89d!<6KLohh
%aBYXJi+K;?M=k';,neWTH:k[t3ZKj7LGlj;(u%7$LMZ`J:#b*gDNHriD$@$C]s-)RA1MlJKM>j-eA6=6iX"^Xi,p<:&^V#:,7oqj
%cQY]X+ohXaCHuE6XOQ/t&qjE9Op")QGMJ"q"-Bm+QQ]]^k6_umWNlMfjQ@^B3@?4C-FQFK")URO6P`-j^`q5f[3RNlC)3Rr#:qSs
%QC&$Dh-"3uYgB')1oMCcSU/WX2j9E<(3"0DI:[\3VCMkOag*8:f'R18-u3j>PoO#'][Qf&Mo=8QQ;g5s@ac6r4RA9kYU#,@PT"Eq
%f[@`%:m;Np^e*Z[B*51lWO'6_l<Gu6&H^NNTY`\,/\q'7&pX+B,ajp=^a+\+GBS"njlGH@A)k"&VSGVpa"5A0$t@@FmP']tI3Q#&
%O^JGGa:MEaO*<`c.Y<U_LeQ;:S$mb3&lur5,+(/B6aeGB[,^jr_U`p)/BN!!515,.bg[2m%G43A;U:.afLY>XB0f!:R8M&a.4NW;
%[Io(T7BoW"2[7ArHtaiIACW>TX9e.+0LR,ks$/-t+VuumUt?\oT%J/(;f!YaM9L,-+6e61hU'4'.^?NBHp\I+68?p1[*&r6YXP<-
%*.gTU1QkaDF*n_-Z*>JQrtt+S_/+Q(EG/0#k=gXqb:D!58;`:efge"*_=If'>U17M-oa2D<5G*34fW<@P>&r]R,iEL+sQi%Whb-"
%^'Pt)@a4)#nhUl@S?Z=^anMB\U^l6R_KiZ;\3<E8*&S"1Vr8E1g$9+&KbKDFP$FO94t3q%N?i<^dN^OS!Z(lXi#fn4e^Ipc";*#f
%?QQrGMBQg<mm@k8mpX5Vc$]Q4VB[q;r9!5Qs$#Q'&',-0AE?&^=>p.<9fO)CK+Lk9hq0'CIsCYFm=mQ*AdmgRj0tJ*e&6o34;V*=
%aQ??!I@aJ]S!qFRb@qd+:+=Lc1.6DF,4-W@(7<1aKoV"K\]U*V*6;["H-m%5#$<3[@1=smU;Ik470aS.Ts5b>1J=&u$R+9j`<IKd
%,`O'[(%aR8'-H3BmX-SV*7&-D(OOUsJ@JEi=YtHo[hh#sT;Df)P"&#4/_7G).L$tWZ(U<5#t7j):W>PtJKrc-K7I+__$)j&1%^k^
%]p=oT`#`Wc<jQNXP861B64g9*2c9)n9;qS^Mbk1a7PQIFZ'PMT7CIB%``aTq4hhDM@/4B$hL.UpXX#bAf4<\*OE'U3)!CK)>Gn[D
%%-h8(OniXP%NQIJET0buBKSL2B`Xn8i\F0dJ]$5N[G1Pj+eUp?B;R`MiQR4JYE3K).oX*=5j",?Ta;<FMB/ZZp*2u:Y[(rp`3aR!
%&3.uJ:241iSOGmYMeWd%+0:7tE[]+<HmVK^C<%e-iXl)(8VE3;1$9.MA.Lh6IpTDkD'/jL%J%=eT&CsA8;JuQG\b9UABtTW'SRf,
%6qG+T7K(;S`90JH$(WYB51S0qn8RDA+0c=.\J-=IW9]^^F9/X9!!nHMn`X+,5HsC0LY1Z^P;g6PhE9)/MK^]EmO*?gdd0T3[UKda
%LK,^gpC4f9QlR;/kQQ;KY*(agR3F;i!-Alg0P+G/3d'HB"'C_;qnM,aAr/_Pk5!(79kH@Z3O+HLqI#MKVNDS14t#Sm1bEuu#4"+9
%)2?XqBL>h1CmP4FV*t.]lV0P>^W$R;@6"P=@aCK1e^=T,7O9;rh#42+:ZG9*ouj#p1WZBEr2C_L1*>r,+&QLokOUUH7sCuC5$IX1
%qY-.C:EOT](\iTl]Vu"-MQi,_B_;_`CWcOqf&aRLV3/VJA4k]p;-@aK,$a`1MK55HX2<R2;fG]r>7;-n@$+!'nkq3g-p"68ZJceb
%YeV=*kTT:Do)Rqj/8ukoF4"A15"S'qH1M0Q0.@6jnJ3@#'bAfIUN;?'"!`9+4CAq_"H/KY-[,gg,</oS13h^*eRt-;\,l7I+qM'i
%hE0HKpPRI92?=g\,S6%>9@,gei]Im:(M427)Bs+4=ZOe=<8s90NmFK$Qmi[.`t:]c>\.@eY]DcC-uc'&5%KQ2)jMCbiu8ej2CoXH
%&2$dqMSkG+>f:>#"n,[b&?o?@UMqW_VG+hW!oI\1bs7*;KB/`Q\LK/M092$nRk<')=t\q*:k[4#ZOLMj]Y=nf)pEb%YOd*ofsGAS
%*Lk:sn>:1YVcM+[Ll*;_YuSj^`NC^HPU\l)JrQLfZP4*=&.XM3fUG5_f-M6Rob9`1/`4Q)GXCCTaA>[nSTHr.Y#&_NOp4#XKaQF!
%7E_6;GdiWU^#d<t]72<6j\9Tb[sepVF&Rh'qa$-Eim`/XH>?b?S5u3$l,c*,O7\UiA40DM'3"5`+,UTq%EbT*i7(mX^`e]n;1R+l
%b]b,b)5F2]-+>iI2cV$$fHp;)e='@XDGdgX6K.eK?UM*8H`_"mLXT8ZIb!@q3Q=.t!Eu7AIQfn,*-*1<k5bMk%Nbe./o`#WBCIrH
%%3.R(fD0j3i>PK8\?F$5"_Au'fD,I[a2"q/8lcr;]`^bj'dt:E[k!0GH1DQI;)*;(RY@ak-+CrWPKUmG$Ug3)oFLW\luY@oOXW(H
%!M$^&`G1HK<QcD$p>IbL.P5oiG()n<qlg+\#54bX6L6q&QqPchD18+%\CO5bRt*^_<m<p"3?a2h3.T\J&.ZS0cKjg,PkrJC^DrbV
%E2n`?gm#GAi>.IV8I.c@o9!Y8.@`NOWH3#es1>eS,(:*/eoQKbK!*rT7D0?N)L.]ti`IE.NtN6KA&O6M)K26Wl',7OWKn73S-6;\
%/R;Oh(OgVr3X'[D?LROYT-$7#I`+G:/Vj9d'gc[H6#W-g(Vq7sZsZX!?f_fj%`Zm]_E<"?-Y$!D%/Rd=qiWBWho+M%FaPZpUkM*t
%".[.oC]ss]JsX6.+"ueZFQiR/29R)33.`Ojrs6[fZiLJe"9C'(i+(_JhXG5oS/cX])Nm;tp>Z*bmp1+t=I(PDq$$C$2=(P@:AF]@
%Ct+]d*U-*6kXfuA97VOj"&0e$i7H0'138Mt#>_X_akBlK58Ui!1e)`"7trZQF*k!WWh7VCVE,aY#]b+nRENQIs15N6:N32=5\Yet
%0*%j,geIA/=4+k#`^)nPCeYP&]^016C&+kHroQJE.SZrF,>P_'?mJYoRsJCo!bJ0Ic!c?74R8q'Lajq/$"ja3N1=BA.rB)CF$`7&
%/]3=R=P#Sk3'T9&<2kqhgi[<"L-pS^Q27HFID8\_1sNRt_2bD"?F`d7Yi,,7J`$k^2[spC"r&eVpSqs6NnOYec/[qTaXFmc0LIOc
%Abf@V'4\\Ke&E4o1nO#GC68QJdT'>SERA%2)!63O9._d(\CBN5X`^V^V&&O!(@Tu#RGEqGWY;eZf#qAH6R:)IL''L=nh^_s1fH?%
%^rg?'DnCq#Q5YS#a"UG"ca''MQ%>PH(QDio]j5f];?(NrAkluD1?Ua=3+(05N(YlX`V=+^?&EVN`d92TqaR!QG?e&m'Drt5@*j)<
%<7,7*4Ke#R;&ap*LH:+t6osO(ksWLa6+HiOSYXNoX9?C1Y=s/k`'Ktk8U"=CAoNm^=tVCLW*miq"P283L9eDsI*UZPS>4.M(in=p
%$IRs7i\hh@jBB%gNkb&61dkj0eClp!Ds$uj4^WK2?[dL4r.uXgn$1tm`H9LjNR_n0dD)Hg7B-N.dPTsk#[O[^RaK;rJrPD+ap(]p
%iu;DsDi7CRoGtF.Li8Nd?,U[daq,n:mL\`qFf0$en:L*EN=>!7_0=)\b!loB/`HWI+ff6DD'PJ)$O.:3PRY3-4aZaPc?<FBi4IMQ
%/0(;H"[(b$BcCFcp.sA`F=P@_5sr1Cg%/S9'/ZOg!:_Q?_Z*FSm#.Hp:rkAJVV2X=;MJX*'&IB,7CH8Di@V#[$Cebnn2=E&=#?mG
%!a*g(N6Fq)o0d\daQ)`gP49<A9@ilPPCW_u7*sqm!;pm/0%%f%aUM63h.+OBPKO90<g4u@))u3piW5WU+4W?-.5pbXH=L`[mikqD
%dtnLRhBstXSdT$($sS"^li,'PLW-FnJ8;if&&-\=+*G9cl%AjP1#$'ZY0.UAaiPVf(f\2se^dQH*P64fhMQfA?$FT(4F&.R`l)H2
%@1STHA_2>6g!<eO:=P"Aos6LIla/G[G=YU/PZkHA1cT2`nhdOU.mkMI>"]+`Xe.[+&p1g*YaEq"@S=rUf%mFJ$+O&a+S*B5le)IO
%$'-?7:p4H+ZF2A=cClO%b0'iik,0bn.a(E[0P&gGZ6&.hLQ`M$l+ZFZScg:[C!/4#Z2C6p:/RL1K(G<#C>u_P#RXu0;OhBH0r1p/
%-^I]:Zs+EGM*31=UUa]5d8!K7)XT1)S\^h#'%g:>\BCWt=n,O%JFW_rR?g2a"").pfZjYZ-.`#V3:NrTVrH4S!lkPZ`tGfIrl*4V
%I,u_\B/%*,Mfk*Ih612#*l!.%qX&X]rpB15mnD[4[hpP[?%Jaan$6s9]dS(o"1pME0ESmR0.pae+D^of%q&5[e;W/'Ne@QQ"`V&\
%@WV[b6-uW_XiL_ng]/-^#>[k`KB_-a_676\pWPW!n%![j"B'nZ0B`+XD;kpP(/ir1o3\l4=$bhHlW#$gZk9hp=fl?TMH)4.-h!UD
%Djjj#Y8<!S'F,s-oWJ8tLBm&naB?bALgo7<8=FBIL."3NH#nkO(-$a%-TI`$]DEt"pY+D(2KuZN`;GO!hB8seN&COl)sRF8qN/Gk
%.Z[ZXm!B%P5N_Kr#s7[lRX)Q53+uLalgauOCLd@AhQB+R3Y_(qb)8HFFQnKWVc4$YMI@cGHD3s'2*StZ]#XlH$2:/21Q"un\iP-]
%m7J`D"e(tuB_F'9LPQ`[d5D0U0G0/:M,ShBV[qj@ik=?ZJeBQmfJn',D[=3'IMc8=2U`i_V3+n#>*[k>fbT/qL*n7,PYB_R<EUb;
%B];5(M\_4(TaDhb3m)J]-PMc#OOQ_Y%QCas_jtbAS[bu=7TlI!U&@?*&aq\&nBnUJ[)4Ia+>^n&7%g94&*aLZAp<R*+,!$^HppVC
%?Q!0^h[:\u4stWf]cr"-TboUg_c(M!c6#>OMB@D#&:$-Bi0MMmMCq#0oShDU0D^(hG@%07;MI,p+kXfLITqKc=*11HSFN12b.n>:
%on#AZ5b?6+H5@OPeKR<s`rK?d1cu^lf:4,GBZro,W[4dJ<ud2)b`EVfT+urFNH/;nY!j9hMHhMq>1$hQ!_)Hho`6$9a/4A6qEG<<
%"#MgVF;.56*>jep_pN^B?oJ:MJjNCE1_(AA@4,L5\!(Iul:&*?bUmN6&b3t#CB@.Ao#^_)H+nZ;$d]Z^h=TO</arWfR,o8I,\!m7
%ML%#4I'794qC9PdZNY&LTG=0!+R]^3=N^9Mjjo#'%1a,N)U.8Nn3lB\((kRI$EQXK3#&b'!^hN)f^okTd4GY!<*G+ebNQ&^VulK8
%nDI)9,lp\*)R#R-]G3hGPbtV-l2kO&;a*QhH<*RYMZ@(FVW0M]^eGBL;+U,_Nl[5)AM_f9)-Q5'RD"4I1_\Y8+kiu>,Jj:.q@(.\
%9^M+&OI#Vi>qh7M2B@H^VjVdCO-1ERf0]4ZZ_]-#E,S3GK3obq!ZM_nc,b`u<P,.?QnbE9RVc0pkJ-P=e-2h\Cd]uhdJ7=hl8;\G
%[qs"2SJT<\Xg:q@K2-8O_$P,AaV`]_30.Yr_G7s#O)So^CPoslh1g$Yk_eB_(Lj2ln-Gg)Vl!hF/nF]UpnrFA$?r'1<4Zsr>(F?1
%*?j$[i(E&E]G>iEZ.krq-eln>%*_&$IfY=O*2#m=JM;Z`*M=98iJup!dQf]$lP<3aG#&56&S"1NqCib5'nl)hPm1n2V,egUnaJG'
%hFpLaJq6aa:B>&pJYMB(>C=0YC)?O@cHu;,Hb]SO>4/*'*^$lWTg*c3!!<uJ9.dGB-4Uag`hV!R$>$1aqp(+JkHk?$'hYeQPAS@!
%Xi?>HNgO^chO\i\@FK8g+Zfg2eCtI-H5lTu)Z(@0"o!==]%:5[OO1UJ68[kiYe^^R>)rk?1p3!*dSQm\PG]=&@77t4_nEjm!p^&'
%DOh7f^sC'(i!4@M2Fq?qBM&M+dQ.iN*(\^4%mfs!.Rp/bA`?TX[3h;\/B4W5`I5YB/1ZfB3i0NdYFK?[;5aJ*0*-JV7DbE,JJ#gu
%/lG5`HG%U`ZVO]#^eqc:Jn1YT,@O::rP6e)g$=^A>isCa>Z$"4QHJoH4C@np^0I!VaBOc#G0'"K#>17lVnf0d)Qq_tAHV!%!tW'k
%i"OIt)p#keU8o[HLUj#GoM>lKUq0,<9).@"0iW\9\B8EIIHTe/X6d+<h5WFq+q")ZFji0eV,YA9QH53jf;A".@tW>Jrh/\X=CEBd
%9<?Ps@V\T6QkXKRVVic'0fZb`^_!;VQne^CndgUAH%;bZV9fns!Ol&>r2(#rJ-$sS7Fr&f-,!a?bFgQLY'8TAP;De=%Y1XNP@mBl
%r4T!Y7T<5JdF;*KK1ad-'LR<X*omKsn=s[D8T,;Eg;Ag-6)DI*TUnC9I\a6].=/`))_WmK@.\MJFQ7cJ4(V9JS6Fhc&Q7u%50dcm
%\rkQEPj_gPE7gcu![bC1hA&8$/NfSY<q`q\m@f<mUA\4HM0N@,E12+(2NTTp>iY7m??14be#WWfgbq-#OD'.[>85'X%XDfB)^lZ2
%%_&;Y=YB%>A%`Z'O>9@QYskuorHs0g+AM!`SO@G2(0Z1bNq`8s@k*V"2]mSBFB('/JZ]&#ae+C,pZ$YGmoIAkR"t=;:F9F]V4XV"
%aZjI1:I#3lb"uD>KUtUY0PZdgS)QVUFn$(7B%#k,*;'lJnpk[c"k1)JD4jU2O5k(U=I#q$%Kn#dq>K?.`(Y$=e\#^fp_`7)IB37r
%\^"HMpQ)f?V(^`!0,NgMUTX>s($:KPSp)5!Utg2ObKA.t;eZe+b/5Bm:8-;gN5HGQB(9P\MN5>.Bf>5T6DTCfe)@1FSu_T\C!m.<
%rG^aGefIVYCEgH9:2mga/n5jgI(`/X/fj]f5\'&oV#u4BchT_Hi2r*LoDMJf,90R=p0LLjiK+W*A2O\h"M6m/p+8O6K7FjKP>Dhp
%P`*>2gFeCV#I#:bMX6aWl]`SpNn#V#YcJH&rBj;$[,MmmgUqE.^_lEIThG3P.mKA^D>4-FZPUaPdX\f&9u3SCCO?!Qg5G(eQYF8'
%DIb_Kcs<C@&EPl(Bo;%J(c:F'3u#CR&Ml7.dOs4O-Z9X_+rA5d6GE<a3i$oMH8=1gfi*qV0iXu?1.]VXR_ok745)jK,^SdHSk4-A
%Ye_rY\l@Uu$4ICo0`$R^6[)FZNKKM;T^nEVI#A?U*E6S6"+8Dg;1ThPF+-n"GU'Br.::%_\41/EBBdN:fMHdG1tD$$BF;`M"hDI_
%,6oc9!XA0kW.YN+m4+p_+a\GQBh65GH/hZ@NcEfMnqWHUfH*!T7kM=&C!E^Pld:hI<k(!D\`OQhJoi:L^NGk6[kutQ3.J#TqCI&E
%5LA$[Sr2uKb04Ytn7\'nnt6X7`*-&#93>qXMQpsY0sXY[6)nW+U9%7*H&e1hgPo5LU)D^!T]92R,6LnE:.M[el1O9_RLYcr7Cfj:
%It)-'XXHY's/=0`r1O8^.E^3L?\<bM;oms-Sq++PCQ)RW/^I[#!^jtPVImN:.3f%UTK7S6=SQ7<^[h<@RGR]&gOKXk7st\n@tAWD
%2[bRoO?]0C)&f7EfTt4dM+:`R#OZ6,hefZgZbfR_NHsq<kNtIM&\C=?NN+m+E8#.Z`[%F&98Z3\C-Dbd83,8S[[$'@5X@dlb%Ts'
%^d:\."XBqa0T_TrFYlh)1IUrIWRc6eZH:[Bk%J\NdMniV:KfYu[djSm$]l,H]b-?DKSWuJ,gk1Oa_jEeH7cguU*(R7$>35r(V;SW
%,&@Cj3>`r7CW_EmVHCG<@>]RFE"'1An;51oWDStDr+oqk3YW21:u8O*jq&Q@8m:C9K\Q-9XRda@UP/66KLOquR*/b_$#_dp=>[aQ
%]&*0D9(9:sjaYcrB=$3A%U`s/!SY2Q'4F"&1r+gqhH9<>S?h;Fo[OKnXf@uKgU?Fp\2_+-%CR)+6V#.]8i(ctH:r&9BGnM4g8UAp
%d8A(kF`p-^X^I*1\^70$Q_I`Bo$Q%"']i5WpJdCOD6hsD9"e:U&ZF9I',f*GiD9laY]D8>\.[8=2e?]t;((C=$Mt254*n;O[(T!P
%3c^0Z#R+:Th&K.r?teAgBhO=76ES]U_JKThY`"2fA\"&e;O3BPetjpaZFm*@]Q8Ulg8>AHPJ\Lhcku3_;V-_'WnI]2UmhM@-X1'1
%-3VXB)]XTb:C-!:K^>:H=2a#p<Yj-2cFR$sXJ#k:U-r[G(ssb:q<:mgVF,GFI3tF:q[5\3>1hff#%JXBS]ga<V1)/L9p*HN9P)7]
%r]A61bY:(RL+.9f[o[b7eNR>giEq%`[Jbq,;==Ml2r_aTgmU"pN'OR6'/;X`lD+%=+A\$k?OtmPCjf_+/J&O\>sKspn,?lT8-M(^
%6k^VDaBsl`5hh^'ajB4uEmSN&[eLIH+I3J!&"2Z2#kW^2WV<8X`/k*qQt`+!K)u'O!\pX)L@6;U*34Ut$Gg>;'OrHjnF>,oX+p%t
%11uY;Y@"H7AF77kGo,<d*rKkP#@9ilE9!nOg0f\:5QM;g_>hkVC2gOAYZRQ`"mD%1qF(e_UaW[13VDo=)j8oI;H!4T';;p]JS%MP
%1,s9*%]RlMai_[?d727r2&lBF-GW1b":XL_NRk.$qhE%&5+4CUO'-:SPRMTncXc^ii+<&:LR:]&W0`,slGtCZL-jm?.3hbSJ[ANs
%3jaF-^E/X@4b=#(T\X*RLP1mP&Hj=37XqItZ7GHS%m>e]"`PaO*$dD6S0-5ub]ZkM.Go=c$/AN^[rL'=g(bH6]B:p9`b3pl)8,7p
%a<L2rU<@jdYp4a1,4=:s>E:%B0;iTWTa)#`dK6cQ!S.oQW31k#j7qci)OX!r.I5tA@DH,s2Yd]cEmDbIl/\11Y*VNr[pPZ"$MK&H
%=mSTNq&Jd.PKI+h=U`r_dA]'*;(:o)oa[*a/?lb^'^i\(*UE9SID5Cm0=A.9cG*]cfDY^joj.Ktb3-e7nND,4s(%Vu:f87N[CO<p
%7(`BUfpu3Gdm*j(V=]Bq_)=$LIhd%,=T%&L^mYq]=/fsil0+_YPeeX7Vt'+_l8%VQe&.g<Y#VC[%d^T#'N!1:ECN$k(X"f4i2*.-
%Y8W!A>Y,Ib>AX7+A@sp,Y#j&8IdbfG6*_=!?5054rBu)k3Zk)YlkRt:3mI%YqWo&8-eTQP'ADN/<1A:$gBs%gcQ(WKda:n&<P8h%
%_T!L`.%muS#sb/\I8r1npdD8gH2pNI'6l(&hlh!TApSu?'RjAEYWmt7`b9_Hp<^M&k,&:aCem4VJ)qLF"Pp"@Yo8!#-#edsn9Q=(
%*(GZh3j[IA)tS(o'Muk>NB*.6%O+q5)XP5!.Ms3bRTn`rqC+aQBr>#UFuJg\9'/&Yq,"@__^;Gbb5/IaWTe]imX_[Kd$2Vq8Y&m`
%._jf`)pRQhorT@qfu>KN4QO1>I[K(X5seF5iaMZRpd*:B-2b7(7gW)oI=-mDV2Vf0J`nA(p[IKscR<53&JDU/:P>L+Q:"?`-(9>^
%du1?_;G$iu?\2D!l=8?-J!isZg@pUMk<,qo7.sF2N1XY#3aJ.t"i]<Rr1SVsbpDo][)#H/NUlm8/`cM3S4,mYaPl%b+toGG.>l;9
%mRt50DF!^6UAW5>]2BtGnUoo;<N_7-!D4Qb77fh11u(ZWW+&89*p(H\Ser.jnsr15eK>/-N)Q=c+`.N*p)o'm>11X:UgSl!D#N<U
%aZ7=N!UDiu!(DQ7!-BA2&Uh&:^Rd=N"=AF&\UsC>9o[7`ca1b4Pn3EG\ZQX7NRPlmh=4mY`5.TO`Z\l,b0r/u9-:'`*=Qie]Nu?A
%b/(X[E:2A@)6_`0s$F[]hK(sjANgpg$q`e_*`4#2GdtY4je_M2=mq?Sg;_J9I.^!:LPNXNf5r+sk&4TmhRp^+f<f)$R7m.?`)FNA
%"Jn98kHX`B#?BS/9jRh9.M1Eg3"PY*U%X%VE%K*Q.Xk\S4rU^rALk`R@$N)f#P;"]5B\dS#-]:B:4NGglNC6a6;iB,KOBb_7%c[Z
%U1ito)R+fg:k?##"h60K/U7U*=<1TQ&m+U*i[V9NLoUU0-]`E2UCGpDh?>;:#81*]HudqqilZUOa$0sQD?\o$`tjJ:"0l(#'g?kZ
%&W4J1>%KN+^">69T>ntaF5oY6InJqL!:W8I\_`5WB\uB+XO*,cYp26ULd;%bA=QD?n>Z8cYS:#7r`*q>b_?.XC@#[c&pa+UQrAMl
%)Pf>\(K"0"-aH]9gPf.TZfMr;dKG%B'$Ii)VN;S@qZ4LQ\Fm0o)T*SWP&t"a9d@mA3t/HrJOU]Fd/1kpMW5ke$3t-#;:nmHL#,p#
%oq(<;/?Fq;?4=stLT)\?gaQ5QH0K%s\V/FZO"THeT1ZK04!r(M)N$Kr7/B27gn<"jKR(f`4(pUBD8qj]HfM#P^A<I86ZM)N/ONC:
%7.e)n(jc^%D`56V*Ec%V?F#5V)N"S4J69'$)i43bTa30*BghT924I1!.p9$9Z`rC),,T0rA5/35*_^rgbVCHC29B<iVF24Aa4PuM
%h7?.p#Rk#jeW<X(ldNdL!D">D1?K\:.!k[h>n'(S:b73R,?\1]eAG-"+e&TH5\Uq-b/Sa,_o.ORX7m,-$3jRrCp,bf)2SZ%4+(mJ
%LV2IkI4%]&hiUm=1_8m:m-Qj2MF1j?HN#stYJ0(OK"j)K^&ne>+%pZkYm6=q?]7AD'FP+3J9\f<[Y'6&_[+(DDknl\fTF4pO1gL5
%4\,CNiKK\Y<GY=P?&("dKLFX+]fk%<Cpjja(`P@YgT\e;jj*"f>TE)Yf`%6EpV6%S<"A"'MA*gR<^;LH+OVfqOR.8qS/)iY>+!Ba
%K=_#&!Fa*DgH6X\iEcLif/'s40,Ad<E$QJ+Yau:MMiTsa^eTDM5Sg3V_'Cg$E%ia7)K2:RaV<6$K'"ZoOCX-bOHB\)0PB"i3@lG.
%U?r,?,dqNk&A,IC%U^d7X=c2i7R4j#b>n@SjLo>9rV])lC6G)+VJsiGAd]HB&sQmr/8ZR;Y&5?(o@;0"J_^C>T*)]0<S:DNngXiP
%mMQi);'L"s-$)NZ?'%E1V7J5\W_222\Z,iD=dX.H?S/%=IO:R?pg(7_\EeQ?6_]E)V37.W>#l)d?GdSE4mLSSK#OGOBqQ7i[TI\"
%7*O,'Qq&'-nPuFdPX@JigeCq(H*fu/4:m[6SK^+K8GB&E+nn.KW%f2r5e<=3,Hk7iW89Em:(jVPc>05+^Hgcs1(O%,dT#[V6`MiZ
%)QA3?Mpu<Lq&?%Ic<7@s?uFA-:s/2`:1jD<4N`mGFCjUgrEpGVm.8cbHNDRsVOmsf\#"C*\7u%Jbq#&bf>j!_eZP?GEJnEi-uFjI
%r.!Ckh%7P*o7Ep,r@"8!NT,ADUlZ8e$0GETHc\%0MX,!aGk<H(=9/]%#+'iV]IUR7G%%^b/iINTlfFEC<DV;<-A1QrE_C<*?n&?0
%C2I-oL]*ZY$0Q+&"@qm`C_hTn\'X^+pHu\k*Z0blX%sgfr,SWb]n+BMj\NkWqJj73GK^+][i:+;b'H9*bRf3`i"25s&F\6'%9cZ=
%+$gV&Z4hRdUY*-CkoaKq/-)S]g8H#=^DNLkAW`_>a?cnB*A-ihO.rLI7CJ?8\eCrGcS!D"g71]G&lI$h#_]I0iCP;l&J6OfEQs:s
%)s]mT3FQpj0]Y%7HV/QEa]FXB37O.^^85"FFD$dtIs)S'P[D/\V6S?(p0q?X]_*mor<@,PR+EF&^$hu(D_\GB&G2W\$-n;N[)C.P
%QH1k!a"q2NHikYKi\2bqMP<"9;,OXJHCsg_.LeM\.PaU:_]dI+,&5&pohS*7HQm=kr5->"\5Q7^gV)g=O/*,+B@3^>J1+hI-[D4<
%f:+X*TlU^tgdS%JFF'I6,KYlN(E.DJ^T6Y54nn"Hp59;ue:-LBYH"RuHTqL4/`"$\mr.hY^SC5A[mKuKGB%7a4!Be!;5ffp@F/s!
%$Z=T.#1Tr7(,Ho5-)<quKR,$LnWNeKWd*a+P2?d-7J99cF%R)bl0QF4(9HCVdR6SU&$i1Z$g7H.=Qc_iMXOg?\V0=m&&9!p88jjg
%]7!H0/)nG5nU!_Yf%XQ1rGL\BGh8(INWW,I3@;pOh+<61J9pD.GmhlX/6%B?^sG/16uCur<(38*m_YcjAG3o8OZiGPRBe0aLP.:O
%qr,npLD:*LF%rJ)c3]L=GKUi@?*<qtl<F%heDkhtI0]E^rPS*-4/p9?\C1[:#F9[`Mg@e;b>QanpmgfJ*^@s5r1<3D<lPa"i<iN`
%gqi*7]KLoWj_@KFQ%)7f;D]E@Ad>I`4YEU+U]n7VlTu;*G@AiNZ2;q'BKT:;e@G4p\[2O;Ia<eB@;Y:<5FWfW=ogEl]j8*OXpoRR
%!g__gXr("o$2T[;hc\-@>`/%Vr'lok\BiT7l2uIZn#7+Ajqk^gMh]22c1kCE[*eqb`3OH1lrq`[]UOXr)cEt%;R2ts&'>%Bc;@;7
%=;HSp7:(nMA.1A)ND]"lra?\O9Z.1n6r'U_>s_gS.[$NLcTiQ]FPfA%6HgYil.*h-Zp[m[i!?`SQ5jJ#h+AP_a_cC)Q4T9JNu0R:
%6RklubQ$o&f:efr;uTOV'OSU<^=Lshl.r#sB#XHSOtX/tKqV4LXCe+<])2Yp7Q#:Om0k6?-tSQ5eM:7/oM.iOC)rH@Q)aMJE7tmB
%D.3m1"9)_cPY@SIOK^5l@>R.F!E?$TCNlIO%)=KGR)5"rM%M1ZP%J;_D1E3qoi/!bp8I=f2BFpu#8uA*4s_f"3dUr:QkhA-@!WbG
%Q(+lEYN,(=rff@]\j=EFahja)=b%L";fpCA.eJ0[/bTn']I_[hr^)tu."Inam3H6sc>9fQfQVd'<46!!h(siMB[u6+\U!/BJhc!T
%3nO2Eq>%ne\p_faY2b3p*%rkGgIGQ<H_)mTS&Fe\C;amH?E`]G+Z=,\\OiP5eu\Lp),CRK0i+(c&07l_!A3WnL#>.oU$kJ*M<qJl
%KhJ88O%%[^h/F5`5MN0C1ss]#KfQnnh6r,"g?!(9\m4N@WQRe9lVa'B?/ALchRT17RZ!=B!7^2Ng1+qc[($BBbaY7+H1I5f7_ItZ
%'-42oa7XFiY8;d]]qABE*,[.Pa,\qd'gg#B/P6qVO\!1_1R1PZLgTKGk(VP>k&;-;>q0opbb[':D66HB/sU]XQ$MNu2A?^cZW,K9
%0Gu!28SsZ[[Y`.W8P5PE#RVu@jJu!YjC-b(1)tZr;+up*Ta-edT<`X\S3=f;=-_?Omi"K,3>u[Jo>Ao8S;6<AD*0>[h<ciejj4p`
%=^sG0\rH-!pKT-4'OofkOSV&&"EZ2)-eb\HPKju>ME^B6hrT4a"PW\cLSWc/$#Tp*d8c2s2_N^&b!h7g%b)P9<5]3#TGa6)rQa!#
%.b[`3n"bSn=9Bpja#e+pHeu";cbN+%q[48g@3a$Vfm"1t.?HLQQls8r#m&p(UN5bU\n=ggCMiM+6=]ZLM,VNChVV&7-OAS)P=^!q
%E,C!?gNrV4`-Ou:b5O^KV7F;ZDC=.$G:+CEA6Ma2]2`,8\t>YYc@V<g#qP\(>)$B@X/&4G+Cs1>':Y4G!+t5jr?[Y>Ob&s'8O:du
%H$$892mFIEJ7)>h:<7*i_+(f'3?b\RM@r(/.)=/hero`PFKF;og=L?uaon/3d5404AV(91NHNO#D9/!tR#*D^E[V]^7R-H0QC#sg
%K`&hufKM$?pAb?:jM*a(;ohaa^3G-!)etq">WN\[/Ur?]^Z^g[jXJ6E7t/7]hTbFpoZ3*)hY2-hl]&^NYGF`YQ#WlSVa#P7koe?Q
%5?7Jim)V>=Do"ZVN]\]eKF-s\A_Pu']iMWn3V$t\Pg8$Hp7Q4AYm.%6Ha1A3njlSm9_.@T82cZ&%$DI0<*cKjE:qH)8)&C=#BXrY
%&ue)X>d#F@"F@&c*qYhoFYUZESJU=+,O)*#+:6<fRrWCYZ-$5]&Xn0hUt+U86V8DabKWWejGjX],b_adgSTR3TLCsD:T'fkRZ]:5
%,g9MBk)B?nF2AAT$XT=@<)>kLFRH&&#m*-r)o_THFeqm!8JSH71jNgY&[[`TK"MI+^!;&X2<7lXHRrIER`E,4qoC9?o$>DrW@<C=
%EJ#US,pb4)-)f(d<K#iPd]P+Q&1m&Wk\:T>@ZfQb(!D(jrFMV)rn_"2Ij=@pHYrMu:]C4`lg``]YM['<mGImarlu5>HAbXbKHN6A
%&O7)HEo"%#S<6[kAk"^nCtNKrf8cRSXV>YR?Q`O+FIM6g3eM>rUA6PKiCQlj008*3=W'l*P&QPnP.pfbjj(Fki,4Ks)1+e"AU]P5
%k;/^JFQ_slaK^ie<b91C+he:%\!knm$7:YDEE>2fdnITZB_@t8*3icZgC*1(.HH-QAT[YYo0ofK^aW'KJ^%=@m&7+pb0V9WJ>Hcg
%YOfe`Jg6kpa+&,jY:Y37MmjX<ftZ*RNnH5be,JhS9KcDSd$B-Of3H(W;"m=`o:0cFOr9aM&*!/E_L:8&It)=0_O8H7$]`0BPMe)f
%0$X%3iep9G_$b;)'*p:u=+@VG"P2MTiPnjXROI#?=NuE?`CPGN-u/\U+uW^Bhm7i75/Me%8.6&rZCiSE=#qg<:dLTK;\A3(G"f?[
%Id?MQP8=`^TK%piEb+GED0_>'Ec-^,5R^KWP6j.[!I:X=OK_,_e4p$)3B63%5lr5C1'iPu9Cu(TaF_UH^(RlC"'sdOJ^?IbDoUa\
%6<;LQGX]Yp=c$%+U/.;lbgY[1%[5LBq-J@iMc`8(!a2a$,\?+I*:O`%bgshNTEk=ShYG`lUI1VL%kK@ePs]7ZOWXm<*^=$LYN>CX
%?,l80HoD`].,_jh>:f91qCfuL^6pPGRf$o>$$Pb@gVE,]ZtEM18;3udoU:6j'A>Ump<Vs1jUaU-R='Lo0D]LP/!b2hSEEm30*ULH
%$D9e#[Df#iR07@@ac+t1B/V8;kQFPA5[j)4=MR<0]:%%16SR`2jsgC%_G5f:KuK]@.rp5'>*1W5e*!EC!fdgJcBKjT8o[8?pOG.,
%/jEXSR-,tQCLPo5ZC?mN\)jVs`N`XM3l%Ch=:Re!?o0YGm)os_*uq!dOG$HLHpKNF6TtZk6lWpn^*=fb!F;kGb/l@6`/)UBS&&T>
%!b/D7O5c;H&SNl/>0J$]!^'pT(JR"$H6Z*3J=>,[GTq_B@cV(h\Ka'"=f4kb.DljZ#k\Hq[3R!X$jL2uAJ0p/f1&&@4Ut:52_0Pj
%DSah;Jo7uPUn_Kb""=RB-P(;iC+Z$U-4j16C-9Ke?>N:BcnRMY8XP[/BHWma=<YehfaA"4'\,Y]Ne*[u5[2$=*K7DOUTBZFGgU\m
%LduS*:4=4gPf`"q4I2D]hsgHq&%c4k_<<J7;!^J)F'2=c"\N\RM6M>`^kVc2qW+jdR8gf)$t[cF1/7^7PG\QIBF'=W3GCm9EDntK
%h31;K2I:KE^ZA&fjVP<-@rY4kd0ug$E;hB'8LuG=[DM,po"8(=!c"1rk)o1;@)'NpN,ZKE34/a$8;YK.1PqOj4@k@=`'RugUoKd3
%dK!F8mH_\b(GAgg]`aD8@6St01\.^(Jio,4_bQ'"MU)O7n9RuJ;9WH"YV`hWO?d3f+%HuB,anXU)_cU;%\Kr<fS+dh1]"f*p:nS9
%^l0&uiOZ$o\dl7pn=tqJfAh,$mlX&bi\KKSOF5)<SsW>XYtruA7=OqoX"Y_NK3KSQ([d&HE5HeFfQoNdK!g;lQFZ[m)2SsXN,1`;
%!En+LD"#:0&Bh9CekWMN\be)dh>IF$R_h@1FsI>A6,A(<$!L:>DJ3c"m80LL,kfL)"+a`kM5f,Bebb=0LMt,?i9BJ]-^lG3X3_g)
%dcpHP-oARN9+qPSi;1]5M6`$D$qaTGUab>Z"G7<j"VVi-F0I%NT&W!oa3D^UF#1PHZ"t#ZjJP/o:c\b'JJ7aQ(E8a-Bo=gsnA=,q
%n"(oUMeHF[8HDLl>"2<Yi.CTkUk7=CmXl>V=8F9@Ep_%QTXR2Tk<SK:RfN]+'G,Re2K<TY1Jfe"+AO*<:n`mT-i8[<5qc(t3;#:O
%KEV6<K\W0Y'[gJ@E&HT8H=YcqJ3R-?*&]8P\`%DI4S89(-<BYBWt^'g.<rgkd)SFU6rI2g3suf/]hnK2j=pg=asF_+80[=7m2QR\
%E$>p*c1I!r*h$NT3hI-0FFcfrZD=@fVqYcR=U>Lg3;@h-iIjBWcN@XeeNGZr1*Kn!;iMn#U<K&"9(MVIOmc67.AFjhjEi;C71f!^
%mPu2AAds#B?hB>T@bB\2(7!6HD6UV4?_+BLpZ#NVL<nJ#fEFMJJ:7uYDWRd%YGktje=rq2-sVn2W^eh<==koK;b%C^?5dW)f+H=C
%P=Ug'DIe)Gm+SaVqJ%?p5u]Mqcq1[C6^(nKE4I?nE7;t;V.^Sk*\K]KK8)ZS82Tmp/a?6rNDV5.RAj9r3R5EJNnf+>AJ[1N-lA*q
%ESfqR:RCh_P$_PKeKc?,5QL1KpY;>*RgLsNdKa00?0+e!T]J`?;iqrIS?Mb%WgfY'DtgtqQ#1u9/Hj&FjI^H]!89IV9UV97YW]Z3
%D<)&P@3!BTFWmJB,tIWiUN_0:RHW3uG9^r+IG@[5G>*a#QA4/65YVYs&pDL^%12Fh0s,`S2Y/ZQq>*9@CQ[4H=iH0(;"(J;57guo
%;O;<8!et+L-W69Qk];2CIG&Q3kXYt!<BVXGBUJ=1,)h<,(bglhe4_tm:C`3k#mI2G-\2a/M$gOWGF.9e]_25";drP`NDirtcf:"+
%W&fNRo8+gQNH8S#Z8q_@eG1#Lg08=\"5q*qHV<c)7\B:!WkDWQl\p-nL\&[t[X2#$Ro#>A7tt1WR`&8=Us+XKAjfZdg*BK]ng!4Q
%35]nWC49+7%lG[,`1s1XS$8h][i;>N(j^P'8WHuj@M>5tc,n;*cI]SUhRV?]$*We":kC@[ihcNiT9+6$U18&$hq!-/(]QhXG9_mZ
%7uonSb&0WE39)4>KF-b+Pn@qH>NQuh>H-..2'>D08>(e`6AQfQ01.Zf(Ac7KVSo'N['WUDQ:!0q0%boYQ;b.Rd3M5A]%b0cATRE`
%W:Ml!h06%!!_nI6++Eh:8bY)s;a,`7?b5\X\hA93V54^l3T!@$I@SXZ4a#YaoU16JrsZZaMdG$c;b^rMPoscQl1uUo31!%S%65b6
%^ec&oOAH;!?'X%SD`?#Sf].uq<M2+O<?jYO)b8[RLOQu/BdPh)/8\/RW]BN.deWI"g,iA_#cE7ojl,sYEqu$TqZ3$:Td.ZlC&.XW
%^?51>H8h$s?H)Ph_N?$g-9"cD'm1&9+e_b+G$7e&Cm0N-PChi:_L=.AIkpGt@ZS;3S[>YM*(gs4Yb[4=OS8;Wc1^e.*>7]*cr#s"
%7Z2eo0.:`+W.YaYO=aZ[l.p'50`l]@%rn@[kcC.?n"Cl.,`i$M^GKTbj-rhT9"S2$Sth,MM0YYqq6/[_Dgp\6mecWa5iqL1^4a8+
%E&bJ!Ku6,ID4TtmRAt6AK;+1o]g<Jd']l(#_ZL*6*3E2lg8JT>W(e!169:SupsJP\BlRfEj[rE%b"+ok"H]4,g@R,;mKP_'q?pEd
%H]#JU#mcMO5V70\4-;n$9Qo-1Tn"p<`#f9H7(14C#?iW.6.S_gN9INp\a$r4]o"HNTb]sHKR+S(h$=P+dU7[o_t"XH%kaj#ZjDrI
%dqXGMBF7ue/&Oq:8W9Ob;P>lB?#>qE3!hb9L>!pH`1u"&'VZOI^a]$uWam^Dfq(/K<iMu1S!VCAc_2uB\5!gb:DO_$n7+(p*A"k^
%?t"$\5O*RPnROqEl$JihD#`cMo`o8(?VZ:-BOI4@LJi<f/dj$FCIkBK1YT1sh.7EHLYYL"@*c0$/':8\H'%f<j-4ZL-(ZMUP?8j+
%c>$ZDB0M*^=Q!)=90k06q.OPL$?@T:HRd+Kp.\"dbL"Vp:4,'_-DN4A_P1=-&0?".&]t3Z]o'a8XX^3t4=%u`:<E7d#b/aRA4a`i
%'W":,\;^UUZ=GPkVLG=oqJj_l?8gt/LUpUAdZ7$c0)bQYCL-dVl,S/9a8:UgTm^r#MT.*7$aida$!#R[Fn>a(XDSYa+0_%NLLL_X
%,Gl;WD:M$G4]M&J@j`I[/_,LBId9j:S*Da?"*g!D7(J2g%u^7G3`D4^X]K%#r+B?%R^OB/,A"&EWr:sG00@4\=3RZi<SoNrh97h"
%DLk_GhZFU>fY=JF=8I=34b*;+Q1ZMb2SB2(p_uNXIr<LGI7@.2"@)5uWK4KmJclQ8Au#=VO.N[QiIVntTEgkW8hGf6/:Ri.fSko/
%9o"aJlPJrbcfU%BWs#Xe-$0\dQSI0[%]"IX$-.A=>`g-j$V^ak8('q?7(@uMq'n+7+;p_VT!`E/m6DuahL\JFj<\aa<Nm.GaLH,L
%eMs@Nb&#`gp<0iiXR5aDDne@;HbV.M^['6fWut#S-aWqFQ*_Ijg4c";XMt-S+r.rM%Z*hUOMT^qUm@_=F@?0eC0(-W9M-3nMXq06
%\]-uI1eRrsMQ`6MU9n?7L`%XT;F1:V#)jn\_[Wg+=OE6$!a[iW>jm,PLhjWAMUQb`7Ytj?8Ql1a3]cDT<3E"</D?#-@kL);H9cs[
%&I,VgpS915jj991c3L/H+DkC0eQZP)ct(i_;+R:!+%ZK2.:J`kG@Jq.=EVjG>O)+/.ZR-\I]0DdE)3&2a@1S3X:ZIZ@F0hVbeIfO
%ip]Y!_kc#$)C4)t'1O;_MPLI1L]onag8ZE1Y-<G18mr\GK#$_NQ2V7/>K.OP[H>pLaN)\(Im_Si,_R)u:G!K@ZmPB[Qid.sNiJsU
%ej2L`ft'S#,oNTa'IrQYkE&dlK'KI`g%P)uTe8OWkA+GmdPOVGr9O$*h>cq@ho4KQDf2'Ohh+Sq:E5q9+Em#mPKc81cs-K:+;h`k
%3WAQH#BUlNX=/g1`$UBgIkRL1:,H=SPJs>mHQ#gPp<oQo?VXlRI<n*PF+gja@/N-`CdOCM1l"<fB'nC4RY*-lY.a*(VIMn2Z[Y#n
%_)@,^h9;t&@V>M5FN`CdUp(DhIt>/s;_jNE6J5Z+XIa_WBTqeS[gC*^d%<Jf-LSP[0$a-L(=7#;+H0\UA%[.>QkB)+`78kI15'=`
%;M'Vt)qP>7M,sB:1W^'q@p\a^7djX>%5fI/-gl\2U]NN!P9+e[p]WlJlf_-Gp"ffBDt+<Dn(Wj)a4A'L+BBcbY.pJ4lQLPOesu?q
%$7*68e2?_8@dd@Kik(Y?i]5KmG9WkN$Vb\;]CU>O!U]GQ;@hVge(IIJcmC\8D+!:C"PBtB0`qcW+82I)/;'Vtln*;LY[qTt\m45%
%r135Wd[^5kUh"u!4a-#(+$T!oI<k`UkDK39gZp)6.5Z"9`m7PIg=)bY']\4D3o;aa(N(5fhnog745I@c@N&"gr9KuWJ[@!)./o=\
%T[g]4p<.iV<53Y$32_&P"gWWH'1Ve$[+WU7I1uR*2\5,EpMtie\F#_2ga8EO0+\=<!Z$G"8W<BdAjHS$Ar5nO6;(+e&Hkc>$r4s=
%(D%(!3/\1+O@j@c!U#^_kF7F3AhOcO5>"ckjao/pDerSc=#AXZjg'2g!PELpr&#dX,`!HBni_$$o@OG7@),:CiFNcJ_Djg`iWt-I
%)*WQi*]$f6pqYq*&1Z[1NP`gQJr;VK7RWFCoU^Y-M"AR`"3!M-s/3:BM$6>$BM=[fXTPjnSh0SQ'KT`X@OMEPNso/oPC'5F*d"A@
%V@4ReP]u5/((@3X=URncbYn]l4WiNB8YcFjfa'F2U1_QW0?'6dTCD[1n%&u3IqRBs4uCF>^4Jq%7A$aJ_4);rYK@FDLcp[fKiWDn
%$3oo&0Re8RaV20Q1^0;#]mtF8"'Pjm6HPs.GahCL?oP+kaGUU<#OI>OQF0Y;Mp9V4/1(?Q?T7b%g#1?>H%;toM2Mk^I"]fOZ;JK:
%np6!4TRnA%#SZ32$D5;q'.)B?T7GSm'?U62IXWm7H'09mb,i/7e8WR*Dl.>hk5!`s>&^q.lrGB;ctl#$'e"u!9_n`Kk\0$$!9%^&
%=7%+L>EHq4mt)5-nd1J0N\"$MaZ8",EZ[u<&j[<U]RiftG"t5W8M?B7mbiETjQU4Ll[\T]m*mG*kkd\K9*.C=!#D?624.(I&OmIB
%/L++uE#''_+brEVNpUR8Y81"^K/(aXYh$V2SAhcK5m".X05Q5MLdn-I68>q0@@dL/J7B[U(<ESn`4UR:L_Bg1!b_X1Q%11s>9h7h
%05="gK(frr;`B%7q!F$@'R]Dda^YsDlN8&T8&\H%Cl'4$94ec:jhi]J^cQnqNA:Us%cUkkm*_V9XClbNq`S<`;&=m<#ead]ME-LT
%'+7:5_<B/3'@!hCg2tJG&<a>AB,DCY:4cV>ql!;>oYg=SJ.Ba?R47"PIp[_dZH%T[VYaCnL+ElmJ0=AE?k28i]c/oD"83r.+CLuZ
%p-lZ'0\s3#R-rp^,JuOW4bdk^liVHZ(FKlZik9nT,+1N'm,.tb!q10T=Z](XcXrO>oPlLYW7[;>.,\&J^mjc5]Cm*l"_\/oCr@oK
%`6]31qV"DQ:IuRi0Q'!uK?r.Ulb^Bn)>i9#oD_oJ@NYE#IAAh-qLS,KEB<9,mNS%I2*X.tNlL9%,'a!*btmD%+-dVU7WAr]B-dAi
%O[5k9<f=D;`m2IcK.Vh+L?it8p9>FqHJPlHCfr(#e;Z$q"a;ju+7=R$5rV"O,(bMTiIH%8[)E/=cne=W`8`6Xkp#Wl#W=Xf,UU?^
%)Gd1%k><cbTF3,S5W;SE'A^=4\IjYu`5(*n/.jmaWGOsh9AcK7XE61]BM2r6B>TsVKdW=n:Z;3%,VEf"cklg(:RJ'j2^Ym6KC>97
%#gJ']Ua=WI5q/jN'R"f6Qk*@/A6+[L:P2QWg[Ca_1R&[qBi-Y;&O3*oQB>G/Ls895S7+WHMWZK3b*VG""a^XNIKK4\eOa!4a/d:.
%@9f$^LCd#gRY_bWdUT%$j9?&A]0]_!A/#+kI)fP(86^mbPn\?3X$m?VA(JQ$>*(`)]8R:FOWu/>:tCXDEjWdP;Usp&$Q>,`lu>o-
%9*GqT</Zf;Ejp*H)&C?-?Jm]i1Tl%;L)oSB_B*cT6UF`U1aKiJ%%UE4b1'rMEVU=%>t2Ip*pA0]h!6pJ6l)-I\;X8V1-"B_HUn)K
%894CJ'S'8(F97Jbp6'ZiaS;WV$Lkpe&p+YK[+IEH.Z<$EG-]OJWP8cZ%u6F%c[PWc>l9Q,f7)J.5mr<o%YNW(UW&=nKiK#ePeEC'
%\P,8XI[X;OMaYujK8&AL$6$i:;Xf2GiGI>Tc^o!8l;?<pMIM=u*"LMaaUND$N$s:>\9u7(16dcD'PN@uPIq/EnKfSa'l6^W/)h'c
%crufV_48(3AA0[0oT0=aM8P2Hjn`#pf%EMc@QPf.qY4pKmusu0>+t61#N1tSq-%^p&4lUq;5Sf4YPB3f[F4H>h64-/cdIM8.i'jm
%`FD@76<,?hAZtTm`OLT_l+=p0.l*&>PT'B6e0/g*n:ucMk'U!6Kq09b(uRtUni-nO#m*'V][4p!g^BlumHI:g9(l4>N[q0]-fj!h
%@5t.bLE2-Y4[Ig,4-EQ7NbYJeePS86B!tO`,7Y1uTsmhS%/>7BcX.JT;J.Ye[<"q;$oJHOeGMC$rBMp\91-IfQdR'8J'dl&X,=V'
%2[l@sd@>faW<=kA#`[<m+Z7:'U:)5\d=$$po4Q1X=%Vaa?,\)S3TY.qWi&cA1`HeT(6h5=m>5/qr(i%2r2Oc\Bl1Hmq%X?Y9-emm
%$5o;H<RIs?k2f;6O=7"e(Y!J)+hACsdE%g.TaJXH-grAr[3SM$.@ac-j4!*_?/G)!ZQB17QC_B.p,Di<hc%kX#goEG,r36\JQpFl
%lm>+12:Cu7!102f[c2*?WH9Sc\4N?H:lIU5@-t7Y0)?q_9o2#q2bkM/s,qlc%0^KbJ+?!k*48J\-8mNHPFk45YApPTF1(1-62_B4
%QkttQdXAT#JNM*Eg)e!Lo:hEHKt?_BSjnP8&5\a^;8;=h-(7S;ZM_ra1numOPQ<eH#HGie*<IX`L_+9Xql<-b+F.HUdZiAdO.+a:
%_L_o=j@RRhON12?mXZ]EC/TUWCL/lr5"@Y@iUaHgIp)(+]R)fD$.ObnpjTf<3c'a!I/rrTeDXW]@I@sdqZ/nDql%Dno/XR`3kUS1
%KOcte&9D1M6A_HWf7^(I98PZI%1.KFO:rK$_LgVP;o6Ufe<AJ>AP=@Cqk9n*SnJ9BVnt)7_LQh&nS'q25Z2XX:W"GJS\NEm?8bkA
%LH8f;ndj%],+@_I!TW-_eFF-:6MplaOH#/_92h`!oJOCY50PslKO3,*Lp](a=KIuI22K+1nD#`[/[@hY9km\=ba>YAX<_H6A]6;2
%#GRNp<hGf3>1i!P%2)l[TQ3<oX"R#G:&Z:8=Juko*\]e!/C>:SIUbXDF@\H;-CueeLm6PFhPd:BHo1S(a9ocE+<8E_ZsB45A;7jd
%<A@Ks7-^/jq3(dSrRL$Xc>(*-ZbtC5O0<5?96rNR\lhT&KC$P?2'EgcfI<4C(dk%MXi7T3.APB=U4*S(Q5p?pgL,W=)[SuIAYT\f
%I*5]sQ]NMLhHR-.Kd(<R$39<>FB\BOQqD0%;3/qQ09MS\E#Vnf,V+(08)mE&KFY+F;A:2rBKqIn;#=bKZ^s=J*"RX_Yp6eW(EKuq
%s)m^'I"I!R"],T"ILSQuUecK*\V/ll98-b9TZu*3M,<"+k!m$<MAq+Nk]qkln((t',U;-fqu(*19sWXe[7T*5DV9^,%2QOOJT7WO
%[BO@lifI9qU/#N22CC_E\lduR=#`EG=>[:D\_M>/n:kG,72,Qsl[@B+Kpspa5AJ<8WGMlEUZdce/O$iSo-&VsKU+`9rR&e?S7nuI
%ToQLg6JH's&=:Y82MjTEEjL_^/84X8D5`U-]u1R)Bp,5,p?KTYATRE`W/EMc*P$:QdZKU!etjUXNkD9M]PAa+pA/ksH,)OgY.gD3
%$[UcV#)HRLHMX6-=qZ=mig\B^]E!hp`4d1!PLtL="^-Oe-4_X[)WQp"gfaqXrC@7fj-\0*CsI;9Fg8<M+.%F]qXMta](G%2O*B*7
%jhA!6C*->X6d[k>\=rUF4/(r.AD5)u]`d'0.k0RTfFA3^[io2W9*AEJ3m"Wc'-!^?o/YOt>2*r'Wk`<3Y)+Q(b.3VjZGeTs8C#^1
%7h$,#n31ZTV$>f$h+647QtlX\dEClX\'58K3g[LKq'OcHE!kcTTL.gUms%nMYOqYEHiEU5/*ftNE-`$;\.ocKT/Y?DjaPA3Ms+d_
%/T510%!EoN25JFO8N'W*S^>H%)&%!Oc<bt`[@FPt1*ja/PBe#I+QTAk,AiV""#o2+(OABEYb/Q%g.u?WF0#9%I%"TUHCE>A]%k!7
%<MQ6+Z9c1)k>\U%oXqg/D(NDIl4s#ZnRO3;=F<'LrdfE)*Tq7!Xm=!F07L`5ciIc&a"KlA+)9)Ld30.6]_d0#iiBq2,ecf#"';Yf
%Js"!<*Ltco;)s#F+!%\'B-nQY:nT-Bh-P^i%UUohW$F9]m<Z75;*1HuL7ClGfCtHUNLrPA@?^U*4YP0ig\#%:^W7h><5CbrjM,<U
%TJ@?(IGk*A6&A*XYW-\LIFS8@Yc[Ti`TugfktG"#"hoA=]tHshs5fB^+q9":[GK/`?_kN!]&%Z(iGZYcIkbYV"UAu90)a2^YU^0d
%32OBK2)pB[Xn]q=K?&q/Hg4q8bEE-3pD`A[8;$Yq_67Gt3pQkd7'AE0ZmB[[fr9k#a#o3""4eW?(WD?+0%Nj/STZbH\DFXHf<`I<
%3kFi_n5VG+rdm@770(5]%DCg_^&"W6&iR7C][(<XbXroj**,JT/k(/Eau7tUZOEAR65:4:d4CX:%mKTj?l_k5QI*[YU45@_Nl_-L
%Nhb-WLTYJ>C,n*_b$'/@?7dFLQ?e+1e$Ie3"QrYHW,N#R9JmT]eoc7IAO3sF0+]"AXW<K5J[r*d?7^[q2.C*aBLSQ#;Mu8NUgWQ+
%21TLnL%RID*3JE+jOL,ckjp8.+7=bM#=<%0#qo:bHgt9,Gkqes!mBpDHX6A:&H;P!lg``]YM['<mGImarluMBHAb`9$lZq8)J%l`
%15MH0DZGhNn-7eY-s(<o0YO_Xf4cC.01mp4Vodrk7C`pk:4[%@cLj^2or]f`8-U_PFf5StU'&`u0Y&Zj[\a1B1$5VM$?guYGqN?(
%\8\Kf@.ESiKnNZi?3;q`IH'B^`V#AS(r<mf7;$tnT&d2fZP/1oqGb;)L+YJW]WY^t7Ai+'&*RIhMF@MR_EjBO>`'h/6a`T9q#f72
%?CUiCk$EE3g>9P``;Is5#-&?"+%"S08oj2pV;r5:aunl&+!Ng5i[a;f@m_'qoY_\3(qa;X.lK>/K(kGD@g'uieFo,Ie:9.WJl3;l
%/s1@?*7Wt<_;4+1Jd`dn"p%VUs-'bdTn(\$KC5[+Oa(`CS1@]Cku(q*Jkbne_aOVa643)k':O$"'@WIR.H6K22.G\.j>8?>)bD+p
%L'iU!9-h2Z^h"NV8`;+AX7tI60X`I;ce;8Cb1h/uilUg6K+^R]JCqfdMt"<$.hlnu7`C:O=2P.3Lh:$@5m!3A)+g>sP!=c?W&:!1
%W(U0N.;tgL9.o5na0Rsn']G0\D.qs"%-,m.rj#lHl7UTbf;K)2mB>C_oCaL*L>9YjHHb!:ciPN3.8&qIa9kN^0A,,25gRX(ZH&.o
%Jb$*ie>e<<"oM&M_Vm\urJ7(RB$41-",dY>2^WI6k7LE5IX2XS2!)4e!"*=A"]-j27[2'*9Or5NgFIf_C]LIu%?mGj'>omJe4VLr
%"g&46'YLUP:`O`IT,>1BK/e_idql$%n0N!*J^I\&SRdjYQga)4g'_,8[K,]lO8*R;M-%O[7][lo`&FquN];\LYr>sG3%%%22qd19
%ISJ4Ia@(@<Yi'aNGWna<;1A!A1M,3"i4b(Xc,g7=)6Id)^^i72mn!sU=,RrNj;h+8YdGBo,7Q(%Ri%`A@PUNoS/i-$0\(\9VT]_s
%_-[1HoUm&I3.2EDR)"IUk)cfQO9$:rXrnFR$O0\_@_/'kcL!cg/i`?An"(@"Q=TNB^rA1:.!R)9>9uG8VZ<8PRTbFpWM'MX:g):6
%EXRd7p71G>Zj9*m6Ylq[(:`4pRV>mNU^3i+&Q`8B*YP(+VhS7?L<59`qXuF'?i+ORO=hZhAJpA.LdiBm9Ws$3c/Pb'gkHRp72IZ-
%)Su*rkbjl&@N'qg8oG]--^GjP!&R7S,#$qm!a#kdaok51J-sGI;&`>>h5_chJT'b(L'T.D"J)2;]logIfOtH\ge%gA@-E:S(_jK:
%8YNFh08PA`V:]AaPlNc1ehNjRi!]TPp,E+Q#4`dkQ0Mk3>Ku$Vl/[\O4=#u?*/_CaYjGVqS^cXMFJbI^(o\.)]4j>>&,CesD+Bh-
%!QuSlG2qg[I(o;d(ZbP?OS96352M+.BsspQ?a2W,DX%W'4SD""eX>q];.00Y)[]tOkdRRP+b^u.[?u%Y>E^"Zg)gql,`)BaQEdR3
%SX";,ASa6l^!LWf[:WVW4K7,1>s1f8dLgCZ))O"XgM=.O5!]3.10r_]!/V_m)0U7,C_!GF_=49=$l+%>-Vqru'.I*R\@N!eQJE*(
%i:%9i6mST2pM)K'0j#q"&/mmXg[1f9@=TOFM%mYL?oYaGe8VK0<h/ra/e>9#Bb;4ci=:'cDFAXcOAl'peKPUcb+K;h/\KfmPT'TU
%O>^3Q%1S:OjBc5Fg[ef0[Z%9*BU#P:ImnY=b4Ar'$M]7un)=)r8+Pb'_M*"<jaI9mI\[kdI\*i,Rs?5>\qbf<K:+ZMIZrM(qo?Oh
%U+b`<Fs\A"96SREEGlW"1-l*Z1'2t:oZ'Qh0I#er';mQ"hs""[,T7gMGU0s!Nf[kK6sRdTD%ZV(0b_#0Q/JmH?s_4//4A-b<G[m2
%I3S1"cHEGu.!/"5Jd5QQF:A&sq5aRi$QP<Sn?a5"L^b5FId%8d34O($mUG>-4OBA*ghS6!d$r\,CI6QsG=4<ml".YN@42l!\WrLX
%Z:f:&M->.$K'=31#Ru?CJ9Rs%P+92)k+Xo39nl@jhOt.A5L%.XpjDI1?.cKfkNB)4D=o^oG$7WjZ:8?-U06m1,nq0GSk<5&OVe7Y
%(b"#l??$'+$DJg6=`tdl%Djo<OPRHtF!ZT_.%K1N"N;_7r8?>kc7[)+/Ct'OGSZOND?l>Vri4bK/nH*]1tMJS%mJ#O!-A_959qsT
%K#S+.qZf``G<44%-%:FSMc]VR&=XPZQ&jgbrB:B<-'FDP")r=aHC$S;.3NI$M5Y#NcI_u#jY"o@2qoCf`[j>+[=B`IN6,*gR5OiI
%ai&@Wac%M&_MBu43kK&Zd@I-+^.F?29N\>D]%ppW-B,R!2M"&P[nU"\l("BSJXUiHW12G22^E!Mla5ecgW[]7kNc>HT$A)5iamVP
%oe'hO#%b>ifcP@Mn#@sX`9:)eLa[OCR.B&G*i>$E#b;9)&]HC_5#2ZV%+.+m9F5ePdNO\e]">%YJ!/Va;drP`NDirtMr]k=W&he:
%o8+gQNH8S#Z8q_@eG1#Lg08=\"5q*qHV<c)7\B96WkEL!9T@s]>P/_t[G^uE6l6H:,69BAAC2hH/=E&j7FiBo0gc!gPYecJcFhnC
%l-LA1L2B:PM*97(1a,cRP$V`f<=;'1:Gg0jCK51[o<LCP3RmjCQeFN&HO`304p$<,U75H"n+QQ*9?q="r0GTcDtY"4^)P0%.A3/A
%8(C9sA/?iTEXJ"R7S-uE7q-&t&S[K.Ll'j=DG$RY!Wn2!38Z@3M#Zj4)?P9B;=ckL<Xu6RU^t[hWhg>FO#%+2S$SQMc'cnOc53u)
%hmq_SZl>+OpY\-r:5Z50P4AVfrDJ#];1,p\a7oo7SF<6J50i?hSr2u+jpZ:AR,;8@(VMM;:T"a=;^jH4(4&u;GHHd6&?$!D"*LB[
%BY/*AdVV?GM*6t[:14,7EdZRM-2s[LJ,:U^jJZXq2R.P\SGXAlI#UenSa/H]PksCu2pZO@QL=VNV_9'*F.]96lj*BUhc'4(9T"+$
%HQ4c<Qu3@"C%N1=LDUQ8(e$@+L66K(UG&EK@$YuEifeAOQ$O.1k9,PmH6f1D\/n(C\2P;q+37cFU\Tr%k*o22Y+r['P'Qbo)<Rb=
%k?K:G4)Oa*;%SDE:q=u1s2RK24[R-0Bh!hk8k-HIT#dFF306khrH-9L@b#u,ri5Q'kAoIXdfQP%+8$rXS]/G0Ao[;NZ4j!iJtYlg
%i/3't)4COp<eK-;]qGfe3+*_!r]j.E*Yl;LE7Cs&Yj?P:>n-_*!>Eg^$An"8UMOK^![0]1[I'He$8\K1+<$*mc"ihFL.35PG)AF.
%PX&qgetJft"[Q?]e;@:7p-<CadfjrOP(KGoU[r'sFmWI^=V.t`C-g@=+=c96r/T>=94VEo\5]inAdX`(-Vf!lYQZ,2/#'qR!(g]+
%K-;*=;.sgS?%t]&:@>YIe0_FJ*jnsCKa#BR3.)39Z53(K:E5OmQ9OWQL2`X[)!Z.$lZD+`FCDGm53?n;iPHND(D][1UTX>S:D`T(
%Eqg`ajk8rW)DN]\W4e],o-&XmOL@9pgX2]GS7nuI3GS6"G%$l,TmWI16KV+6`1CXV="5cbd9S;mR7!78?-d[TdNh=7B@VhJiAUKd
%eE%U8Na+Vcl,ZA!ldCng8)@07hR-'53`ss$IFeuNm6k;VKLPgdl5?VIBXG`GYJ$7??`cH1-Te'K4<!\PPeN-]8aJa/?*$@(PG;:4
%2@^VFXUE_0O-Eb">3@[pRrb/g>qBjWa/'lEIXJN10)`<Pj$!(qI3[7k5)?48dC;5N">n=aKW8h!.N`1(:B>PJ3(f2uX_Q?H7C6<@
%B[>$CA75KJ\OSKb<"C%pBWVe&)*9Pg#bMqXl5`'ae)8_nQ6nV,VasWVcAQ-HIh;_P0b0R/)5>hL%3JU7eL":ZBl<Q`Re,A]]@BX7
%HjA_8C&?M(nM[#C^#C][^RkGCZ)792J/^6%J'Q>sa_,_#8*Ik9Oh.r`4pVERFE<<4?P!#OIrL8ZKSNZG_q&jA_%KksjHObr2(<,)
%(C6Kf-ppr[J@d6KBe2TUY564iDuakjP>QpJ/at9acXK8e-;*gTMj[_<?tr#5(]@YK,XMMWjhM;d-\RdKHPFUR.b_c=2;4k"$X3dE
%5gsW&(Q2B7n9<`>G7+%m>9n5j_5H'J`4!tA@J6X\p`DS!LL:PI\]\;K#H?p705PC*NNUfE:RZ0%.KZPGe&sZndki9M+=;1hX^Y95
%)C7gX@n;!mD02NG5"+M(DPXg.C']4VlBMC0a3bX[,nehA3q(oCU/d_tUI#=TU<$&,U3Yi%<@kS1,^Ub)6=)]TE$5W)$%?RAaR\E?
%Q)>B,T5uD1+VES;[]Ip&N!5RS[O)#FUsq]G0_+S<TPpOhOHbE9G?GXtDgjWC^``aAD@\jEQ;-j^r)iIsW(#bAB&km;.LserR<?#h
%1D/,0;2(,MKb:EFa8mgqS99sWk.*`ChqY:rG#cPH;Q>o9d:d=Z3A&!@KrT_KOm1KH+&Q!4oKM_mC\%)-[eh+(M1%9P^!VL=\HT8#
%?La/bJ<K$m3uns78l4n40AF4V1"=0tq?]o)Q=BYm3qDZfO8:L.<qULnr:b^<mf'dHp^]%X7HXOJrTF4M-]Z<=^i,-\3;fBsU_n^a
%d2tP5YQ3bZa.FDLq&all'<Cpns2WsAp&G$;s762;rBL>&s*Qh4r-t.g"j]C2\".'=lMh5bra,TRS1+$.j8\h&^nd`P)H0*iniq92
%S@VDjoITJrrO;gs?iU#<s4@9T^@)#dDrU-E^q(S&$V13j^\ohc<hB<.Ish)WrqGAK4T5.mNu6/'6`-[TS-9T5c.]Y%HN]8/MDHj"
%m&R)*kqZr+98pr(->?=*qR>*+J4iVClU*ACKc&1#Hq7k4<nL]tPcRckOZ(&L]M3"E6>gTPP@umrkEJVZ/o\7I`_f,)6XqmWet?Xq
%'`n"AM5tsdYR*,<?A!t(1J^X\>H%GlR:M!C)h[>61</TPgC6"d]-j0Ul\PIOG*'/C?iG_NTO%1;<dX99qDSmA^XK5(kD?IZSeN/X
%0^2q>KX*PM;p.m<!#*GK=ZRdW.%j!u+cGg<;[CTS#87kOiPeYB9s6$S<8L4)<EQ0P:"TFqnS+"/i51,em<N*5B[MmlloM6W7Z,]e
%[].G]Z,W]b"b$L\o5ue%dbkB(qY3p>qo&:!;--'Ia,ar;+Q'rI500'WM^5cXpa+fFaO_*Xk[T#<T]US*q9"[!rd-Uj@]'$g6VPB&
%RXb8L/Vp\t9G)ISVdSXdZsVttL$p$3c=pVXJF&o:#rhC/CprP5e=:H$F+F780-;SeOIlV,nH@VE"Yt!R^Bq?$$Vuie#LZ2*,_lTp
%9Y$2eD)$RQR"fg>!s?RGCqjeA!A='g?3(@=;?Tjo4@lH?`;2aGL%jPr%6g+3LY>ZS^Ktad/YPF3"4h^9^>k#L);&XLA`\sA7en[#
%a8tuF=pOZ'%=\Au*IA9[nicL3:OXBgLA)DQ\2&\CQp$3rapcEV[(8S#BD93kWf_Xc',:m)#!mF1S5m[k&R3j&`H-a;b;qVo!aeXA
%M./djX+j*(!Si8^&DSdZ&7I!=0g_DL/0brQhKs<G"iAi(ObJ=M*Z3p,a3_-jK[3_KeeMfnS_^%;n03AZ$>SW:BtC/FlciCq=/CKU
%7L4rpp:%)"],"t^Fc#]468+[XhG^(tnV>m3p;rT`R1eG^KBsg%m"4Dk?n%EcU(0:"G`(2q*OL0H:CrU;Re_dQ4>Bb3oQVRi>U+79
%-*SI!HtL8kAb!nEF<,1t#u-hG2s?2)S`&d4kk*ut@>Tr`JD,a>%8OfO\ets>Yi+#M^2rgNT!,i/"_J.dDT0g'b8-1F"0rm.Hqn@+
%OI8i2CLRro(fQI7$JMHbN!N1/W>WAY5j<eu1u8I`c2uR-Ujs+db-5n'+HOHs(i]<ci*2p[.!SN"k7'EHXa2)d4VVH]-/g;XV(9B8
%R%&>,3Wq2ZbB&m-Bb]]$):+5W[j6$O7(jT$%q5sr*(3^08D*IP+AKYJ;Fk9J%'!l-`i`nh:bE$bD%@nh_9U#P>1O:K5Zqd)]R2ke
%$=kTYA]":7$I/IRdQ`k`'O:+2ig>?$$^&BsGT^t66k<0qZNlEJBo1s01/M'uZ%L^a2'Zf>*:(G3rIW?sIanUq$USdbK457`c,>4]
%.ko[pp6hkFgh;XhDWW&ZA"=Ni0T))f'l;*N`NpG1PaQmY/_p((O;QJ)-8g0$.MM,#201r;i!k+Id*PFRk?XmY*l'S8"SGCG9(S)4
%5p#p!86L7r`cVg-,>r!LKN''YOcmBD&@+e:OHLTi0MU4=3]h+k\UPe7Nts!CKK'%W\qW4t&NV1H+=tHS6N9_^0MZ:-XbVQig5pu-
%hoSN=^@l.TjSdAcpE"\\a0H/DV@S9A&pp5'L<`mN-OL9#EC5:^RXM6f`"p3\??ZuNht9(/p4pR2QH("UHXUeLDQI:d$W#0pQcJ6@
%J&a\Zs,MG*':X+pVk@63-B<!<*c8Mb<+q!ncHc@o*jEoq*aTB3>c)WKJAFf"E<u!lreZ:YFEJs9_1r/hAb>%-UqqfhkIlebC1!I$
%(ntl?0:U<2;Ckcn;!A<maN:C''';ebZa'<+U/,;0,b5.Fa>'NM/-:SG6e@iF*).&h[Y9X8-)V!0nqLXsT#+fl_I3H`Z4mHAifHbb
%@((P-m)E'Nbspm[1!AbmBoGfYQW,(s?eR]#kA/tsQgY1rcn1pf$)"n1pT-XS)GXUT+4lX4"AdB[Y#UKA-URgu&7U"GG[9+!,+]A5
%R3KY+8<B/LeHg`Hf[/7Q*:_FH\NoF*<,ecnJp,j-EL0rCqD]m]3&F9C=M_k)KJb,r1gL)L6@uPBiZn;/fg-MPS0EsHMaNos!/kL5
%h<KAgFO9+Y$/ADRF%UD.LCj?S$-sI/,K'Y5;/Xt*Gp"[4\Lc)NP=tDA=!$pZ'Zi2W]N<U,agTg.C-oZG"!FW/K<F&jgeY%,$d8b^
%4Ih<^<PHm\'Nm3N)2MVG+`21>AVMs*hu,GL5N24AhfYX=6D'l;T=6+S1#cnE;eC5se/d2X9.3R"i8ipjO[c&Z,e8)7)6_D<)gU;!
%D*'fC@>"&?)cUW+i5is\NMS,N)q(FQqL->N)#EnAAan!D!c+aE7,<P5+X@t3`?*"?R4CmZ;Z\e$S<6%q&H\j3:`:H-Ynp$&G<4.#
%'s<LsZ`PROGfP*bj*)9R:IZ*lJ#Z9dJ2hQqAA*O05k?![%1haEq3p1q+0446_YkCbr%&cmb)I"dMX[nUIjdtZR*e5$kBkIjbnUQ'
%=oJTDLmfgRe?2"#;.4=t/q[KS@_5+uF<jY3RhAiZo"<>oUtc>&$KfVZnE3Rmj(u#9nU[W[2!iLM^0n>oNYa`-EQkd6O\$iZ%Qchk
%L8?R[)lRGRE"3V^[J+SdH9]8$RkUXaFrAF?04*lj-r=#.jkj5+#9n=tqY:S+OVUagK<Fr3'm.2&)U&eU.3,T83=@n-AI'N&&C-mb
%Oc.pl!/L9iGu7lrUdH.^,S===G]mA[o4p[gO.kpE-Q<C1'e81%8W/Ur/9)k-k?!oV8Sd(/*Rc[1kc.R33cF[&d+=jFV.DoKdZef=
%4OJ(@/!aVSk\<I""<:1nNVo:&GTqfE5*[8%H1=e!0>-rD#6:WtB:#4gNBZP"e?_*NnVBJh-GTY!eiN_q'-TF6+jUY3^(;S<""X/5
%O=]!HJkeZ7-'XQNqq>>1i%9O@gJCgX:HWBT[0_uKLME)k-kLS!P:)g[W+@qHZ$G#mr#G!LND&Z0X$)77k`<N[]Vo8*m^mlOh!79(
%K_G2#PnuCG0@YD/1,O#:U1k07$$CtT>$gG--;2kt.&qqRf-A^4On]V$_'9%s8>(f+3b5IYm4QTAi3?<s%Q,R+`1pnLWj!IH_-ugk
%<7O=Th%NN")s>0%ATRE`W:Ml1?X*;lV%Cs7dF4\Cro&(NSJ5OC'^5]:!)"KL73UegC\e-\cM(1l+6R]o:PF$<BaEs>8d=E?9$9&u
%\Hu+eQ8CcB4d)t1n)KK0m#g4\3ijK5C_J[,n`7!Sj^busVSo(I)!/<tbD?d%^IZ]-`^^qWMYh+TjCf:G^7SXg=#>[n?hj1'cP</b
%b%C254)0%s9-O:bLWD*dT;?>P#PsnH;]jl?&pd9u+B2]P-e!5E9t;(u\91cUTL0jp(D:G.NlkAAXS$BeiSuhsIF0$W-ImJ(efZ9<
%BEQ1"T&;hp=q_FJh?2;"7u.`PnLTdAOXD&q,PA]qE4Uk$,DlHR@YHupKnC%'Ols?Z+Hn\eD39hLf8O16q*7UCG9E&>Q#4f"Qi,J(
%Y;\[c@f)^`)SUZIHqgqOdQ>9BG;m^AIunLa*@8:5Bsp??(rhZ9AOJhiZ`7Psc>4bV673)()tuClSa8gT;6pbMZJ0fN>-?I[HBX`i
%W*#;'p+DU9dSo?4UDCJ99Fk"tj=!$>>iS(N5VVb0!!J#oa0MDAI3M:@i[+fqRo*%\AC%Tj4:8.rlju^_\6/E2f3ZED39jZQ[1MWT
%+Oj+LoN-%c_=D$F&?H-/np3;.-F$;#W"qkX(VkaU<ksiRKC:6,.9FU#hCaG','2BG[7T(_A(cM=NS1q?JoR`P[CBptifG.f'O3"D
%K\PS.:mYs&-O])b$]FZM0pfK^(>a#7YXi+CFhR6gZI%E%;Y2%fjk7.%.n;*cW*f8(HjF-X5dbE@XZuZiKbJkl,Y.5IT`+*:ASD^<
%c(R%P4j_WgN3>oKoPD(]3`J\+cK9#6L,=`%p?KSNE6`ljFKrWX+.%F]qXMta](G%2O8%.bGO6*(DP#q[,6'UUWkOu/;0g'*=>*i9
%)u8,m8)g^QI,dljirYfVOa;D6YY"1IQ@c2)&<-o1(QEFU+Dr49VKScR,1ATFH.e_Z*9q!I90Y'-\FegVX``mKV'#0*+7C/:VY3;@
%Ko3n#_5*_)hBA\tWT`UOmGn(M!q#$5EH3FCLD8-dc:.CI&S.m1k1H(n6VCDsogWHZ;H9&P"F<2OToDOK`A5(scI=+0m@;98pi[NW
%W0L?27KQ#<P%F'QLJOuJYaZD.Fm-H:Dj&o`Vf9?UC38og0C.Vg5$rZa?[dKArJ@:DmskQ?<_sWmhJb`4I][sW?F6-n4meVS2:.J/
%Cq)RK`gOFP)RHTd6i;t,=$Q=?*Uef>pp@Y,UE?.sT6.i;AB,%i#mY`pYD;IJgJ&_G]r9E;PLqW>L8=9jlBVQMZ1$=apC^O4e'np=
%DI&i5OYU\@n*ZLOdId"b$e[B..NFGQ!V%.D8p1_-&_:sKQJ&mqVLJ%SIY&V#$T`_cFSnrcmY`-Kd,qSfrF.#9<?ZMf8U?M%L=VC/
%"X?P+',!R!?BI1t,nTC:@B4G@U*pB0]/htkp`nK"8U#kU]ABZ*e4urF+f>t>QkRST^/#o@7$HCB>q[l:2"jsn?_ilnWk=)Q^1Pp:
%EmQ"`jM$T]`0)^p*6A`!Il#nLlO&"0\j4)R.OjN^?TuBa?ECsBo$CjN!^GUHn)hSB<o?JRmsBBNr^IUs(UF1LXa*^ErZQ%G&=rCY
%MHBZ?BS#LD<r?I7^iRNcWI(0g-8&6RDkt"N!rif6d9-QJPbKmb^Ep+Ll#DS?&;'+T^NUs`ZYsJ2gBUlhc)S:=ktV'dnTWJj!IlDa
%n5l-\OS^cLO,?d[Cf2$nr6S+#:Xo]sm,gS^6Fr1LmLu*gJ2fLMr)<cT<AMb4aWFJJ((e`"$/d2N<P]T8`Idg:nj#%WmnH`"CN3?"
%#oW_G8I']$=DS_/_]9W58C.NYP0=l@RRj!mLC.@_dL49tU(<LM#3=8+@*RB?<5A*i-?CUso`?pF$iuO^g2.o&/%&K-6OZF'>QZAY
%Gaf(#)QH@HS6/"3[jsZNmXl\GZPLHF.fW=Q&mkKfce!WsFa3L>HXQS=(&n(&lg``]YM['<mGImarm#=gIu?`/Hl=tQW<$8h-#7Ob
%=(]GZ5j^OF756a<Uk##m8BfR8pKp1?Plc-?bbc9.J^Gq1@8Nu7&6Z[od0Irt`"f@ic`@9Ui%$1Y0>SBNlC<Lu9p$0$".)r7^,Gup
%(^i$8eJ9^Uh.p+)DY8WNpN4bF@S<TXqFH9Mp[fqI!&lm!+eq`:MFj!]HC0J`CpaulYp`p8$R%rTGn_>(f<$N$N3=-L,"gSNi:Mku
%i6Z*'m[r:jCNEk;gc#_;J$C(8A4q^G9DZQ$X&Ds;1;rt2r8@"XQf%LHIdil4J+>n'MhqZM:Ys\8rqG%,&tHPM<STap`=\:MX]=aA
%&Gh"mL[ut3)$J90"nuSk8&PE(-TJEAYmN$PZ(8i1V.3]fFb9E@MT=k,&C?0T$-LOA[[FXjij=:]'<L+hT\^J:BWk"a:+8J^)&24B
%OsNq>M@g]P7iRC,21]jSXLh:?%gZ=1R)EJMLDOYQ-(>:t>UrT9]O[o+<D`l^MJ!Gko1CcEa]K^$,(si=k2asU)2;fLPc!R<qZi#Q
%/!l#6o0N_V"a[>NaNVPq-%n$(iYM*?r;oV"W+h0;1T@,2+0:jf/rh(9A*_VK7M#$gnOcI)MZ(sJ.qeD3,DX;OMsm3$:&m((mY`2Y
%T"j7U[3'SF[S-MRd!f@hs8$SpTjLZK4l>PCr48,*TEOn<i.t6s"*eemQc*eOc%.I:-[\Y$e#-#RO,JcE.$tJR1"-+0J>*9\&FpMe
%O;')VG+5OQ<>DkHD4mfB%Df-1ZD"1(/($-Z9NNsMZeRsMbhuPFHDVAc4e&-X3^bY%"$P&+=hta^,^?&;(Vqo"4KgS(-=NL5Yg_&f
%#9ml`=K);r@aa\`4C<G>$dBHUh=T43/RSH+P2-CZ<LhK!0c_LESrc,BC]Y`4%\p6X[3m4`dl,$f]@\%3OeaNNV"Au7#=mY;S9S_L
%_NAc*Ii8Jo8CUPbm0G8:&S.[cOs$]s"he!,OL^sq&OmI2NAbF/BJ9K<Y':C54R5[@R(B^2"KL!%Et<L,H6EmN]\$g]4r<l7&Z>mf
%K?Su4%=t.)b)h^RfihYm9FS(f#Ju_#.0s&I$-`M_"Msbu]0$J@>u6\o/@"pd`f7?B@3$j1\lb4XMpWG//;F^2!j"dn]MeGOTM\hD
%9+!=Y)m/``MF1\UIN/kcSbG,_L%l+Hg#qN_m"3UgUUQ1KYmA`QAO5Q<.(rag=1\0Ki1kC/#C;sXYX0>W#BY'OMdRF.U0R^`$aG9%
%&T/l>&sV%D_QPR5\5JQElAG^T5]/')ik$QQV?>4l1ei[B:9Jj3EQ(hP;_K7)ZIit2r)K2,0*lV1V\pVu#)c>gd5ZZAk:(:hPZY<l
%S%'oE?L>Db&=EWYp3/4e:th`dUUmiah`hO#>4L4`hQ9NpL'Xt2$`k7q0/@pE3VIh2R-lXR$_1T1;+CUP,N..(Uh?n"q8t3nnFo#^
%hg=_i)^/*RdH.jnZ-f=YX*FJpcASE`5M2+S+nd+q!#3eD]+"pW"]a4nShQgEHS"lu(]E&R`if1>FYn3J>#NJpDqnX$g$V1B[q:AF
%mQa_bEMLAXi^QXV(`^cZfDUX:($p3>JU?75@l>FB5snUb!-k;ibJZjOXoMjkG-(HO%>KsA^OIBRb$u2TX6/[AErA+6lU@@L1!C@*
%!)@,_!e@/lnBpnW."c1hP(I(4aqDZ[XMHZ7A.j9.TnjueM1n-N<>EmXPJJR&ois9u`LUkn,)@i&@7N3d2ck[#fe">O#8n.JdV)3A
%4<E?D:L:9@-a"*Z2J95.U6s/6DY?[^kN;h\DLN)Af=mA#h[qKF>@@2;YU_[0>:S8OYmXa_&;1oc0QAF*2[gk^3YD.bVd\4Iiipg!
%KHEa7'+&U0mmG/Z$@JMU`/"EidN^7#qW?h2:N#+\HaDKc*,a<,C;1KOKG1]<'II"(D*UV9:%<mk#!L=(T2#6b$<mcK`LNUVAAfrW
%LB*$gl2W+%KktC65b)ZK#`j**r<Q*!lAJDGBkC:P+SpER,J3`?niZ8ch<[m.@lPppoaItGMrqsa$p^%JYTlq\-@nW/%:0H1"8#.c
%?AqiCV\+uY&AQU`P27Q>2p&u-g1*Oi#cb'@*<5i`SGdo_QTs_$T7oHnLH]XWL*@%/+;GJaCpGl-@K_Le)H:^75J!@7%3l[.IZ7<6
%J-Ko@K5'OYGV-?a$I"tlRh<3DipQ'V&`Z]o:1-/K!/j?:$JsGBNr0c?_">s1f9B_R\mg"qTAmk`k@A%b%2T6-5Cj;^XH\f6-W:"*
%#I\9rWLpB`'-t<)ZK2?ee)^0dIQRN*<%F5)3h6dHXh'CThS=i-nu#q(r]"9V]@ABfHG&(=o(@2%BsJ;E%%5sj&I16rg?C\mBAl>m
%j40!0'!JjH]e43$psGpUP+t([5n=+]A`C&ZhW@?jJN`J#M*!&cg&k_%WIgk^miOM7[(")gL2](o)sVHtX'=2dlLaUT%FmOUbn%``
%^=;9a3ctW#WRU&8qOHGADr-<.Tf/iq*m$m928/?E5r0IAV1fm`.$gGCC(S`!VJH=tXT3iiIn_qRf46h_&D31kdu^DYkcaJ48'.4H
%YW^)2]P1&P?=`YuK:FQ.l+!SM4ocu^*Og.GDtH')ViJA$V+,`#@&64,f,C@2QP3de,Qo]%J_-Su\n;Efq.((JK0oY+'4hH1SDnfk
%dY#]u3)a:I4)-CR#npe[]7I9,S@?P,jJ^$I2Q:uTSG3rcI!JBFSSL?C(0hr4DgS_k0=?$$7'tQ5M7#KqO6o@Hr9MkhXk'Q:8)[=8
%Lft_Fi4b]eNU.:?CujH+jt1T$bJ,1iI7g/fctFf&[(e.6Ht5+\*,/%3JOduL1nj\faEcJK<A]2=pI(2b28ZNfRTIb5c]QLS\2<*R
%k!M_F:XME)f"%",CCHe^!):3bhchpEm`[Nc!2&k21uH@LSDR9:h8kjITrF(f*YE,s1okj72UkHDm0Zo&X#$7/+*P"Ib*shg8.N$s
%./r!S6foAoK=@P/A3A7WS3keNDF8QN9!bSTGiFf)FfIL-mBYQ*CoHq_0&:`Sqg;5GP)%pWbNiBDmg$KhQ7RHMT"Q60COT(0G;Bcl
%2;N:T.=u<jR*)*OI;;:6-(9n6fX5l>W?pbV/lr4Obs?OiS2?9'XLuHW,UZWpo3h8?g7Cb*LIIp,5;^9AA0!D96VaXBF%.T3C@bn3
%GL0tZG<mrXe8D='@]8D@>r1Y`m`BdA(qn-(?"EIF1qB.fAH$o*o'M7)CKb=uZKAoNJ%bZ7;n)5ECB50eO89Lg`WG,ih*tkW-'C_>
%Ko"_$lq52r%#L\dPt5G>[pAB0,#NM3+fbjob#l9:8CY"n1Q\Pq^'<pW'4X';UluIK'!i)K+7/6OU;)5I4[;r/;&"jH!N-cG21I/n
%M<l/#H5Q#^'-l3N<,E>co&][,CKY5Y=q3^#ihm2ie[b^&jZRuokd8]NU!qcCl)ljs0RAh>KUl8Pf$t1#?o'45K1/pFm+TJdLY/^"
%T9>?1KG3b?1>!j#P8PV4"FSkLCc.)*Rb=U:D&B&PTOMP\g5oD[Ska#+kHo*!Z\>N&K_'8<`SgW\b?`-oD`C3g%).e6hY0-&\CJt(
%LCJI9F`e:e=OH$#79,:F(_;nmG-Kb)[uLO`Eh]XiKW6b@;q^On0qj"gAK,A3YpW_(PmXkH`Xpm$+SU!F6p7""W26LTYp%mL5DHaS
%j3j&_7kPhXBPUm7Ep:YllH&k26q.\qG)mFc!j2<>,"kPSN3FoRan(09+h`*KP:!OYQi`H(mBWZQc.bcfTT?Ei@Z$i2lC_8>0H!Af
%h4Nt'8h;$cP8_;Tia\pFjXh4X<9-r>O1*W9,+"2"Vi&-*31A"1S!qH-Ui#d^DU:bLRK`e[9RbKsP<ekQ9qp>JMaiDchU<_^IF6\b
%8E39EHZ*+I82`6?BW_!R^ecR"Qh<^^I^kPi'-&k`'RXf1X2&JuHeOGnSV<qa%tp%WW,l9EeEG%3kJ!-r9AG3\9rLBSH$`a3n+?Fu
%HiEU5lfq7cA9nb+\.JuFk=,89q>0J<W>ihH+^;SBd5K^>[^*N"Ym>Y$'U['mA?4)oD.Mp8OU[6"3A?3&BUaBd5pd@f7cuMm%A0@!
%@#HZ=6/W)r,'KbP1`+2$i8,a.;.Ns<;h!$=cm%uZBCB,PjB.T5^jQ=V+):V"!,oa3O/7qAf&0c3B.fj:PaWIt!(qd?('OV_ff<Xc
%&c#f>X-fuX<TU\+9c>6$g`t:/^$RM-gN=upQNJ4X91_>2IH54OP#:XF/<B_,9gSs0'@uJ(MtQnc-Kb.$aQN"e8`&p"^@*EB`19`5
%%B0gFFaCuU3i"gdPjsMkAlIH+.)DDf6/86,HTK(FNfSc#W]!alKOPo(g*Q"10Ig7R*h?+5N"@G@n]ID?jon7=a+@0k(hSb)WL1[.
%M=GPX'Fs&d]2AtVeIkbJb@!sE4fIsA8<SV9mfHMUXb+LQ;O0@c<k;hF1EKuOFEAbJgr-5c3b>=$;ALN$lhEs_]Jj(qPt24Wa0EH;
%&dbY&2-NgHRbGqHElG5KTT1>kbtYij0:b6uN$l%m6^X?t-9-#Y]61'c@6d&FA9fU)*)BjI8n[g)OI)!E6F!JR^]e[M;EIE)68M-N
%?rEdc8A'_cQH7,khj/ZcR?H-p0fIo2q,^DSZ[C$E5NI>uIL7$NrF/O%VG(*+I\EPlV'm:_f_jG"*"r/F<,W6)k-q74])IC)DuFLM
%R[IpQTC;g7p:j+G(OrEiGlt5%57fbpTqjTf@WRSboTm7:NmFgfIegmJdLSsag;J[D?"C3Lg]+40C0>5aaVKe'8,"j+N*b@*FM1qj
%/G_IgphOuVl<aBL@B=\bV/,KX@rBguXiVhY2][5p#1R*nM\*hX2Zb5,)$O5Ij7_=7)hE\Dk)g?dhXFi7$^6O$/Jc88+UbY:/:QAh
%,?Z+u&_aNeP>?AOA`_jbE*>)1)dLBF#JI59An8%%r/)a;b@rJ@3q2r%o)'2ZDFPg9e*0W6q?`3hpGaECcVN8ajYA1P6Wn?8OfV@6
%#]4!$qWGr`Z2!W<nInTPrks]_/RX&UcM<+Wm"dVZE!i6NS\6U^c\,FrBCQBtFqCmN?9IAEZWeY)d4r0p09/EmX<eT;';Nt62o'gZ
%R8>fT+b0l8TWlM;p5<g+@sipp_ea)"%:ZdmFf!I</A'l24^DuDVYi&A<G<TRme-+6#5:^bM;Ah?b*U.EER(*3hd2oG9;+do@H2!7
%5nsX9k9P<HnG@XWS6t'.p#!XjEmQLL+/[ut/V!^$`'>reg;!E7Lq^G72>Z4m!Tj<U#ii59RgtPYe$@s[AjOi+@c8'7Ed.,)rc'S-
%8?U>u&JX$KH2%`?[t\8cf8>f$A%k>6Tq_C_5Oif*A.)`.Mi[Y'=:\#=Q'GOUJVORPI6JX^W5g8"&s05Y1egDkC^hFZK?FE%)LI[k
%`6l\9[Y+k5-]^?7V<0!-Hdsb0#0ut;N:.V6d6,Vpn&b%D(;L,L4)rH.n@e+b>gWrm#i@LVMX5?W7ei#-,7*2C>I/`]X]>0Z0cG_`
%TsZ5<^/#e7L)$b70?a@Q`\ao>i?cZo8QFV?78%bmY9>Z!:0qUfF+s--GbLsGNK]6*7e/^TpW34fLE4n0A+UT[N0QtHqZ`+j^=F/2
%r5_X\IE7PcIfhq+bWFY/K5%ggjX'#^J-geDb3=(c$3]]V0ZSf[YK>tg%P<2O'Jj47F\4Vd!dHnRcG4577tja__ZO#`ARK<ZlI&bO
%<-0kT#'q1L#h'Cg4`aS_pl\$\1uAf]PP"pBbh<UmJc#kJblC]_=0hd-0/W4*/HCZ;(]nBqB+M'hFtF]jmXbOaBtBouFoh-(Wu#ii
%osQ399f1TtTaR5^,eJb@3u37&@0DmU:Dqdf5eu/0KR\jZbnDA:@DY<$3c]oroI*Q-Y^NN\9GrR[<#`"a&4O<-07`%j&n8dGBVbE5
%@%*Gu@(*(,QsqK?\P.JFW"s$(d3Q]S;DLUB=B6aD0gir4'%D_/JI`C"QCrtZ!r+bI`^%eBPTE.%2X&kW+pQ\sB!t_V!:/QHhE2CY
%*)k[D2%TTgXOZ[JG-T8!grXFpU>iJtNc?m'rEMmL`.7t*2".gq)\)m\I5f"mE>C3l*3-@PM`_o!,ilZ%?=4FY%3%(fQS:;0)nYA*
%'cq:AY7j>PMXK/N@M!#,`'i$X8@gm&U)5iF_5S<n=sIm_>q7!)$pur2l5s[^K(0hB6e:;#<CdR:2(E^<V#d2'-pquS=lKTF<%%s>
%cg$j?Ymm>`RWluN;%@o`oLZ$DQ)`]AAVV..*[<1d&X[\IdLH&X+J;fo"OokMG:%8uD4H<AK6mSqJn4r-BZ$SAQuTZ^R(NW+EE<c7
%_9==YT@g]*e?r.H@q[XKfZr-A.I>n>Ttsu0-@&;.J3]h#o)0SI^!qmh*uP+:!!;`;Pp=jWg`3a"RH95FeVEpPL$T:he0T!*T_Y'G
%>f\)bACGB=AD%uQmmV`pX;980OiPR`Fsb4kirLAZ1CdNBUBVS)_%%W#c17sY8^k#7d]bdNkgKVc(5<n,iq:YC/uR>Es.n9Y'H;iL
%OGSsM;G.'"WMfhO.+9CN_$/UV:!j<?,?bD:&CF=ua@KNjY=da=b'VGnA7hT4FX&`!oV_a;3B^s[2GVj1SV1PXFkTq$BDW&4B]RLd
%OJ<+L7brZH+DaUfN$0Y@XLf66Cq1$SZ:./%7@<?'U<97=:90Vd1#:S<qp"_IPBVjU%[ac5[dbY%oTYH8)l&2Yc/\+nILaD&^QI\$
%#Ue8!YknU.gM;p8Du+\Z2_U1'qj?Up(73P6N)n[pKKQ(22nD\cdWacn5)6]QeaefE[X!_9<=pfLoW.VeLSgc!$BPg7+\X`b?l=.W
%Egg&`2<]^*_Q:7NeO>b-PT!gO#^m;e`'$e%2XF.]ggls!>LX(;P78PC_*nD9:_%Vl-*BQWJ?Q*G<qQ1F98]Qt-^*\T`uUAVJh>/%
%#9\IHCX&@aSO(-PkB"6AM("faik+q)eM1Vk)U]AGC$(%ZB[LTN8O"W,(Z-[u3upuA*TE^g](p6H^;Ap4mra6/"JK0)U":#l&WJ?@
%b1]WOBk`62"HTS:<H1`$\st7p,>MJLnq/<3i.EV4NuKS%>=/L-.N.ZoQr,[q<;D/6SJA*Y;@tu!-<*Qm3h]1T/Z5tV3pd26C3imh
%/e=IL(^BaT<'Lk'*M*\fJ/r5%ju3C(YQF94P!(-CF6T#Qquh_90-&Dj^fkFInY_E)Vd^#SPLZRT5U\W#[U)6;ORf=/7t!V:ju9Bn
%b54!+?Z)HBZqZ?G;\kjc[$C1I&A#s4#T;[@K%6rE7T2-YJ&Hr87\dn<;Y\BkkuA"Y*j.S.mW^*I"=QR;J.G%rOB(hP6=bkt-"r^Z
%OK@P.Cf*H4\eeKmf75%e`'@5D8XBe]*J/0/4P3L#fn9Vm@aA4&e56BkraMn]gugHU0<RXUs8%FE9ms"?-]@f\m<<=0=(pj?@fE>'
%I8`#:P<*L\\h>=`Jg6Muf-,7(@;?[HSI7K4!'7*W!_Li>EKqdW_kZY,AJ589W/CALIbZD`PJjOu6sJ(G+$:4FFE&0Jcn6RmXri=;
%XQ`Q-$]Kp>[t^>'/B>1a59s+L0X)c9lDbDPb$\f]DT/-`q9)(klfm\ooukNN$($f38,H%Mq_!tE.b^k85L@aP%2Ea58^O6=,rB.S
%Hc-Ht/[SZ7iK0/)78"'d:dEG9VC#9k.3Ybk*?#3SkV7b82<g4LXM26i,-e&:ZjtiDaMmnOc&K$*gR"h+i1sX>[\W#bA_H*5Q^aK@
%mS_rQKVHS4^puRAA#Ic0Nrf!$.'^5$T>Nd:@t19%gF:Wc?M&hbllpIa'UK;4d$d\imTDpr:eSTe;3-2nq<*i)%=-_2h3@5:(raKY
%VWCj:`#a0OC/u"*BBU"dWKpa+g"GME-95d;JLt]KCoi&qe&;NP2`CUsFlDH+H3[`3&W70KR-paX)\Yd25ke&[p_mFo=d#VWGOT[f
%O"PfE5NfN*Kferokdo:K#7O8K>%##N>M$Go8/R@To=kbSE2)eVH6n:K]#e*+gu^@+&SAekeW>_;*qb0K_WM;8$SacGp[;FDfrrR9
%P*<%U=1_eIfr!TjEoYV/]Ms\N..>-mT;^uo:5/HVc67Kdgh.MgoT"CFDlF7k$\VhA9aJ/q3or15:*-2Y)0O(LV?sP4#,O,tG@NMJ
%HuLo,ZR9C5cIuVf4-j=j#EN.brD;.PN3T"K=->Q832R@?77-Z]DO>qf\rJ+jgF*GJPd%IUW!U>8%I81=KLZnmNM'<<RggRF^%_2F
%/FTct`8O4ka<."V[f#=/=.>hlV#=&9%c=ub^7s:sl-7Rg[tXZ+R>EY3_B>^0q-lV-$2jiJlV&(IW9BNO&7pqV@DJ9$5O%>:6qo$o
%!/TnWr.#rl(qs0Y98Z*V]a47$X[Y3;7[KB6-C*-rLra$*W'Q3"2+;\D3>n3aQ<7,6FnS4^(^3cZQ:Ar_P;]"G;nWgC*FuK>Yp&CA
%f72Y%';$Dm2=YD?dr3(#]$$WC,0DuL4`!o[UM4gNX!et/jN:M3n69<d1[Chr.0n<AL1D!#V7=2I:!F[WCj4S=MXe*UU5U-[/*Go/
%:d0DIVY+Xj@\&CfW$,EtD0NSHgC,E6"qr=.lsjpW`Y)Si9:1[BO1O5X$msJ0de'.gh`:Zo(o_;,9rV5q+e$h6*YS1Y;Rh<Nnk<<u
%$'f#+flYDKE=eCp>AYYZ6n?534u9*(NRh=q.+WK%;ii=dBcjN2C^AY3O'>oYEU(WE,H$QL[(T3T3HaCGFl[ru7q:%hbfV[NXnq]a
%Ag&TKKu%0=0Gh`1Ct,7P:>0J^_?e?V1'YTghV;h1kjtnH=Ck<GQ-D\V:*^_Gr`i)o_R-[%CWP(lO#pY7DsGEC,H$QL[(T3T3HaCG
%Fl[t7daUENVbk_#0M8qQU7heU$^3Wu4U'?\MZgU=G8pF`#`CgBWer:^,SAMc30$SZ8m,<jCh..6;)MJi#>t([XW"T\o>?p58r)K'
%q'!>)lX_3><h@QUX6;*'[<WsL4h#Q><7IFN2:fL(XBSq`j%ZI9YNsBCI\k(hn+le>/*g!$C3g71fZOM0\f:P,5YATKm7#a8'GjgD
%>>9:NC^djam]/r\,2J7*pi`&>M-H]\rmKVgV0>Lg\BSU/JT,)[_?.AB2I+)!ck_AaQO\37Q#mj3R@9LGBl/":>V$if>LH!O\m`Zc
%,o\&a<B0bs)6f!4jlB_A\=r>%po?/^2(iBp/Go*@)p.rpNR/H<[5C.LMnf645Jc-EM''JG5MAoXj1^rl$'d.>/"]]5;ODbbl<YcD
%lWOT!k$A[;AC7d&Kt-V,EE5!;FHF'MF!lJP/]XsR]nMD:O;)3n9hCa@c@qc4\WpR$p4[%E)A)VYqobhY)A5]t_#%>YaAg(\<[Nb[
%"N0@mFpnQunS^,AVI=6crWRMqq7AqOqfqqR&r0S[8R-SQI]8stGYcK?Ii>qdPedm?f=O'7P;;o1p\U9%I+q4"s(9F3!$X'n>[Mja
%TU&CahB%+b@rP"(g@3EC#*/qGn)AsS#%QWJkH/(#.qA(LM2<kKK@-@3>14CSf^,XKb2hWgfUN_D6-H5r7"u)&';Emk20$?"Tfkkp
%@46X"LQFd(&]DMc?$loO3!"R;-inR<EcR-oU62hr7K*V"mMf:Zb<`:%+qa.]a2E^O1(,D:"uM6F1tfXV#'h"CU/X6>c43L-F`EhG
%\H.F^6C1!!EDWVp=A>12TBHsqm_MPJT*9^!AE'6fP1ipEcHqcfXG4hKTLY;JO\@E/<$D.aPrgZ/a=?91d`4BV#,R.c-*,HSB#WfL
%'PE@,?ku3@E\-boYu.B&5T:(,i.BibdOuf]%P@8*_)u]8"WhT1X#$pMOo;S4PRr?Ap?hMNgUHW9](Re,%tA.*ESCe<,<Wlj9Cbh^
%TT%q\K$52_6^Cuf6pMXl!$8,.\oh2]pstejI_#ZFPR`_Od`F!gGVAiC<*IR>,:!OFm\+lc*_8V<.*QM/M;Tkt/$B;I'qLRB9j%ZY
%$QV?IQ`H`t1#ZTFj'\&AhF*77\Zi$*BSe+b\XZ-W,dUiu`9hfe!^iB*&j+&-U8)j%&!B1(X5PD@8aBAf?&Ur4e&4Pt,@bld\5*[P
%R4%kJ:\Hp'2\(#g#u(A*VmsP,8`F];nJPY(<B%7\hrb]_+-jP<PZ'[[>b80->qP9Q;[W8AM>ut>`<GE7Yg3K5?=7&aLFMp36837\
%idbN@A/"6`7WE-*r)S8#'m-3tV)&p$ou2`+,FEpGD!)0ccD*/Op"H`COPD3.DV+\9r1F%=9M.;dO\t`S-6!4BdGP@<%57178IP#f
%"Ou-GFo;C.SZM!J0_j;YL!+&$+VGpTJ2k#Sg4t?f\a_t%,g*D[kaMDCkdHJ<hA30GKAL&12u#0f:[E7+%*7[.*-%'I"JaH[kIj'9
%;-V3$U`17p;=4aG)NHG+iOsL"XuG#h>\8am.ctAq1C`di3D4bFK2D`RXK4A?mZ<7&h"]umeX`?(/9/&cn9F8WSOW!GI64G><9`;S
%:U]m7)GiQLh-QeAe3S_IYC"TXO)0:Lm`NB7%YL"8HjkgjZRao';ZQ9+#4Z`U/<Rd\aH<Z[bVel&<K5i9FBd#4BTS;X-$H/_S3`j5
%U(@?'j/11k"@%9s4b1-T5fl5%3^"fM'0;UKB1=UF+EW3&<08sUE;F1^$%Cn$irgGqEXj,n#?G8/l^TUo'UQJ<VlR:I]^_jGOA-kP
%p!1<Js844"mBM`7.-QB<*oK!OSc'EiFb'W)r2:P&LEm"%Qj'`aP*ef<?jWLYL"0*:@-TFc^e5$p--K_WY]3ck8Z_J2dnmL5&qV#T
%71d>2/B%X)BLR-QT)`R^2gnG_"OaAsN/p3g8t-L[.^3Zg7:M]fARIWe5;]XF`9K_7#[reCSIEq/!X0.@0%Kh'p//*d;B'4K5c&3W
%J"T0f)gLFZdKh0bNDW?MSTkArF:!(8ZGhs$^^%i3<(^WqE0ADUeuX0+^McM?_CXPWZ!<DnpK!M/00]+3HVd`cGLP96PdA4]nkf5k
%Fa3EKpGu/nU?J1/.(16&X%XePKqu=,s$9D$b"POmM#Uj#MK^[rPrf]G.7^f\F-==?8`E>ZLGY8]J.XYY_3qGiQ@f^M/&+/<EM%fH
%(thlQ3P>cAW0!ir9j*l)Ra__>!9B+*3oh:#+,7=\$p`3.Ldr=5RBTRe5@+mqqoJp_Oh`El$<W.MmWkW);rn`TUC%QdfIbgi3'H*(
%0GcA5p0#[-$_[.?B/ul#=OA;\K;:[_`a6t^i$ed;;jb7)Q0EhNJY\X9ms+/h:'CL9#l#/HY`nG#@bjD[kaN'G?r1b="f/P81P"Sa
%TZU_(r.W-d"c9?&If@E:[NBe"+*e:gHd8J@E@H&BQ?+C6/@;U"WXr=nahrtsabrFq.#]lDTIC=CUI@Z'U=/Z&W+-9!lE2'M1iIo;
%[3^J70mQ.mpJS4_@>2^$Z3M"i5a&U)+>=-Z[#._$>K&>8+V@mF__0o.?+GJIJC7:Ld.bmgT`Lq@Q5D-3.<=(MR#mhS!QmZISKjIE
%FqdV@Oau-:5VP/o2Ipn<TVtF58+oN-A;E%M/Urg5f3ps'oK#9/;?p<c5(XjX4V:['8GQHcq;^rjUML6kD9cJ&`X\1nF9#=jn$SG*
%%q<=Wl)X1Heh:Z&gk<1EK"/$D5L0*;jL6f**>VBc7*?R9F6I)u322mG6@qUoW$'=++Y&MT+Bf:\;GRsW,A?uuj;Gp4R=5dt!+%Gm
%#d5oL%D55.>/S<'3@?"W2,PPW-LMPP,6b:'dEl35fHE.F<MKmJ#(99l?/i8'<3kJG%W69Z:dD[O."UqI3MK76f=[W"%?pm2Z=,!P
%[n'6o<Ug%m*B'83Zq6juU6gX6llo=2n0I[@nu(n1RgtAIE(4hETfskcbnh#?1[W%]MAUORq-H0])3E2k7rlI,9l`'$,k7<d;Xg#k
%e>)T[gUr!R-Cq>ho?CNgJ]D!Pl@bf:6,*Ui4)t!:ZpYLj/:kr;V]:UWU+kS?Bk0kcr(GnoAOO3$L[Lg`]AWqoUskL*3]kb"8EoVa
%3(4VhJ<VF=I6hM5MX,A;8s<23>B*+cm0$r&d/O5+?P"7ccEaQ3UG*)F_&+nL=.W<Fs5K5"FWrH&j@j%mj<)Abc+<\n4ar!/QPWC=
%5r:1#r:iYPn'eNeapY"+msnA[2CuOn&L6C5`=`#sIa)f^Y9XHqDa;oibk$`J+YQl.PD_do4\A^aI2.X5apOStHk-:,?/9h3Lt-$B
%,U[`"7C2gWAYNX$h:u]Zf^hjAZ=Ca$Mar;:\Pj5M*O17iJO;c)H`V"nCgHnIe^Y/mi3#`'l/T[MWd!$_mtcmLWm+TRm1PW[1TAWC
%oQ,IS]t'?Co*H9Z<!lUK_+7b)[0dMC@?)o(n-WiqSl"Al<gfk,3$_<e?o(*>kiT/XC6ZHGeKV7Gnq2i3_(gCX\Q+s7+@Nk+d3SYJ
%ZEWGrAb!sG0)%?UhGejj!%4YtRqhBorLDbCmHnJeZQBmp(iL0Is1A]V+YfISK9l4_U),Xl-o"@<UdY7uP`qtbf8K2CMuMGeB9Cj,
%:0O*&6Bmi/Vp14,AY[ktRH107/%2D<Z=W"T:7'_))XgSa\V*ktG<j)0BnN>;gCKHj0q`#nO$A2Bnco+X[28Qa.n5!okYsrcND$&/
%EY/L+ArK#k.mro/8K$Q^#3_R#JKftB,DN_AXGDeSk+:[8Mo;33Z78Wbk!S_'Y$#[CXKlMfU.J+KH+/JZQS",&DKWM1WV\;j?Z=A?
%ppE6ZiOP0?CWr`i"'n-6heR=@"uC0hn)3AV+5Q[?Ia2l2qt<Wq!m:Esga3HQZ]a?;M"rS1+,Zj_[UN^=)_,MUB-5)J6bkN!g5jU/
%\mCX]pM"[n'9'u&[#nb;>!S5>EZafl3Oa3Xg(9crQ+EjcWm,/B:7'_)C@>'f+dEBUPD;@]e)d'6mjD@(2DBQF3POtGfDLq<DjS!%
%-$+.[5!lj2_Y,m6LZso3;OFeS(kj;.<1X`N@H7jNI+a605%ZAgJUKSa*hl.X&#r2OLipKfJbcO"f7HeZTs6=m$nW3'$(1;s]$@(+
%,KN0PODom>d5$r;PBm"u7!+Z(pn6[M!V'IIWd5<?/IuAd],4<\g(VF1:"j[%h=7*Z?YOuK9()T#>sQ$kUV;DrZ<K<VFpn<qd55Gb
%(rR,#<"+OkjTpBS4h*dAmstK>U?p6,f!J(hI#^IF.1Vn.<6'fIjI>^f'[/oe%V>Spd"=-C@B.A,:0g/_<*CLXq2UTj^oH24kQGG&
%$\Y;X6#W=G>@H_]eZf^KF0W^uD0D3&C*jMb`%I^@?2o319fu4!ReS`0l#ld.a'86m>7">+-TP6ge?#3!M[7g[UHLLljmup(Sq$lT
%=tLAfI`edjc"/S%ckj=LBbg,O-Ss=%'#\Kaqt'G<-ji3Qchb!lZ2Qjke8j6JmW#._^!0BjALM!Xq`a.cB-cFNObCjFql'C?b>:OZ
%CP2Y$o:7[DSatBq,kpVm0HM^R-9WmPa?GGESMPCG,ZKe,a^*K@`3Bh5D!nY9m!2W;72b<0S_&I)]oSQ@S<:)(N[?c#n#EO*\SPFE
%EiZ5M:'EWmjA_5%[b%K$Vh2RZK"UDgA5'39%0PtDqbhN8_^`RB"U;NS_54.a-)9-4-#"!-K./ZrKW#MYanO&^<f'#eC5Gpph1k1_
%l^c*5hu1*SUkEK'XD>@_=o36?b8j>03ORqtP)m''W?nI.]Vh(.DakYf-b#d^EmUg<._1O8<D>/kY9:*^8>(@9'iM/#N3oafUQgBo
%J[,GN,g7CZZk<XAD#u7X;V.eGN3$7)&#C+_=[,:_79l0?,U]&qfoZ)6/kbSn85R(V.XOleD',.->dk!?Xp_75rjGu,.bSWX&MA!R
%)Ehoof%!DVhKmYs+(&<'i`sr:5f$2^Gi:^gUBbCWatIp+Pa9-;fnbXniN\.m*B7,dJ3fDbjoZ<D+Q&0EN'SL#,pa-*F^PhHlg4Pr
%_7M.>Z<6GHfcE6[N5]fc^4`EaM6g"h=sS\Cf&V5H#>dQ^6FollDGl#LrETZiqf8VU\<Q&q*dJ`+/V2!Ai)%D.Ui*sjD"7hoK?'))
%k8RWmVsbk&^,onP^J?2kS&gff)PIjgCa(`ELU6;$Z8r,K<5fQNii3KjpDEEOLm+PUK6cp+9&\!H[QAa"UfrHR%Y8d0835]V(K&A@
%G)9TpnU`>0"6GJ%%9!s,CB:U-*\caq6W=0CnD]Cq"6D.CJVtE4TIGrEE1OA'6(S3o%^D!U3D.XF9ZK7`APe0#j\hC:F>Qh9LCOdb
%Tfm*\BfLY2SO4@>_%go,B@PJa:rpud<ZRc6%m=B(/IH#dX-CCN=lT[.UoH`@<l'kV/ua`BS""q)/sPs?,u2VJ']s#D$2G"=lVN2N
%W4n$E[='P3Ci^ri/0[J'44$/*aG$Sr]T&>KbOStL+,P6hVEdV>3uD`Ni=YmkjL`_PF:>lGqte+LP)sK^^?(;>@qkO%=9S>=3N7a2
%RCj5];:%lUK[835:sJZ5%Z0j"W5`!n>CUj?VlO1fn^^KZWgKbprqZQ.D?"t4GO_"LR[oi84Xah?5g[`/P1niQboJ#]>5mMA:UfK]
%jUZ?6qnX[j73h^_dT?OO+-f\T$dCV5A$P7]T#Qpj\b(Z[QV3Z6T19*8NB#LD[f8+*CdM@>`YC8K=+/Vnbj&:ehG#N)'FSXm5(.6q
%.kr6;V.-K=0OK>o>0.P[_:kS`Dht#?P^H"k`>3RUEg<s8lLdWIAFmH630klZ*cp5*KmU#1MTc"=gujF?e-)tQ%G"S7EF?q;Q%7<,
%-D@M-0UZ"cn[GA5r<.l+Fb<&ejS69iE>d7"/oPX88iBIMKk"PiqWA.KAarjZi?oHZrJC4(>G1s:_r0p%m0GVY?F:W@bq3;KKV1I[
%C:uV<rW:T^kG"_VA+/-odYa#k&>u3[Y73@OZdQ\@$u8j,kET@lOlSmOL'jsmo['C<?LH<"!kES!b3)tM#,JB%.qdCEm1"j<l$A+@
%kBCpQ8d#$9YE,;5\51CG<0)9%^-$k)F!gkbp@>"d$8$j_rNil)p*:cO"RdC\^MfP4b<(jcHal?O)CC6,L)75pooIZh<[JUL(LIaR
%;R`Ais80GOs.]k[ZHeq7OT!Y6@T]^#Q]$Q!:sRnA#PuKSgn9aeV?Bb:gL6_(KeQW`D]CU#fo,Y+k.4BS^PX*9mh2"Q^h>926n"uM
%7P'Sn"Gi!E$[Fg*?Fo>jObis58l,kmU1(K,RMn^>Z4S%OEO*:5)Y9W;#N[IMk99u1A7_suN/UcH@!'J[ee')dXZAK"8NIs/!fs0-
%$[gJ8@NS_].BpVZ"U+<)B7,e'n<g]R5W4Qe`LA7OhSA_c3$4qX`#F%m.P!!p+(L5BC\Vf#UY&2TJZB.j:3ek!ioRt4K=_d[U7->+
%hQ[k.0=B<20@_GHk/46\\:%a+)d+Kj?P,TDk>F_2j7jCN\%^Q6(&Z/0d="QL^OH?(o#s8QdY28A!9Q^]U)d[$kW.R]]n(]?3VbfN
%?K?0!q+F;d'l#Zi/)j8]%`)WZJbY(DZ]Da)2"&.bn^]H#UPg9Si"Hc]!+m'']>,dj)=X%d-I9=IIjJ4ZSuTXT`^;/%2M4fA0JWY9
%I$1^ekZJ+9!k=)YWLZ88['*?)_<[;U5BtI]'&=:q2"e8@osGcX]rR!$'?g*4kQ5</a)9kgN_LTNjrn,U$Rh&J%K\C30ku+1$ilOm
%C/@<10nfc7F/8`Qk8FuX*d1=ZLoJ;5&P-Y%U>/'$!1Rp=2hV,ePI2)*i1T3?QqS.p^^bKH6$\l35loJKEsc5=&pOYBJ_<P!BF@'X
%7ZL[uW&67`o+*E2J/U/'^h.iR,A<\_D?TV%9t<k`C;\*oM)?-;[gs,k%^aa$1Jd(SfG*TW5ud4Pg]E/3OLe^K`ZEAC"Q-jjMGhm:
%#M55A3I6Y\DM1tu/D__a<G;no`0l@)66-006!6Ka%KW=h0l[\*bY[-jqMr&!dts_262.HH0a0:Q@\W'<'\scj@E`gE3RTZ.0au#a
%(MlG2Tsi\s*3DP.,DhtiAWO3^\e1`nY!kn(;t#r"SsdB,^a/2AaI6GR[.6eB-j[X3#gfq>n?\nfW-;aLVamAqOkbr7hO?Uo:lSsi
%pR$(04:FJY5U)$E]6KaT&1qN)JjYfH?d[gq5cBEOQ)No_T]k;oj"d5k8^O`QW_@WE_#STJ#!0o0`DMpk"#rSuNTA'5':Qd3Dd2Jm
%.B#V,8:(+&Njmm/`4q@lIr>;ep#epZZN]6nbFUH!nJB\:HZE5'\`.r-Q2.!#nR#"F!0mK&MuCY:ZCc3`G$<7t:<@P#E2[/mnPI%u
%iPFj?i5K*e1QM'pd]bN2Y2,*mX9oqhXFVbTFUP9*CdgGlM?a-?#\"Gm4],KV:a%2D5Qs:hMEP(cp5*6Y3Om0<;'8L4MLi@-J[H!V
%'OV_SF:#/R-63g%"!#QSBX"FY*2r-CT7nG@oT=bCZ7l8i))2m!NG3\V"GRJ1fa1+sN(39olR"uhA`'FCPd`J#8D.OK0[m?sD$NlM
%FsuXi@6j,UqX*n8gI_rWM,B`u*G82a,O>]UDI>0,mg/IWP;qFoR69Am9o,8MpBqPAf,/Ad&2.\[KeZF+]g*8q\>2<c+9[;pMi_R.
%TZ[[ta&R8r3_qh0'hl0]JT>4%dD`*k%ma)de[*W@HQmX/'GW\JqQ:5g>2kYnC1>QW$n,e4i+rI26,N2,BC*9a$-k#b1Wjf,ij%)h
%)#u%.24(hj70:47,oRL!ZfNsXFX$'K;`>6-fO^pN]PLG@42QRtgqp)TQK"VS1KU/2<pn?0JjdGC\Kp)MBcRKuFZAW)7tFu?:,o.s
%%b?_u6d#=h.KC`U:sgUC?5]Z&l&"57^7;7mn9F8WSL?<lkgrYpF[]HO--N&=f.#l,O$JYK=rPt4Bh^b%N3JGf>'VP]@Y50d@.udj
%<TiZ#!N@+FWacG>+Mc/*SQD,dKN8.V;=JSd7WQ$DE6oe`-otWi?6g.j&EgkAKirqe7@Y>;a>t:XAGreS^Q`+JGiTa\OMMOR](F/d
%IY*0m(Ck%B1bFN9qPZpPc:(oMOfUa[!tr^YU\+tkJ<W85-gLU)28<RV<o'7jr>PS2U.iXp6ZIqMM(pP&Y?L69be:#NcBog(5"n>%
%FW;TQi"2P89epP55ass)&4V'Z,<[?b'*84bl"Z8<<!6@Oc72Mu?<i4;aU?3omDIKXjJ%!P$][*[#s]=Q1$"1fU;VnODFHY>;<U@Q
%kFZYoJJ$\;q=Je.DQ7UE>itt'<M1hVI]$+I?RkA5?N,3HSVm7YML(GP5O*^T<)`7]$j4Rh[%&7r#FMkDN'_3J)@hc.i=pG.!45X"
%$o)D^**5_;:qZ#TK[^!U6%`,_ZuIV[*_7Kfcl0;:$!Qe&B[Nq^JuZ-b8W)g=&R)C&:jPLu*+:J`qO/uka//JQM->C[*Aoh*F]9?Y
%@!-"#/,!MF^RXT&54S!!oukNTBmfk[BC!uF[-n!_VP9W=p&k8`hb__/S^]du=X*0uHc5[\c*FN>9\MkRG"gTj4Y%F,:dp_D?AAM1
%#[QZ:rAlRRR%JkOT1*4Mj6%1$$NBnNk!n$Emd&n,Emj@q>L[]HZLDk3bO&#`GH(+;6Fl/=TN[qOYuC&W#D,#gn(Jh4!;#91rJbQ1
%Vd(H7O'*s'bsO+CZI2/YXC<si/KYGH>IA.'W`XuUH70t5$K\X$<NK8C^!e11#G/;_eV*a[QrdR3-12t3f<#Q?_+?-bCg"q]bL2_=
%?1.3,CYR06*F@$lG>O(B5Q#f<P<*MR,eX<Q5Ln_.e01\[QBL+@chTcinGW9ThbkK_e.&+GNPo8!]7\:-CV9umg;abB'hQRsOD`<t
%$j:TpDBr%SJSeJ$Qa)i1D/V9Wj,)>RE@uXQ&2n,nQhu]5R1^^Bb;+h5V!HX_Y*X"6Bt(\/q",(M'dBO;K(J!\:Xo"IVaC:frt)j[
%m^(,XH:Pa4\($1[KgIF2,fGG+VS(G2C.1rm#BhZ=DT2+Z+&]/Z?KU1m@H^FDAbh_d^lW@G/^2V;]a9<`3T!g6^`MPIJ(G$0?b@ad
%"8Et2&PGGBD<O$E&8kuKW7;FBp;rV*%.khh.hO5L/.QIaBUSQ2L8\qn@P@HJH*$NPX"'u=!f<`OkM$IGq=/Ui-a%7"'9C&?muOY`
%2HtJ`.,&O0r^f^kZk*S]1nI<M?OVZuk=C8D:!'&1LhNIa%V=/g\Me])oQ.sEc3?MK:`Uc&;F2OU6u#2QL+nihq2gCR"?4uu(t/gs
%8u4D!+^\3c/g'D<m%=n4pC(F;/V[U#KHUn,-YUGKet;ItS'o2n(N?<#G"'p^X1J'jDnLm%&EB5K1u[].^f0-%9Ri2$K]YUnoscK,
%eODqKhR\Egf8-u]/<n"6onN13+W2"qhJY'"<Kd=C:91$)9?Sdt`+dce\Tf(C&"o\3IG0cb\"YKi\SPFC\C8FRAg$%fO>*)1+*5%M
%Npqoc_IS7HeG[*m+JJ8pV>mXiNkr+d.$"[%!+4'*S0"3MHtRqY6JKqV\f)22a,GRkH#m+0oOQ.I<f&ue9!O>o$q!)'f>$*5/9:7s
%c4m'G:>3sn$X55f(;JYiC6):`:)u?;jJ2*blH#qLn#7Q#3\6^U4e4#6B[s;!1/+>Hg2?4K[r=ErOZ.U7,U_uf.D9UP"1NN3I<2Gh
%U(=WRA!K?h<ONEt4-<\d7EJak8I<r.=P%THZM*B\QTL^@Eb`^q,p.!-;bKk;Gu$#;hios_%k4TTEh@_"b,9'/WbR\GT7YS\,(]=,
%<_9\+M`do;NoK_nkkGEWA`?NCr1'P,`5VX$kF/\t<fDRHM"I3qnoKE-AR4S_S2<YK*B7Mob>JGek4Vj/CQ`H05k'8U4CMM3<-9g=
%Zh@D)g#=2\h?5\s6b_St?+nbJXZ-4Vn^[:[:,fii'^VZL1$+BXEqo0BBmZ!=XJ+a@rK[bN1lb9Mj'S#3HO#Pu7VHVM9T6Ij8M>SW
%5b0KD0CpA=4BX;sr('Xk/U(AERg6+5YqGP>VQa@<pGt`UbA+*,k'U@SD`+WG<drh(Yd3Jq1?7*=J<d/c+7HeW%;i;'^V]\"L<.5d
%[W`tL4E)$qAYHJcF6f-W?[[^%@.;FZNo,X5ao0^;m]-YVd-'6ZF4sq8<b(O!*:)gq$k/rF,hOMQ=is4fCRJ>LHL*1l)fmA\lSUY3
%m4Dj?Jg<6cm7g/$7*^K+,e91JYkEc]Ql-HergIrD>Umg]]((WtW^EZE**:B$@kRLQ.p*bqK95L[QsnH2<4_Wq^8SA>K/3#XjniLs
%o!nn2.9H!1':eJ^'`:`/(R$9B!V^n!:OWo[5O*^Td$%7C-R\h]M1R6kGDg\0M^MGW1@L*cq>5u"bE$iEF%!iS`C2>@?pqg;gbq?7
%'uR3e"`IOq?Va160aompL1g0n%8(=-<AWU(*?Q5Yo+CRBAe;@jM!-mP)+5saf#/uA,(&f`E\)_7ic8GDAqG(M2o9g'M#K:%3)ZsZ
%8^+i4q%lGaR%B_m4O?Vu.;Ga$oa)lDSkLG:.><oi"*;orMTt2?I3e8u880hH-"3$eUAKa/9^3f.R%Ij5@Kal2fO,QGTBHrF5mX4J
%fKd':3UJALl6s*:L6\kt(=_%qFPVNC=4UA*Ma(7d'DKY<kp+EZ,%_a,MJT+(PL<uYg@'P!5Oo/6BUPq(Z0:9;=N$+bi@t/i`FkB%
%+Msp"1&*5//$aiVN,@Y@4$;Br@V8O#,<KN3W$206mG$n&[r:/RFR<H7*ra#3ioKfh2F4X"fLt3PIrQ3_lm^q5"(tjAZNj$Ed8pl@
%\sh9ela5'>AYks)W3Z`4O[,L9S`0:f+mk.\>0]_dPWejc3\Ki,a`T="7bgMl/#P=8"Yk5?<^?HQ69g$"2j*'#q0*q<$2Q/;@;cEf
%&7[$`UrP43@C;QF#U78V'%o_W?mAV@i!&RA\E:ULPRrC[c0-%W(n#F8P>AFH]X;:icD.I7B3,V6LO1*1]u*"Zp5QEGGN.!LG\KW/
%M+:FM?!7^q&i!`:'J6Ij.[u_4M5Ym.&4/5c^^%iPMdYoR=14X`K[__KOs:%D?9F>q*fL?W1an$'m@rN[YnT.\_8O7>%g$7(EcFUF
%XV+NL@$(r$.YgC6i2B'4G,^o33pQ97.#g?pN+@k(V[e`;R=J!Jk=iOK'QTtEH0%=_@a'YE;JH"^^RW)IR9BAlN=N4'C)GX=f-eGE
%XOZPLQL7qLNRSX@!$9)^-OWjK>4-$MN'59P87%kuW?V'?MDcAG^*mPrEq$]Vd4K:Ei4WQunkK6'D"6p<m[q9D`CJ,G6geoB0UBG%
%NQ58\m<#famdB!cppe(eT9S+ii4%4A>>=aQRTmQqoEaciXM'q8hLuHE3HU'>-"I2$L0+J>Xq3p0D)uQrks7XL2BLSPYp)H:5_BQn
%:Ir#.5t`_cB;Lgr6('S8JgS!8;%T:OO+N^-pf0c0(lBJM1BbsXL?6d/9\ob+G6:YEU^3W4pbiY9pZQ,6_>=^1[ZPWj"*^hH7TV8*
%GjB3@1n/0elQUeM:?"tngMmj)MTWVdEZ?!,ZjWGPi(!3`<.Im`cp5Md"c*J6+?kUS4IE6C<J[Wlc2e:X$lHptOTgR!#5:NdTWTH*
%,teMY^^,T>AYmWY5l;a`."E5\c@ee6OE-Pp(XpNf\kj-I8k>6M:rB``[b[BS<f,l)a?AO*R#ll&<XKPE@ta%V>G7j\=pWT@n99:'
%_Hi94iW<j'R)L,RUE+-RLr$t/9I2*4jp6g]#"5tZoYWO4>&l5q82+hmnTi&U]M\7odO%AAAVtm(\X1H8>)ZdCMg3VRMT<DPq[.IF
%mIg37;08PrSkUU;+XVJ.,e\c)Fa'(*FX.([aSQ3(7U5T&UojTZpmXh;_134^71'djM.0/XTbs&!4)2EuF%""74_3,M3ii:.#%C'H
%$URr!6<%XJ8>HB3niSns3pO%n*N]c,0R.,.1Ra,J)DEWHR@#/"E'XN"Kc.m>!/d8a,)E0T@fT=9Ip?NSN!0'S--X5Ebj7gE;tH`Q
%7f`hs=dZ5<8&=&_859f;ckM5DO8sqQrc&9$SaWRilO["q*!AOVlaM)Noh$SAIUjFG$R"(N:sg1Y0d[I'P67CqoPr;J-]8Bs,J:r[
%O"leoQ2c(="-)FSqEK(lYl<Kf?L[\qm.ZP1^j77u;b8N`-C,=#K8-sO*\[R#cX=(((k\C/OR/bi"U,r\L>8NO_sklO<Z)V4!%d3n
%HnoAk$4Xc\1:j1K[ED]SI%ds5m"pB=%T_4E;:%q$&e1t3Hk;+b2;e\>Mm*El,jYQ%Nf&OEq8sj;J-9*[`89E)-WH)#<WnY0]Gq\u
%AYDX,$2DpX$;1BnH:G`^TQn?;2>HE-JS3fF#\(tlqYHp\V\!mg)IB%VWM:NLB"hfX_;.3`p*BIa@HZe>ofL['?Z<r-c,(YW])3D*
%[sfLH57gSgRo&he:q,&'Y#%%g%a_)l?A,`g>N]^QKH6Heb=BW&Ee4379&CZ0^*[A3=kGTb4JO<IU>NoUJ6*pEK\RAV#Mj$!I7bDC
%3;pRi"jt8TU7`g97T;`bS%5'j7Mm^-(`IKa"'mj*[jhe08::'JTRcMJ5m#@:_Y'f!;i*BsLn"KaZ9]]o\4BB1eBS)UM[\d@p%u64
%SNch4nk_Hqb<tp/,?.c^<?<M-(H#0(U!a?(4@jcUR+N<OL"0T%@aka:D[PuC`kj`1IKU.OoN$3,m.\Y2*Cl>,7;enD>JHW-Dt&#;
%CRl;!1$I4CBI=SqK9dLS6ER+"`MPV/I7.YFEbSM72';(g'oTB$/bH3mJa+\Tr<e5eS&Gkn&e0!-\Gu]P*AXVd;K88mhdc((mM!5K
%3[H]A_,,2(g""d_c+r=b(^5`a<"5830@KAe9EaLt;^I0-AFq:.Xht7@Kpu0@Rr^58%U)20/[YHN_qa_0/lNt9>i#LVkNnL["VZNU
%7\>O1pAOoXhlKsMPiMc<o9\4ok?T!&80jBNkoeic)X<5SCfK!8F>Zb>#Z#Xcl0U2nR"COA%''R8Q`HQWi,-0RnooEr5;ctJE3(u<
%\#H[Hju3ei!].6,8]t,WU;r6GG;_>@V8f$ImZ4j7W@_JN/LR+dU[Ik.e`@jCH]#l[+`(BqKhYaM[0jgf7:sT'<bat1YTspFX$V;T
%8>(Q*Zb[/)QaMHUfti!87:K'R#8^f0Pg0dl[h@d-#/JIs9u7Dn$X55f(;JYiEfX/d9ss^*E+5i\WV/O&chT0ChG2'O-+I=A#kb.<
%Q*4Cpd(k,L:#ge9]Ufjg/YTu3"Ah?4*BJo_0%]/OO(=P^DR2n#@Jnb%9Vg<Fmuo?t]KXOb-gb9G,qYIC<KI#^ltksu93p]nl3Q8J
%j7D?0SI0:".`rh)g)baro-C:5N='U%DBY"J4*9&`1^YfN@B^*Y&@A#O1iMK>!G10LAiC%G:dE;;`BW["7425UDRE%%M'jnB1grQn
%O5?>u<lW\"H(mn*_.@&uA]s)">@$Z:lFopI#Jsm=U&DkNSic2N`Y?QWd.L?3]ghbXc2m%qi9,J0h=lAIc>T]ZG3WX8a]2HBL;=s8
%>eJ,rg8GQ@7(F=!i`eJYeFd8dL^TT(2C(u@TqWBpT^-/;TL4S*HD_o(cf56h_A5rZ]\H+A7uiF3T/\)Dm@*.JeuRBXfSqMl2mqM=
%f(20F1EQPJ9TO+,]q=fhfX(3QL;ps&?h7JO^"k`:QOV.&LYf\lTX:XD0B.c?3:a4h`2GA(N?g%5i*>P.kbX!pA(KR8fTHp6+o7qN
%Z!9d(FH"q9nol\Te:R22WM`^b/to7'F;l\J,,U&08odo-'INFY0>#DKHt1*Y9g5(Mg9lSt'bl^hkHTWP*I>ZK@Zc.g]%Z\H+(&f4
%ij.tKbZmE6n>!^N^TpeJmrf'<,c`X(.N$#:VGdnY._>Fb\&MW*kf(gU^^qjgENV!"A*mdETrq+&^nIe"%>(,BVQ:C6V<Z!mU6Pt6
%O+\+Z!$X2I!1=ISLD#Cs/rNhsFj+3MJXnBSOa@.hFBS'cM$I$.7T9l;)@s3[1^:"ZE+$l8`MW[JnKOPP4AC'hnFSbdg*L$SM6-oM
%LNQ-IRPek^bp(TI>j[6)7NTGO]`>K"n5g(@.!p!A?,gG09@/@(gh@MmBdY^f.*@o/S=\<dTGde>46t@MjJ;b!\u6cWf55`CgtN5`
%>_Wk<PO)dsG=E3O&P8?`ZB)TS[gXSLo<&%op!+_aBM6D,LtK)%GSQ)n$sl<TmhEkCQSWJ9,U[GgVd6uB-GNUK(gl^<9'h+0>,=P>
%ZXRV:H7R4\E:$=`RcL9hWa+.re["i/:00NI)KKT6W?E@#Y>[e`%=(_YH.V<%*+-frnt8Z/3e2=;@CuZ:>iCd;p))m`..(<jUe.Wg
%`q9q-k@O4><\Pt2\^`1W#?iFYb+RM9&\HnV`8oaHCIq,L+g('6/mHo@h!/p8;bKk;3ORqCm<*0cW?q#4-1@=dL@RVnQ0ObW#)>Gn
%WNAKe2&KC!jTG@E<<D9GXc.!0(3pCf'7sEC,S:.,3-.X^8m-p%Nd9-fX"%nj8*5S1Nju/4@e8_VEiDEHd\2a;j3uT&@acLZl`J6%
%J/m,5M5$CO)9\A#6!&\&I9lb#g$E\j0!BjV4`"KWeQY2nHI^=`?XJ<BCt%jnK'%N6cH/O)q@)Krq8JA];TF<$8=#stpA\W[/@Z^O
%(kd`Jjj9;eWn436(hR7)Pn5Z:#<)*.0'kKR$li*2,_f20<feF;>C6b$#DXcN_<=2GFhr$]Jl>E78-7AbdS7ZP^f&**rWX(Q".Co?
%eK^F@MBH6+>XlL?fKX3s)Q0&?UC_^bZ&*c*54\N];muGtUlr?L4Zi1M)cn'"@/?mfhAB?8!p:di0Mf3Y>i$M(SO$Pt=k;lRBB)i>
%8>KEFeLD9Z0$lF(LX6&J75T=eBi5,Q!j7)o?kdU`Z&+%ee/acl*1E>SM&0gS*8^ZdE(J$IT!X5X&WJ&W?J2n];3HRBk(6S!Y(FUR
%;O1MYKNY>.+'Lp<+,JYq/Vg37l58u[RSuf!2?QkS%rd$V'o(0E2R\4s*3e/YD8`*-Cj!g.5c(ts;O&J;]h&?"5WjNq"Re=/+;*aJ
%d0XUhRrt[G@8rkQL>-p(lFp(p84ZHc%Db-Pg$$UV&6-2!0MBAK;XqmM/4+C56.3m&,%$X`pR.O*[,fNH4ts8V%&@1CAW`':I/P@m
%')TM8oReKl/9&ItHUMnJ3plKE?g!MQ%t^g`jg+QWB6Ur`JUW1NbZ$"*8k6VppSdQ?03'Ma6/_e4_t18dpm82a8_3gSro:ckJLHoo
%io.m1%faETLDY?\?T\SUef;I&iCiEjJ)pp)(sDsL?T2?Ds7l'_l+_]EJ,e8Qs*DETJ%*')4T#'62Nl=fs$(>q7tjmb68PTInDEpM
%=EJX\A'$-Vr'T)ZV9>UZ6\5:*^\kS@r;Z]LJ,]K0fDU3i9j@f2CoXb#BB9*mQiH)ajlp.Op$)MU^P4!'oPZCB0O.;"9GiRj2;+HR
%WTpNbNDk8BLSkJEm1naqdt^FJksf,u25<Q4KqcV8Yd%9V2).!@03,3F?A(m>N>ASQLQEfb*"bDQ[?7Odg^%b*.#L`t03oC_]M_*J
%>?h@ogLVCQM43KX)W9N\2j1%63K:s@L$@N$[D]fFR`A3sAR5$i,YMb,Q-El6ft4u/eLK67E>=LfU!t0Lrla$!^;\48rK/tp>N#KU
%=RudXfF^i:?keT28gkUG=G?RtF&>k1YT^>B4D)%F'X>fs',A>3O;B8f\DSfpS;5reCEN@4YB5)K7#jhs+BjI6i)lU0GA8%;gcSDn
%<G6Ys1Y]LPdckW"Y/GnC48]4^k0)2#E(3DFp8CLJc=oJi4lSNuo(ZqDRHOJ%bO^*11stJ4I[8R6%MFXEGk^_)ID\0So/j5UHT4?j
%`,%HP2#O$.YCGUS=On,!p_(Lj<l^q(s4dGoE?fqn#E=GnFG&qPQ5,>)(L:odGg#c#2_XA:pMtpB>!G8SM)*fqoDC+l5oY4s(cTD\
%JUl7;0iSiMod>-iOGti:brU_"Og>jfJok%&R)>33=mVD[PfT[G`0dknY`Y1XbfUi)bD9kqa@R)E\2&))4k(0"T`][<*d7sHMYJYm
%fW2G&@hjiAK99BWKFZ\?QmnCS*1G="k?t)@b5,H;K>)*K#d!JgJnF)&OVUsNGD$r%qi4ZnT9re,SL6mYd/-C/CqJ,rZM6/=fU['C
%/3AN!ej7<0pPe<O%CchbV[sR<&`K!9KRH.;aO+$k?Rah;R.p+4,As-A\404BArRVeK.SmaCu=4Aee^Es9HVqH\dq1!pMV0GSscIF
%RW,aqj[F<c*JrpsJTbi6"R^l%/q`D`aiEHH)/`p$=P2=:blg4oF,=Dq>4GJK1EUW?>0:Da$3]_D=i1emZ/Z%9.Q^0LV6&nFPrcW)
%d2E'"#8[Q6JX(g8<REU8Ds5j_4nG?Z;>UA_08c<C?miTU@V;iVcV%ej9fi%)"]5I1F*)QkP%_"K(sh;Z3So!\'?MSam3Ts[a<lf#
%5d@P'cY(TJCM5_B.#8'N;W8,`'YtX&M1-iV@grLFb?=0aI*<b5ls]Nc`Kt<T:->mQ&9>qN&A8l6nX6U,GiMB]-O.;R/g)GDb@"j_
%.MVhh,-?/jCGVl)P2ZunZa#S&bWs<\L5]=^TEUFcMhTYi;`G/X2GIMug_cPm9U:4U[j]RdeSn\Z88[!]i26doo&b4s=+T,W$"tBq
%Rl[LF;-`9\,`CG=-qPA0ij^@6iV]@rg6;7Gm-_+:>ii$&B^`qG2Y*/WD/c7)=Of+DCX9]0(_j$4jbZZYB3cp*HMRQ#\%^>uTbBce
%N'X]O0k=b1kUdY-SMFWuZ@YV?AL$"&_O,oQP8dLn\J?kVA%7J"M;9`$BS.7#CtQ/b.#2833R6'(cN)0[3WLqR"'2#D-5<CY^U-(J
%*5(lr=Z"8c:Ue%d&$jX5Hh43?)6jCOfu#$=LpEckjRYc9@U:T('0%FmP+*IYNpQk!#2.K>>$j653]igJ\Tns00]3Cj6E!4,^t*9l
%?Ui\4*AhrD)@KF[)sV&CCH"Fjd+4CM*b-rJ!2<f7^>l>>3e?cF"6!H,_9Wi=/khL^Yu9p8eekQTc@?1?&0nBi_u[f1T^85/[)E&R
%TcJXO7=Xct`W;,g[Zc=^3(fJ]LBH\Y!UK,E%q-Q80EsV=Eq].,-H-.[BJ@0l7)RNiWQ,p%l<Q>f5W==I6W!5.>&5f6%>t!S64@"q
%!AQ!J,8):=cCYBX;Jo/.<g+$qe,V-1[\4[ld$K$N"oA9r8&`@ImrK'Z8/=]JqP&ZURA4o;17o:\B>^aNV&">ccs@0f.QNnNA5k8(
%+u:Qu"o.=Rd:_:E#U1U@dB&SAJq?W$1Yc9K_Ha.qVl9O5Mq0'FS*.VfCn[l6RkqbB.!J**&ff_p3fK[6^9ZiJEP1s+H2`A6!o='m
%?N@aPrb-*?GW@Q5Nff@sK?#BqPnoFRL6hHA+\ugH@jsD!.P2S[g#l2Gcn$&CPY?&/a<gojn?(uTC#W)hdRmDQWhK=4geU5+X<n\k
%%Q^DBQ\jT'09$Uq:]i0Z"!^X`e)eNk0l;M;@PDBC8hbPqbfPU$gu9N/q1Q>=5+i3K?iXB0"(rX/:<,+i<(&gtJa7Rth\km8Wra(k
%,V3rTap"?d+724E/)uK20!*^k3NA:c/i9@TSC?OhaJ^0ORT!*!+Pq30%6=QUZ4^"8*qNC`YNG*h4Pop<-O*9RqDA\-?'uJ7U6\qn
%)5nO]5(YQl;*(8Ak9V#1EiM50@_Z;%IokDrE\(_EWfMRFj)A\Q]42HU:;>S7lo!^>@mCD+J<'t#adn%!U=oq;8n#q7%P'1G#s14f
%3NN:8GmIh<NR`Co-3>]:b$0T65pXmoiI#6CqW.oG6&"A-LGL'i(0Z1bM<"?0g-V-:p$!Jn8C!s3=3q,D7f!cQU;!7,o,H7s`Vg,!
%0/q00l@q\O.=Fq,J:sr"3eY3^-:o%^FPRSY=YMbN"W#?^=B#BZ)5IN`d%FG`/:-3\c]3394Fe(:naV1/&`O&)68VQ29@,#2+W9r;
%9m[5/TC+"K"uC!+3u:a*->^1k"?7jp>0"N$M>B.SI"/j:`'nVqO:7YoRp&;HAg;Bri[Qo2fC*f2lUtePWQQB%^Je"E6;^PDnjhO)
%Rqh5Z1nqLNWXoaMN_g?q9o(26imsp35b/aI%mVZ<<$9<:2m/<SOn^-CXpe`(J>sW[W\`E;M*"6`58^ds$!Qe&f[@`MW'e1YUptk-
%<`VbUh@Mch<$Of[CUUGeQeI3_.jS6mk28tc;1m(o&bK,*Cd!8.W$46-]s3$3=Xi<-P3-00WG(/m1/12!($u8&3PVDbh9"(i--^/4
%U/!S#qXmNq\Kj#K+>\qeAb^5dRWaGd$4'AjaS)bQU&2<9D__Ih./T7O&kdL.GKH.f?_:nmPBQ514j-:;MT:,tpGGt,V5eTn6\?Gp
%mr&iY:49Sn!@B+*D3$o0Gr!D=7X_aEUlj&7LrN-\&\0`U9,D$@U<O7VMDR/.25:29FA`&u,Z$iO.qe21Z>q@MSEnA#(5Y3EUue[)
%b_P9,9=3QUB_HQ>7$I+mbJKRgQGkMd]%l?9f#F>[6G+:>O3*(^=bI#E;0Poo*-Crs%"P;g?_\/e6aDsK%Xu^t;2F](kPUVQEMm7O
%Q#,18d%/02^M\b-ld58d)R_="5UR':.!c$p&jsNj#j]@]>_X06G]p,2),FdPnl#71+`%/og<9H6a\8[hbqb%7U^b;Sg@_br2XOP3
%)kS22V*af?.5)bA6qn23.`@tK&CGXZ50I3/GP#["6[b>FCP6"L<!Wre3q+s@\O<KL`,FrY07fgKm'T=Q9R"`@boGrj0ZXr&3TG23
%s$E"boJB'F:f-0_T'a]U*d[#bg^PZ]eKIB>N_jl`$Hd$Lf)^T(4"hFR)S3ME7njNBR=pY.;M7jaBoUL^@di#XOP"nC*lm:>G3C@9
%#Cf.iQLqL(s7u2mjsR<G^CuOC\*oB]B/Wt?1GIPMVZ'.b@Z6g2KIKU/(_17Q0dcb'3>nTM_=<,PO2_m`o,I.^IZ,t6_$fIs"+u-L
%J-\2V#?+_4-@?D[MD_jKHk8.87-n._18WE@l@b<:!3=K(6R3!?2eX?9pC%IL1`Bu>(!QBO;`-$C_j;b)fH(fH!/W\3ibI(phKT^+
%+Nu_5C#[V1_5CSeoG<YG_<><S11p1CW9@4q%OI'7@C.k#9Jakf"@OF=3Xj-/Y<mg5H5W0?X5D]H'bk.l=[cf<Zte,r]FCkGd*T-`
%D+IFU!j7G"_KF[XVoucu=MeW#@<01Jk&tAci>&&>aT_R?qgHpq_Cf?pc^O<_]gp4\&n9=1k>c1hN3qJ6=-,ZiH)@a!jJ7tAF@tA0
%=W6pCbH4g%4jf.lN5a!i[J>-L*6"@aB+!'4-Z.tqKe8WCMdL@E[E#6kViI9.o$R.lFl_&7pXG=LSK?%4b8>%a9(8QB>$"iN!s+V9
%Cg:PE$e36:4_^(Cp=acK[[2PM]TM&qghN,<"0M?#A^G:ZbsUMdj;.4`>YS+*Bk^l)EnRblj]7^0S6BrJaf-R.D6Hl2:+^`]/Xc's
%Q)=+<6A9_4LI&5=g"dfN<Kg/Q'I7l=8[;UnC$8V*dDF&rNCdc66P;+;N\d)j=is@GB;6P`?i[VV>4%ju,0Y``=!oDnf7a^V8`s^:
%:pu_02CLN)S\X$r,h;U>U6cO^JCe?u;qJT`q'+JXDoe6R5]*+1k"T-pd,V7;r;?(bod<Kl]`ei2jb#;EN@f1qq(iLfP\KpB2E\KC
%Fs%0n>e+A4X%HDbh2TdKGF9-O>KU:MdR2p_oo>h=Bq*;5"6%2@Kb&EnChSH&Te-[ekYsn+/06(NR[@4qDKXBth[na]9W;m=E]9/H
%;Kj?Bk$8Euq$fFS]#P8:YD0e/ZPo/b6l+86<i]d&`)Sc4L>j+HX]lQjof[bUYr<=\IOfmFe4f;2nW;,Se<aAT?OC<1`o:2_ehLkb
%(eB%r\UbAIi^-mAR4p95;`[J/bHV]to9sW9Ti_\ZP9<H>j]58W(6`e_#>&eZ(or'.)2:U^ME%I4j\hS.h,=)VNekWHgK$.>N+'+`
%17'[2K_3$q/=W"\8J3?T$)Gl'%8+a'QS0n0L=M[p`@4kAob/>68K@Y(,8ZP'p]:,82ckG@#=%L&hpdqK8IGK0iaC%u(]>#^p^klI
%.MK"q]"a4a\G766pudHcQPGi7+,i0](7r.a>K(P_io"/j.CtlRMFKH=S^sHEB4!MF:):=k=K.AV7lAboPlh5+UI:GBED7FG;/d'3
%MR3,j=&q7>A@[Ms&N_@p"\'n$#Vn*$IZU@V_\,m)'1Uh;E`e3KeM'uF9E77'G(qq/k#V&GAo8C)k_BR2,^F=G8jR*H3LgEIoFmce
%-[3XV@_asg37uc%Q#/pR&LVlp8Y\#FJWM[/l59um>#GH\$[#'j&t@8qUT*)HK%F(h[0'(J)<P,elB^*.4U.d?0dY#kH"Q]b@W=k"
%&.n%kXK$q@$cT^Lj^/1]7>Th9niXX"'4<B^ia&gd`3XCOGjB.9&Y>'MU"uK2ptN8rVsiNWIK.^&J,+Hd/*i&8*XO4`%&Z76Uk;t)
%)IYYKTJd&!3:o"<0Bgh4l,li<GRf)'>#n*b$UA@s?c<MtVkW]*i[f.cR1(3YZ6R4A?$o0"r?+1G=o:hKX15FIWe(3r.=GBI\lbq/
%aB^BIil/io^#jshf6\/\p*R_0lD#QCN9T:RVbo3P`TE<cR.PdT#Xc^`$MiV-YsCGg#a`=\CS@ZaPeIR3??3B<9sMPJ3PUup\pWE`
%M!*""rJQGXT']`pHRDMcRpG(di-j/F`P[cCjs%;,q`Ns;UE[4?o8q"E?$c'E=3H<,Peqi3jF;MjWPQ+e>esPJ@Ptu.GYY?dX)L`5
%S-=W(+M4`Ar00^9Lm4>&D>[e,lUsW"T[M_uLrt)7DG*7\H#6=l]j:4#&IEaH]L]?VJ/3_*ig&`,,-csJ6P2PdG$/WmrXjdt8Lu5!
%?VP"12/m>3EK3E8#:;$4-Y&a3<J]cs1tN)&hjY;6Z\jt%Fdf:^mnNaXd0s6b[^&qMZ%*B+A9u>##2.O*C#C2=gZK<]]C:K3!sshJ
%,k:HQA1nl^6mieoVF=Y<HFCN8JpQ*p04!-OpD2kF%&,lBO@4L3qVU/Qqi"q>U9Z7*K*1"Wj5#&]B&k/>V_gNG+dF8K[4a5tCUs@D
%Vcc)=hi?h$L&/:IP=>G)!j(B!hQnUK+JC$^3dB!Z7sJ$hTGNK`\sLU(5UAlief]d(&Qms.W$r`jGD.,t4tGoUcuH98/e_b?l8D`*
%Z6n24fF0mY#>-[KQ:s_CdZOYp`<WT@V/fs.^Jh]IU*oQ/6r+hN;NWC[6%u;)@d&Xr!^5Le.sg?a#F=L0H(6Vb&lHElTX&%gVN^B:
%8`*7r]URr`(H);2!nsfLrdB+X\%p5V"SJd^FP_l==E5!5;_AlkJ-6cON5C$_@Tu#^6Itj^H5#IL'S_6f%S!-/59Y8?R5.I,N)C+i
%jB-ndZ]5[$;?0foq0$1($#l;0(mO\57UZrQe.9EV!j7C-M'n17'Of%5)*L!7&[=#)((ceO:0ah>AXL:=/6a@%Gu1;hI2S_M__hEI
%A7BVrhPqKCbdh5$]pNGa;[$[![L\$K`t9Z621_\u>iR5u,5.t55W2PLY^tmZWL\diOkp6p68*7OkH;Tu$nciM/$ZNNba,8@(s3Ws
%fYtJA,Xa@l2.KN\dfs,hIa6=pZnLrol^OG)3cT8f0GLQ!o2[3(hSR^s!arNh@Ls\]h,AK+;pbchW2!\g#G9q\X'sXgq?\5<L:em$
%Ut(C(.(:=`#lKdK*7u)n`Jc<5AGN<M+9<CpBElJqY#Y7"DG(7i`Q-7(=ciLAKZaiM%^621)pWXm9EDPC."KI>-sZ=DW5JAdi)37]
%g@_a$COZC<<<.=\a&DC+[i57RGg+ni(*o5,]VT$UK%+f[mCndD*^V%`HEA=.%L#U/!tsGWHpNbsUduDT[LEMUG_a<YmrcM(7u"^d
%3;5X;\17njc9D0@Xs#irG:-!Fit"ia^bp@niZj1s$OUSG1ehP1[GQIl7>9-5rV[Q0q>2=#/ZtZa4)d;gngkicN!%*FLpP8LfUA@1
%=?epI]amK*!k`cNAT^d2oN6\dqLK*I`?^$Ec9d)4&G-AZKZH=W1Lq@Iats2F<j-<\8B`8*!\l4*cPmm@*9(/kFDjN]MLC:HR^%[*
%H&Km3dNNTUMaERt/^K*O1CQfU(ro>8YNC`9J-?L4'OrU/TH69Ep7m!OYQL@mqQ65&M7Dr2rQ&^o#^`CT>WL6'VJ(mpbIj*>Y7E1_
%0&le*KEWC0B9*fUq)V@ZPZ1IVM7!1#NjjH^cT_t9Ya]%p$XgG&2FkU/%6X5S`f1<^XjI4NK#]r-/`BRaO&8!S3?0=&&Y)4\]"4>-
%-f-IBSl1Yc(J`*^l7pHGJIa3mWG6i#KKWH,?0hoXH^+qpSDY5N,^@6I'e)Hk+Z,FAn8qYf2X#NX7eV`u=&G]r'@D\N+ge*]EQ(#Q
%Xh_RRb]%TncO(E>iV<9VYZc/l_'0!bGdL!!7Y3If/gNGRnN7>TjbZKh&H8@'\b_N"$u[(Xmkf&'6>7TK=AFI/$(`6%kS^N]4Am:=
%?C&C=-9OQ4L0)MM$\#8E?r+A4%2N"]KLT1bqX%O8Ku`LtF[FH.TO3>ESH/Qu)Prf+[59B(SN(4qKOI3p<_WGZQg>q[1g!6n)&?:D
%@07T^=;iQq=9U>f#Jd8\Rjd]lS;kGq/1'*g3^dd=`3Cr6X>)_$+gaq$-@&^3,12?":++&?j+BX-A7Fod\E!aU?jF$;h$$Ll@bNF;
%c9#=pq$'&LdE;p<O[S9i"j.nZ`8.t\WC52$]E=VQfu*FhNXW9DIj3J%p[`0LZPKEA_sT@E=4ua![6hqhA3.OAm]*;4<>H+hA?b,6
%j.37"^g,t4J5TIj8Nl1NYi'gF)G`'Z_!\QAki5EA[UV(Wb;=T_go-pjVehta,W*$OZA*>)EkBlProP?,9?l_]_j[QK<grK5S:#(r
%<t+Uc(A8DUc$/f$IS7)ZPIqRB$IX6$;5'WHlUE.k=C\?^YXB.5o]/j(!"r\X]nZT&.qCCiXk+81O`'SB"SO*iBZL`&ihu,qF_'aV
%P>&b&NTD]-fm9!SS8W-,\>eNF!@UV^2g*m\qDl<eNn[-)UU;>>c(VWURX*G(X"YSuO8]GK+WeR3`M"al),S\3AV;Og"SsL'Hg]ht
%Y*X\P\Amp<(5Y3EUp\8j7,])bT@[:I90KIS1s&=Y<GZ*eA]s)">@$Z:WkD'5k7V+Y45f+ibe[6Pm70T2bo1AEr#+:R3qtZ!^7Dih
%MHi58UbY8d/m>sM,#%4%XNYUXYVPs/1.jCB"<BtE8>(c(lPiaU?C#a3l/ka!`#a0O!`'Jq6Rs/l"3[gHee)bjBTeQ+fl^TD<QigW
%4'h8nC;*?c(MGcrs6rPA:7A@@Jas:-rR?4ud<rL2ip[udSF<6KhTsOD/N)E\\I=p$WK@PMG.Y-aeV*.U')_o(/Q!hN[Ee+W.I%]U
%drOY0Wb$Mpb3*6ehJ/2*'CCE!"HbNuK%F31S`d;(U.J+k<*S!qfs:D7<gS0']'iPkq4M7F%tAi$f/Ij0:O%<P:n.>5j*]b3YPAW-
%?b@mF%m*678@7F^#.UB[@QYot;3^FSGo63#R#<S[aE]IQjC%;qpmAI7OR`KJ\g63A!NARDG05SrK(-NjQ)Bg9LsR6T3-J8Y*3NJl
%-f*/OK5n+4QNg%%5hr-s-Kuf8K22>/#!TGf'b_`%3^m#5`&c'T=iHC5pfRk$FJ#2.GQ$^F=.PtnJGVP%(=4?)W%[,5lk,8)4i0G,
%3fQuD&Q=ldY*rWN0[e?IUr-XXDHGhU6?6^^qpg=3QgFJiiM[cE_8rV*_%*?[%:Vej>/GNcUhHP;YCRfZL!Bn<d%[7.%oL5QW11[N
%:)).?s3hGo2!-eV`cM\l-t'F%A1sa"822rmAs980=VCcm",b5d<a5Em[pI#E`2AGf';&Td:HL#bQW[!9I8H4te%qlT*B$9NPX.t>
%@Y%2Q/V!hQfsRT1Ak5B#'Ll</QbbF+k]7fSg.:R]-SsL*/E%-B,2p_I9%F3<onc%FSU%fN+^ES^mW>kQ)-46U.nmh;a5$*A._Ht*
%0F<4NFh_i5<nQ_hs&gS<P?q)i%/iK7aff?oXHY=oin;M8!G14`?O[<!,T-A3^NR-rS:)@d4)VHgfFtCF8qeR)kP9G)Oq,1D1C\&]
%PBO.p_M3#8r4(;M*iG$g3caN,8)*@ZO]+d,;b,\g8hsucF..LEic#()%B#,gLbDppe%EA;%DCr,QGd.4-`2E9bV"_N&8U"T?kM%$
%XK%XCd:`P;B^8AX8X=2ZeY4$4Z+RFrAdHulO'>oYCF[B(*2dh)[(T5r30iMEQ".CD?CKTgS"=VBe8OU$_')cXK.IFq&&pc8&h"jk
%PFRA*9q&12""GRMEsHcOkN&eq,FVT3#N,J8LH9[XW[o@9j$4cK@P,ke/Am88X5KeqT`B,]or:h!Z1kW^#h5PA:2M$W@?3G'W_-1F
%?#!JC^6,K9>_V3$W'4"&I90KgoQ]CJ5C\&TrJAusDh.sO\_r28(i6iG27ef%;?raI,RXd]rP+-`N'B;@$3C>YQnW0e<(npN_A2->
%;&BAgU>EjaIF`E63fXUtPlTA^d//FO)-L(-UAQ$E!OLoCH4Us"%q[,CdAMd'$/jDH[88/+9FFPbcu.=X7/I.\;@Y_q'e*]76!,iB
%[RI!63>;p:@B;Ct2!ab8:!<_7OUpB@o"<j-NSeUBfnj.ld-<<0e8*!P**OB&ctYiH=#!5qNqr?#@;;%;m-,&``Xl0]:SSE%?A0rV
%N!+[n!$sKDHD"Cbf69n_'oC8I%I53>'XZA/LlF5-`cGId2uYU$UVQp8M<db=$q!PtXWmP#c7%k8RA<5lhZ^%4@g,Ht`e_R9AJD,"
%0Rth[##/`;Ep8?[Mb]f-(tT3'g$\XO$;qS\a@f\WrW(+II-Bu\?I7:d[86AVijY7_#%d(h>G9#%f=lMQkiH"!/V8:;+If<d^Ln8>
%0V$I(_sNr0i(1("6Prrt)!&qS]_PGj=JsV>PiPRb4ZAje?'I"=PcEh72:u;THomi1%S>ukS:-5>A#V>gh_gW0=^RKP_a\*"S!3+e
%'?VC0>0/Lc2FSWlbMhIH3unrL.T#LiKUZ>Ah<OilHG&q:S_@[jRt&0PDqk:5oj.Kl3bKfeHk5Mp57fu!6*/VQ*LhD7Tsss=7gDA2
%*5DF1JY,CP/#Mt-,*/!@s/;N(=_POk*fEHWpGA1pf%rWM4I4^!?\A]7NBUD!N*dro(%#.#!=u>dAcpgu1&e969JrIa.r1Y?m[5s7
%,IJCX>M14pV:\m$T=)s."J]8$F>/G[e82BPIL')N`<l+q<ZB0W^l?^,KbF?UUL.(4=q%<OA%'3bn8n(51/G]=GLO&,8M/45Y$.K0
%&`tY1$7!gA#R\'g>2=)D,U:Q02Orkak3kZ?Dm`1q:HT:kXTf>"bTYECp?SpO'9%nL`+n`M5X4_U3e&ic*Dsim;')0p^n!,'j(C\5
%3'A]ij;4=pMl(l8hWsCV(f_,q?bD0Z@2jeT2)HmGD,Hd>$7M3A5s9Ir'44fYXDXQ<jZ\8KN'o9obHSgX+/@M39c8<mLn$*`QHLs^
%pNh$>mrrcQ8opENrf;B<m[X$h0=m%]p\9$ZRJ?[6b7f@S1_?1scdIn)rc?C7`lCks^1H:WmtCW-i;ndpm[MjaBfJB$?iPp)[EYjt
%nV+X.JEB_9hrk$L+,(T!A_qNYm%9RIMoPJ<<f:tjc1uNAn)keeEe*5>6NEH!m-k/$r%!HWg4':b6P?_uJIrc1:?(;ud*`Rl8"-k'
%^h$3?]>^r%1-kl/MVPUjR0pl\iW,dAr=b%p`3X;+GUZ2$i,]3P;K0.Y(b8mXg/7rg9Rk2*Ho34-7*L&^?'UPcl17`gC]*Y,K]Z_@
%GlK%]"QR.r)a&?(P:?HW?nAO5mKQf>#V1("O[/>@g#"NMUOrFbFAnZaeQRsmdtp@ico>-=;[jKWW;RQ4XNgN\`pVd&1pD&['dF!@
%dc65YlAV#r"sN)'E3)#i7%>,*gC=`.RuDH:Gj3IAX:n0A,am`d0Rerk`l^EMI=9.?hrtOPIUnN'4uCC=^O[hZAtEo)^p72Bnrh-l
%TS262jd`q$Fa?o+i/g_OLBdlS3SQ-A_pq&nfoZK%l^PD9h$;7:7^(m&&@t9.Pfo.s#O'T7j-]HSRt2rt6%EU^0'J_F!=J`=LT^G*
%=>&M?A9:B_;;rsR?NF,O]UELnc<c$_eB8!A2@pRuSVj'tT09HBmBr$'1f\q+C!rWC:(?0QX*8Wtoti&K9gIIVUC3Yf0Y7L#3sL*H
%MpB2^"gK21e8Cs#EeZ9A"t/O\8:8=V"#2aGF0GsJ=bAIe=Gqtg'4o=jFn.gLHElPLS>ddlN1(o,(^nfEg4ZV0r>Z#"e=\^nfS3Bj
%QV"fLR19rBN$bMid)L'!%G!u)i67:&m"@5uhZ@oY+G-DnL2o@H3!%'-bom]/+liU1_`S%Xk&0mYi"X)tgF'k.ld8_lRQsguY19VL
%VOi8J(kn`.+Y/.>qQZ-V^'Jbof-W-giH:s#>uY&TdM@cJ&(U#5q-"[dnbHp2?aXOo*@P,c@XgF?oRe'qZg[C.l\h;f3am-V/ek&l
%P:%]AhLa1hd1];t"18\<9KC>&UAkZPGqD7tbl:kr/d1i-E'UDK'3f7AcWZdt/b/S:fGFr&Ud5gSMTQQ*6?>UP5Rq&k(e19*oFAs3
%PRUbEl]oc'J_2#::hG&6hna"SD+9%7_\=D'!oZOF]JmK^b1$nE-hdV/"N,bVfd914)g&W=@Vr'5`8p*9&NV&4Y+W6NKe5!@;!><A
%A]k-L+]B5,nCWq+*eQ3j$224,Q[$19Agd.tAE8)qU]5DSLuPPu!Y;MNLlN4*UDU6F<m-!pk\pn=&/4VHd!R\o$go-ro#'XYTJZ_+
%Qc#Lea)sI)G35e:aRb)$6ffaj51h=&`*"/4>jS\0rA2cAf+SU?7o+R'G3Tl_OM)5GS:q$$+k[u+SjJeN[&sBbL^aEFi;7A_VO3(`
%&[TD8,-I'=R^hM1]a_pjZPV)*R#=/YNR2XmqkE.$?&U#^OK!n.)q#H*16\"rk*j3r:(&Ch5%-oTJ\q`3L3-:YOg@@"]'Tppe?r^P
%MK.E#lu[5Eh9fE(3D-Ip2P^hjh`S/%n`V2M6Yt,sKD+=(USl&P'9`duKe5NFj/l\1o+-KfmO$`f!o3297P!9-MPh7<8ZR^+,'kiX
%C>oqA@IFcuUh1<CiL`A?&''frqZ;WjU08k1.*>"4FD8^q_661_-#XV+>_lC@8*D1V(;tCdAn]$=TEgpB[Gkg*Au^O7e/jP6(.OLW
%,SXO2-NHT]3,?kL-eJ0q=J7er')6t7]l4fI15#W._61pbai6@^akiIMd0"62jq6fEq3GE6Y=o%CgnA]W]qQOK@;'m*9#0al6W=b$
%>"`.*=Ql-X,u*6^@!lA?:5?HU>e(9-kuLO`=1)U!Qibdff?Mogodq5'IC0`F-5-7i'%PSKB/(QE8QAf?b#q@^,U:U!'$&+TIn<&V
%>D&4%')EL,QV?na#?r[Ca-ItDm!peF%FR-N0RTfH2..Om[1j%K_K(*d>cO3'BH(HS-lire,m^m,"%O%Q'KrIpD@?O`;6;ZD*jENp
%5X0o0RR$M*k?&ekSM'M]J"NAbnqCQl`-qpRio:Ol^JDBU3eaS0msned<boC#4Wri^`L$FMIa)e5XAsIWFhc'c^M'&9)&ooj'kq@3
%S<Q%DdI@cUJG*Shl"[>Lc&%^g75[glm#sKS2!QNk0\8a#ZJuF=im_m=d*[X3Kl34<<Z%BC:DXX@IHQb*[4L%(OD>YtgMm%cWGTQn
%H9re`.n'Z!Jul;+Yob^1<L?oH,[4#iT1IMGI4Zj73aTP$OQser^9pVUeC<*=HEru(hL;AgIYF)ZXQGSTh`"Qa4*e^Z]TPsmJdXX!
%lOZ*j+E@E"'6QSG&Klb!S7q?1Y5,"/:*a:*)s(*PS$4)'Kcqc!DM<rUQ,IK7oGg#=+\\5(Pq,FAlfXo[&^\\!q7mU],un)(\C0`!
%6qPY6+^[s"M+,#?A@F$Z5b,NW:t1F`(T).sR?(.q06K0,9g/@`J8+<%WFnHBchT0clqW]bD(VG)\a6VHX/9N2@DkDJ;3'$G!c")o
%f8>e(9'HOa.g=9cBLIn)Cp-Hd`*W-0:5d%3Gg\op';FnJq5;K>.Vf)D%lD*ogN777b>la6QTJL@E%8OoV<?2ir>mAS-]@?@I/@pA
%?4S@5pA!+(-]RJ2e9j@N)U5&BX?C.5*aQ-Ndih@f]nu)=CJ$BB>pEg[5%s/'O['G&j@IZp\R(T@\RRGEEiVW<%m4QCWsQtCQ&\1f
%j]5B:!H4QCP*;1HfYWrt`nHb@?#9"TA(/b&(LBk>V^VWZiWh\AGLD2)8YgR'qkl&oN@rGG1OJ#qchTc9nGW9ThbY,tSVeSthC<T6
%6d].qUEA*@:*Yj^e<X+o?.1oEc6sqX&nWsjld^;!r5%a/[ot'N`1qeN>ki[n%#7Y`I+m@?TJefJQXQ&@Y2<9l>dj!4\^ff]VfR*^
%&:ICKMhaModlEp*nL'hoc7JrG':n"-YPBdCiGOe)9BHPSrnXHA2@P-bl:T&`iZQ\9[)![R1Wah]O33XYCqVjhA(ChDft*E:<hZk(
%Q9EEYNJLX!s/G[p2P8'cYI[OZk(YlUkU"8WE;5EunjZ1UdDSo2KS;STnj1P$6@;`WXVdLh;eGC(A"DY2XRWJt$]fj0h<1^%:&k%Z
%2<Q?iCVLOh_mf)qYA6%#H8@h?CSUl3EafHH0T`9&Jh\g6+mZpBlVm5,KJ".f=*A7B7_O@.6.lL"7d.!%O%bm)A8U/_/C[X03JkC(
%U/A>9L!;oWZU6KW>S#427#dWaQ[rE%^i!O#P20,,*q.`?e9(a[8PpuQOS&nte'dT62VfmGj?YITFqdt`mJ>.5YMp2u]-]j=K_dh;
%[7d.k,5++N53s&:omg1P?dFBsC_Ja2LPq11k1D3&]c2_h%*>HV8o]1q\stbaHJE6[Ba]:2.P*jsZ<J%\DcO+:2Q]ap''ifPKam"P
%pi3A#4jM]sASbf'`'3=,B5$6=TnQ&Oql'C?e(DMiL\af8nf3K*N7>7Wbtr>3q%-(%!`NEN?%`((RDp-XlH!MRlB]WQTIq1mg.:Re
%<h!Y/B4@_#;7OhS'hf^0B0+Hd-gg9NKam"Ppi3A#4\d"XFl_&7O1*Z>,H$R7UQ4^8SL300L`RGO0m30TRBVK3b$J2"E$Y48LV-WM
%poCgZP[O%Wb`_/A9A\H3Q.U/Z"BgFd-4aoE)YYE>\BP7_e0?85:YToECgHS@e+L_XG+@9+C<&j!ldUqn45NmthD[Mjjb''1'of8h
%[];&2MSgp:C.OO?J+.k:Jb&?N7_&l\+^ogZ,c+F;%i(l#31EK\93(f]Cku\Z;,paeWWtO.$oK].$<`)sab?2EUcBXm`ibYZ0h)I.
%m7u&3P%sSN#^^ITWi2gUfP7L8,?Zt8$HIKiF^E[$Fo=Xf\)-]Ia&gf`38*p>0X*WBqqkW$>t9%YL;"Ilcbc^%6%Z.o%[U7kgl5k+
%e(k:hG*i#d\E3&<0AUKeHC'#8gK_bb#H(WUAAG6V6Q*ND#I,s"Hnj&hjW4VYYNB@rITr@%LJpE>E606al@p^2.rf]N;%;JN]?</K
%Tuj6Y2d9N)Hl;T$0BdEo,@fE1[ot)I-_:XF`n=0rKB[Nep?QYe'+D[Ekj_m)j/8bq?O_jF3cCE$(b:4lKrGkun-tsM?3e+mK.eT3
%`IoI'#%*oLbK8GudO'UMCJ<qM9Sb!KYOC<n76,adS-o5Q7```6$OP,URD^HCX0<-.?QXD7IgX$EIm_Y\@^)ZVs45"Cf.eD$m(Y,#
%nOUij-OKKR:e7.jRdQoqKfsom]g#dnb,)n?cZ$BAD=BcL>"mZ.#MeY$h"XG[r2BL@;`B.Q&cA,4K*03-6E=HSW]sce,$n?#+)Pur
%d>!.22L$cTr0Hbn[9U5BgN.I4f&.?a'4%gHUSj'iV(I8EXK%g:L-^DIdnuCV_4B71+>HR.ZU$2d)B53V*DL>nXb7E&6(T<J5?&m3
%&EIdFk)k9r`+`QJO94Ds5(J_r=ZSfLM7K%>A1377pnDiV.d9GWg_3'N_(8PO)A(G8Bl^n>_bh$%i+u;2oHN#/.gG53VT$'6L1!Zc
%bpSE8*'MC()sg9([31$-*P"*l#G$uD\<*O=Pd+'1/M.5E<OTet+g9l/[KB,FY]<g9]KB*4KsAjR&S\'WCNDc@!pmp)"1SQf<\LX`
%5#sB<aBRt;Q[]-X0]o3XILQPtPq)78G\nTds8%bb^=*t;q8cmp4UQqYIJ\3arpAJ7+'nc1^PBS.B"5CB5W3(+N3cKRl;7$oGiJ)J
%.Yg!+"C/bQJne\3<$7.Pr9s?nD+BcMaR4J,q1j>@5Q[,m^L&%mKp<dS(DLtbG+]Qc_r<5T]Bks)e5DN7d(dcL0mA]"XDC@MF`pJ[
%QOa+?PuWKmHXut-1UkP9D3[?pkpDn+B`cSP%JZLPkS:lfYg@n(aXAkX\X9ZgS[at/jG[E)n0ijh+E,//N[IV5&+Y%VF?7m_9@KMX
%1%A_V^gL(2?A+3LI^$nZ."OH8,ZB%BU_:4pm@sIs"rQq,1MVCp8CqZS>*'0l=J,p74Utr,$5lLbg.^ko$q!<")k9%Z'qEt$Xo4)\
%Hg^5n4+$-5qX_;782SUXr2jlg)ES\c*)$=bggEF.:N;$aK[Tr8f%J3Q5lc190DIIJRn.M`!*bOe-LVEc<"jt*!ZOG/?./hmkb-)*
%&`g<Na7*#u=Dkc%L`;<<pn5Qj(1FHL_Bs7f_9HR*8BjGj+]s]-K1uZjl/c:hE<atg'&Rl351md#iK,2@[OaUSj[k&s3\EoO(=)E1
%6%%UlFR5BH0k)LO;\YkP3LNNkpFV`nk+u7$C5n>tN`lABP`OXXDQqt4$HXr;EO(1dKO_$NS01F;8QFQom1VptE#D/,l,b$oI*H5-
%[#!79b!GCIPe`9i=W\QZ)KDN.-Qmm@Y809=H$I0CAX27>_`@H`DIqqm'#fEef:BaL%Y=D[jWIK_ijJA!ODOS#mI%gr3K;[jl#nm(
%ps:,>9hP$c$Ep7Me`:>4&loC-'.ceJS[kgh#"$QYbZY!bK,6A/SUY`(o^kDda93pHQV2!_$RTus/m\]>E'S9^5Y*.Lf[ql6#g=]K
%.@7<!JBH:_;_F6J7<%l"0a/q_,,Q)/<Q%T-4E)?dUV_[<Xs.IW^^Pgk$CIuf4q>W+i&![@W(B*s95C&9+m\[UUXsO1iDiStRn1!R
%Nk_%nq*c"P3P2WF$[cM?)\At[HiYi'1%W=q4LhD/3!9`RP>,N1(tn>e$cL"l`<@&=_'Q-j"4PV$=H0P^":E(i:C6.lZD(TDZq+-F
%Aq;jkk>U`4,8)k>WHoX[-@f5eN5`d:M#^@C9@0IKbc)HTj"ZE;Pm"(:AgPO*O()baAE5rCO:FTC_SJP@1H%%BO@K?fB*/E3*$^9h
%J8S-:%r<<mnl*o."3[EYQ!bqNT:d.edfG^65nb7)5NL2dI\/-r]RXIS!i2pA6e-i,7jo[nb!QW>8K*+^ZY\`OfB?TBJpLEJEH'5C
%X8"2$mN:0=Kb&3uk![HWqbN/81eO1WGmQKTHTB%ZZ9cht=0];*'mQ&PdNPnFJ'K691QWq\L.<_*;M\K/R]Z@$KKasM?jcW\9KI+1
%`BN9T+g`l%0`=+I098e&GN+K-TP4TaJ_.0D3KGp?ED+]acMHZT)eHK>MHqWG"'Sm1#<uh4U]BG=BSe*o,To?>\AX$*?3V0Y?k[Y!
%0d1ZNDEbCCi>6F)LO_CR[N7TcR%kMT^bCFE-`1X3j0%Mfb[9-Qp1t^<,JdHaY7(q=']E_8#TRe'0"f6:Mf3g6i0TCScN++iP^j/5
%"D:OZa&+BiN$b8M7[l]b2\IPhpqcN15_UPc$t)?%P$_K"g=Wl/)T<tQ1m+\2pP75d\/6"7[>gE`DPV7pA9a0qL'o/7$V"]deP0bk
%mTjeml/'tIP.JPVZ6icq)\j4*=V(ZR;A@*'J7[1NZY2H;)P5ktMjQk)$^fs81?EKO2ujdTq%UWK7"QBi"k\Gg#(e!JDZPSfI,CZB
%HDCVoNO/_a=IM4IZ\oPcN!<iM@XB-/36pHY`C+YZ.o-HAM8b%.:-L7t*=@mY=^k76*9*=c7R!q)(BOEd22eaS>:?j\VAPQg?r,8$
%V5b<-oC.FBcSHGe3Bcb7;s?_4V<L,efdFXk`^a7]p1r&q0%GsNc,FVJ"MY7lT*Bak9lLgE>'c`emjq/'AdHqYI@'ee=KUSJ28#-4
%,em<'MsMi`^CuAnTFYfnDGtNb&$7W6*(Yu?D;m%MXX$3JlAi_nO#c^j.u/oc46OQ,,^KT+M&pUeQ-bt4AmjGJd7&A!\tXq0aeBk^
%_8sJJ/g6nZ4Ac0rKu:1:6g-\-hLR%dehX(>XK2ft!NAL.\T*buIHM18O?[8PFCY1d&$IpL4,IVU2nCQcAt80=W(Q,>TKAE!_dHHu
%.,s=Ub_Yi\$H[W9UV(VPk6YBaS;B]GlpRK(<Pj%42^51F5TJa`Z=X.CP\caA5*5A3mI%h=3DjF`c6o;\g,XG.:X'P?Sh4Eod&-07
%W5gW%@qZ/_^@j_F(r]kg1l=sA:Z7\[GK;ac6%HMoJ3X*4HW+BlYd)^jM8'q+4Z7%mmh&96;7I%P.2D2MPU?9NE.lBs.TXe+]?8Tm
%1)aIfK!MRLDtIKG*'?fISN\`@`Fe0cQY4[+4Mq1i6*q*Hf(TMl><]?nLe#1"M7;A"s#TgDU9DA$o)bjhB0"BR-ndo7<D:1]kM,oN
%eOZDRpR@%f]J4l$&nI3i7K`D>l$:,"'4D"s"dE%V]EaUocFd8qb1/R!pZ`cGC[CaMk/(qi=s`QmpR8"T6=6#D@NEULK:[$;31ebK
%e=:qrj0CE81";sUcB__ub1$3V[8X912d[-Zpf*bZBZGfp_H3Nm?dRF#3Aotp4O6>-A7Q)C<e:&>7#4;KN15*09n>\(<"i#`j'q6k
%FpXC081ciD]hH(+K-9&4e<$ahNuK5PK6cJob4aKDG[cm+`\F`<fpM[Sl?nRim7k"_!cVVK]rC_>TWds.WkH+@FgT<.HUJ$(ZpcK1
%L+nL;Ka^(`ZkDA[i](*5CI>g=E%\4)kTK[0,/OeYb9Dif2BrYsHeuF_-9%V3QOojGFX4"Rkk03N\CX'42QM;SR.hH\I!JZNSSL??
%c<DrQCO7f=:URZ]9NoDcp:8t-Ds^+*r#+&A:?I-C-cr&An`[XZSp5T+$n]$;]9[C";Tl68I`W'\Vb<\=OB>K8rFfF_$F$hEB+-XC
%m>:Qho2C?<aa5p5=j89s+/jd<NOcN4oo$i6a#N5iS;Qc?nY)1LX;$$Q46K4nY:uX?!YkT4Hr!UeYqgh""allEU\J0@fD-:!?f"GI
%EQJ$<n<pTG"^cR%C(m>/$>5,<.;7TA$(G0Ees;CFdfk]XTahBOVs@?69qF6FF[:B0]bV?]/1nga+*S_1qCqcje!f3$BA)E(Xr?mQ
%,FpK+WkEJ]LH$dI8T'"79Rgu\]asW,_P6F3DLBFPh><.7n#BVS//UtPi9S7uE4Ud4$+1hq.oS>&,pZ>R,%h^<'`,-%Uu0ZO4<+]L
%>[=]_%^JXQ2V"KN=L@+,2:9mI*XL##dEN*BODP7D$B,uG5j)Clmfh%OCN2p*KkMW\[])7LN$ndMBY&h]7.DLSr6QP)giY?>/4M+X
%k^C1lDng[*q2/+[YL@1d"iIhG&q8,PiOiAJr.0OKBV_<J;Nr&o_2h)hZ/?/f3fl]MXmCPQP(=oqb2T/nV;F]96/)U[/>G'MetGJW
%!YNN69^mn[2@+gBD<)n<\W:30"-$,##P;FZS3pB>@!f!tb?5h]CS;OG83&Y'=;#pq+^3pR_kB;qFf5Z2VN$>[)Qc#(kdM?Ds(4UG
%KVSoG:P5I6f^D=67Bg`mFTcKr">u*l/;P<u@qXB,$3C4+I*s&eX>TEtQK&\,^hR*W42b.6%Pn7T=ng/jK.QfKor8OT"K@@:"T;J/
%cq<adTlEr%negM:?1Z"mr5<!KoA8VMkCLG_%La[Gn#`be=\fJ"9%uS_>\=.?PG(1[H2<VZC@Oc/4p.h7`L?L<X/`a]C,%2:bIAs`
%!b!+Gs'F<PoHjp<UHq9(4pGb;fQUul`$W"GRT.RE>h%puL,iVje;7*O:7ZWFCRmM+lGP4<`,aCoa(SB8M@n0-oI-/]^>6jm)Hpa-
%Gtl@Gc`p0rkf"l^Pq=H*<JJ0D&8WA^o\]P0>&LRecoQjif%VUGX:6>EBLW?-);BPY7:QpXR.F<Pbr@T@e;UlFeu9ObB"Y!Q]P`*7
%RKqmqe1sKT'2e@S<MkYn3Rp6ol*C`dLnFo1>pb#hpR]uu-Jb"hFc&(D$ktRrd,&(i(TK.oQ7N/eK(nLPT7-FD3K9P:'AU&$O2^;T
%+uFC,0PV"0Xi?hgNtO$\%*hoNI%ZdR87TO8p[+]0XKS.ogMPflq$XjIn5A.kq24t_7uj0Ne*f\H#7E8t`[h",mRK[QGCc&cDp[h#
%[spp>=/4,-4?t%,-@:PoafZq[+J]p.5=@>"W=4Hc%mM89#a;cg\M9UjE?oYU/=%tV]'+Hl*"O`KT_fnDpfj.#1+GT,JQtkG.aJ/f
%d[`:?Oe63O3ghtEbKM`a"V4DCA4C1%/40($JJ$V1]iNH,553j!]]ZF3XaN,Wp+GCM?HnXbNEh;B?@\$5$>$-af((Y4=!qh7f'pca
%09FOCnq`mbmLWSRo^,[+>J6[p<s0h-$OkGmDmXjh:'*$['so]>'7rs=A$\DPiRE^.*M$)m+[H9;hBOK![1f:b:5E;A1[=jAOGKRs
%.t)8"((:E["M&iSME;b#Zaj[+JYJhL[B[FO:i[lRN1barX_W=sn2(/$H!R][Dj1U!M(2`m^C+3[QcgMQ)]*(UGkfN;@!Ha,4KI.(
%=eHb?)K7_<CIS/.X>:u/L1g)@n[`u^!UOq?3I*!44[-0(D3qXA)T_20oca@`WbGm_d$]^Gj[]aqONpqt)$jnWra+!9G5FRV-7)'h
%I[W#d:lC9n]DoSOR5Y`3=bF^(abJ2HG=We4VY/cQhch6('iD`AJ#gR+k?kp7$X^rR4f7rJbNjZ1rcbF3ioef7Fls&))DnQdS9Gj;
%6KpV7Z$PkRM;Ni35]Ad\DiWb'>*Sfh#jQmlU/k-\n&o_i'9*fr=ts`0%XlL@/3<'D3H^b^l(Qt3OgV3enEG%s8?g=4-No#oB[&TV
%p]cpTYY>W^;+af_psdGrcirE_a4aa8FBMEn?F-VuVe'.XYseu-hg6i<9B-B.C6usH6a1i0Q]8PsgD3:mb`rXbOi,]beG>7SUn`iA
%m$c4^g/c9[p^lA#oqRTq"(uk!/`mN])ls1<)!d?R@)Ui36K96oe4j2'l%8</L9+/Vg%OX\4JmN*6+qm4bcb-X4U8:]1&5,CMN/@d
%;KG:X26'7)DFFa-<7Nra[TI'UPHY]I^PAeGiXo!Dh5eYiMmred*cshL4jd:G(I_.:YC])G)pAPO<MbQj_[).HfH8EP!V#8Y%7AF]
%]>he9B8i\lm*U9jWYpIOgIu)2MfE%om2t@q-O;*B/*(Nqm0=YE'^i#_O2;'%4Qt$s99j-!99$dbgQ+BZB,%N:*6;L)\H1GoM9^nE
%gPfL#V1AKe>Q5.7a-P/DKj6j7D\LuO,WOq3dC!\<)Daj%Y3L*`EJok?=7^8-F=l[q`E&ugVDhZEhEpA3X;310M!@!j*\uFTs$c8X
%hNcGp#q(*_=E4^.\mfL:`O"u5OCQBMVi`skW\R1=NAPm:[P8B+"HoWMDA[9n\<2p_i5"[`=2ObW&dNaSd!3j$2[M8o/pCWEH*0O-
%>"'+^N/.qCE'^RcBe$B6ef.maN2KM9dC\"]fJheZGb?+!0EIjaJ+?!3$ck04?UsgGX4E)'P:(!L7<h;7/nLgB9,&>e)/rnNYRb4R
%;+=>"@`@q9^LrN=$jUcbPZ6,Rc_S%6(S5X5kSR3`5J#(6?JH3AM;r*X]C8\CUV/>6rOECWn[f#;'$o4W"k=t>n#E@T'es-8fe-%X
%K>#PNH3o,3r?rW>UNn=%q:N=I.-Tus#9jMl(#G6LBODbq/,koBKHMtqQCSH:A_b98Rj8"8Lul4bVMPa?jf3j0$5iRA2%<+DLmfAI
%SL:?RQU!;h&LQOJ6d=+W'4oCFRR#Hk"%f&@Q?_7B'J@0+(3V<4Q>$ls]qk>7gg,5/'?hejm7"Phb9i<V!jWgchF7&UW+%dJ`T4f:
%.i55R:Sb:HHlN1m.l)sPB4SX7VLl%O(d!Nh'4.u52I_LG^m^/r":=`4(*)fGbg=@[=ZKLKe8>GIknAS>:9Y,%m(<iu'AtE2Ut-ZU
%MQ3^e8-23e/dShqO@f:Adh6V#87S/$5W;6Unba[6/fTsV&'j6h_e(.>Z4,uLOLZR98-E=N#']V";.?m50*,Qj&1!9mKiUGH>"Lg^
%r%eXtB^qd<j"KY:?P)_-"X#7t22KeNJV(0Ii$a^f*_O^DRX]SpHQKi"Xlfe8n1N\;J>l*/jk3o9_!Wh&L_DKj@d]Y6@f)j]_aMaB
%W4C[)+ngT,g^*,OA@5'9EB`Bd!')i<X[(T-[I]2EYqZQnW&BX4Or)dcmTiq:hC5pYKcBG[MYmobPc*=snHctm?>H<VYAhc33_e/E
%q!OWdCu@9r@X%k`Ef2X`\`7+D+qq3sV4;00O)Pu$p7*u3J1K^#,iu"\RHc=B7)m]R))/!!epDME0oaHV#f[iO\--HOc)3,8PXbGt
%\3<=U^(BBQap`;qG`-b^hsJ@t0,Xka!sCe=5EH2k1hmpA/4R'hiV=V^ed\,q(^6CFj;<-d$4BnL\NVeg=hj^&'^?_JMF##OE&8^f
%-"Wtu?bC9OE>HL[7bU=Oc9fMT`0RKQ98YI"44j4tX439C^VQ_+%?>94!8oDa!3mQFT`Z$L!m@Gi->3I,G_HeNCB8EGnk?uA*LL5&
%o`rq=Z`$pgpk;-<ilD94LdPen6D;_Q'CpTl^ilUUl0*$qBnK,86\D#LMBPGn;K0R<"O,d/9Z./q]ceedI7$Qgi,Z\j7Aj?,P;5dn
%,R'sfdRE/'+uY?WelaE.E,h#H!RhfrWCp5C8o5!OIA"[i@3%8/6,>cLbF3D<B^pLjOV4N^N%`3,KeLW=bHctP'D\5[I!2\I=cr.Z
%e@.+g`#G`G&hTc.m\XfD!M:Oq*d&lZ&q^NQ6#a\AChN9U!&R(Dq#sR7:6.F)bU]Tmg"Cs%M9lidJnRHYOR:Cl!dWj@HXM*Z4;3H+
%rIG$u,=NIMq6e.s.dM1!S'U@]L>39^QrBhN'\Cn>`)K]n"M7un*i/o0')2Q5MTYWMZ;*NaqA@sNLMI4:'K'###,VC)OUP9jRRT$d
%Ec+5N0T*+='b_#^S`lNJBqY6idHF_=nSkl"2sX,A#T4e>D+Q%ZGX\J[8A'Buk9&L8Kb&5+cNKh8".lD:>qt?lU8ElcasN$m*+P2;
%)VHrUKH"F#pduKqUa'cH_:"0]0"I$;2kbnW9;V*:Ca1bmn,Xn2<c0`pC!UI3^iY1O;c)*!:5r)bAIChkZDV@uM8Wl@)'1"?]oCj,
%AWoWf=o&R$7G2sjfl/?mkM,@:m*0:MQq+3HfiVn!/9kA2&&%q=h:Kcg&sWZ9NYfLL30UV=cuD:g=%+\:Ek]fEQ]!-sBX]5'a'7S:
%q*6hiab[3I7(7Mg,h8atA'OM0;&G9PKOChbT[Ai$g<tNT9ljnhWO9@Xm&ERLKD"Xf%jX,6[;:-u#spO@gG^;M/=ds.%%Nh[r0a4Z
%ff^lF321/l5Z(tt!OQ^Bd>mShn$I:j8t'=P"hE??JS@Dp'0$;,!M[&Yds%"?Dr=T^@lV*%n>,1DV7qQ(KLl4DSu'.DcK(t(T?t5a
%;LmZgHCn2;mfX.A[29PanG]MD!@aheM+b,_dWo[<J5^gBhN1.-qM$8bG&!(-lc<%%+Yj6g?4o"B3"uk[+[F_N5-S5(mmNQ0q.5BW
%SP#tjDa\=DJqf4;?j[LGhV4kL@nUH<];4=4$S$+k+_:F$eNV9_0GKPZ:>ZM.o)&"p7Ql)J6!EiSQTDh>WFoQ<0MO\lp$<LeFad(K
%]+^f,l&'-51<M,A/R%'fKVG3&,`%a?V)FXgJA^/u\5Dar"?Helk++oJ>o(h^IQPsh[--tn+U$[B67_@m<l=:io2K\4FZ=5=rLu%8
%1!]UcVT(^LGUC5$IfYeQPBqAO^&<TA$HkMtgM_L&\Q;"fg2f?t)3.E1i".r1rcD;L9SY=/j@sX)1n0^=h/KCZdEK&%!pCeg(b'RU
%H<",gZ8FNb%7tp)]r&1q+c]fiagDV4*/<kPo_3^W-tnh0f8P!9@Et3`GA5<?VCjuL'5sNO]tO6dF<t3p(e&`O\ps"^Vs)!"R54U?
%^<Y?XKeMWTr1(?;-XR-nCo$5Tg-"$)2F<XgiM[JjhpJL#<i^egKY@d\!q#&NH?F6G;[:3`W$,kNCm>^4_D`jZZkS9tiAuF&BuoTs
%RcIf<he"r&)_2goSM,@OLZ]!VX_g?]EUu8,3epWWIXlJVQ<_XLl.GW[^<P!'&,3D`5,)<oX(R<Q65QIiE2^m%(6&?CWL=508g[UV
%1KiDi"t?hUVH3*D:oEC>UA]YiE>2\N?#*[9>KqN&M+L"eblZTqX,/BS%`2Ln+lJb]_6`T6A.\-Wlr#PGS;G7CH$M!-_XX[oM01q;
%RJ^Meq2j"aW*#;XS?;D;04._ni\^?ZYpqlK]7&eH=jjW"cu.t;#P.eeT7e=[6$Hh)Ubq`6<EgZB"#;XsUG#3,$=O40U/Xea-DF:A
%*2nCI(>r<8U)kFD9ti+NJ9M/Phtl#^D%=i;@$+iU@ZO4tYX"kH4gI@.BGB)7!^$Z,"hf__[`S"K"U"-hXU>YDB"5i4e(3d(PeXo9
%p/c4%2%aOHdcWol?0:[<ZAB!Ih4beq+>%lNPm&m0E(8)%i)#5.5%PeDQf@rToK4U=2]':=M0:]!&Ca"711[&P@e[&i9PCLKj&ofe
%(`<u*(\K5<@F!I^cO8%E$RX3bD(^#R(HgZd@.LDUl?])o]YNtkOFO4:Ne5sL1=X?(B-4D^]3#GK,ANIUf@$<l/N*X[@RRE1\6]jg
%:"U:p#jOD'*\tQF'2_ceLI'T+;j)o>Ck@#9dH-&$7=E<gR.GGp[5c^r</\5oeu9F_>.g_9]P@1RG3h&GS6X&oFW%ebPZgLW44'*7
%]o"1?->ZXk'=7h0<:f5r0R"mEN?"ephOi:QM,f:*18+.$UQDuI`"UBd!B"AVca[X>U(;=ZWi6l6At5=[f%)l>j4'%>e;Vug0N7S!
%,,:GYg8Bdr-`o.(1neWTh>s)IUM\`Q]06\rdl\X2^Z6Yio0nla!]OenKSF)P2$k>:ena$8T=GBKXq1m9KGYAI-8X[H@tIEoYAkY&
%@U:]SK8WVc_aLO;Vp1t\>("Apc3J)Eb1l.om_<ZV2.V-s<8BORmI038"l<O0WGfLu`VbUG8'eI)pL:_tb/U_FoN9dCjW]^Vm`J9h
%bNMCAX[7?f+kUbdY-LN=b7KFHe@>F."'AU(>fJ^a/(-(:1^![D@u);\4K$BBAAFHLgh+.],E#S])cg*Y#A:rIT%,'[1:V&=mjim)
%(NkaB4a/Z,Yi)ZW>,cQ8"NtX7iYe(u<4TH?K'f=fXA9'=0^'lCk'R(n]n1tq'-BCg5($2%lpk>#Tqa-L7BKP".a#nu90*QiD%9^:
%Ek/aA]5LVIVVG:"hs+H<9daV,6<p=!4/5K[[`0XZQfZG?q0/qq.n)n]URhg53>J4Yr4!-:[m@35>>KWFe"G=S"C9;FYFDnd(TTfZ
%%e/d"jo),QUVRGI:>7^Y::9qsmFqY%dto3u_tj1V"oEP-o)?T1LIoX8K58/h#<k_)Dfrb>l%+V\OR6[-jisI.:"Fu9C_V"-Pi^JL
%cc4(rc2/:S@@XuY_F[F^W3aIU_)\r@Vt+Pl]N[_Z-SPXnp#1"!Ze7X!&K3=+e)QZ[7WpmtB>GdDd0!:d!eX$K*Mo'eTmNXu#URk!
%?[s@=S/2>'8bl1j#GH3O&HA]O/1MJT)f6g5+jmP-KXRJ_oV,EM(`:h[Od"E+hC>:]Hk2Oj\/LcFOdC@_%;CUqi+6ekoXr<S6@)sS
%D3,"[2t"!8b+T_bV%iZW%*HP(UJ5hHo3`HY)(k@T'R^U0/#-)qRbT-C%[D!)>fQt*!4;=h@YQ3)"25"WJf.;)`%0@F"7^n4fdg!?
%d:jnRN:MG9B<jrfCHISXi%Eq?YsA!,#9smWntHe-2eSc7h1a0o*l<<H:=_9XGTRtJmb^/i]R/PD5Pog&3Kn^**fVHO/9$,K6&X]"
%kU]=I\5UM*KSI8j)D?\"-m:'C%q;%4Zima-DMQ*[MK;h6bN:W/aI)5nU'@DfADXPrVi*Nc3-HHZ/R#Idg&jl=;8Nf@!<>Pu9.`2q
%i@FEL-7!sgXmPNQ2a7NclucEQ:A1h"fR0bmCtXUcUkdO^[Z;H.g-gNP&En\tU*bLCa/V]5!aOElpg%cL4)`V1HFX*B7N+'DHe.!'
%F'J*Mlaa&LmHU6Pj?J'/GZck?=@dFs`1RX<YSEHp=Z%VU!%ol+Ns4#q#kTC\B:YCuH7ud*PIQP1'@8ZNWAln@#"n@d;?iY9VhRN)
%o[lYA&a0Un'9W&fE4G=UYP9C4Q'-jeL05EOBLZXt-lu:/a[7=["m?$,Y<hNV4V\91_2DYEc4Yp>X?fQ<=s;(s9/.$:0OTtW;^3It
%N>Rc4>AI1B6jUUI/']!kf!lBphQj^['fV!qKUZUTOD"kY3H2CeD\](0/rIRO:&M!tXGoEHX2KGGTK71g`XCd'H-JX7.rd80+9PSg
%9$+ApjLl=&i]`lLJQ3;S5iM29nYme;=rb<\[W1.0f<B[nDS2Lg%se"T'7k?=(t@.Jmj@r)@j(IlmO.gX9_p8I6;4C]"]0SU?9j33
%Ao\NX@$(bG9NYC\j#WEjLaPV*ohc\Th!/`m#V;W7L2(%N1Gp@1Hc=#<ONCZEN!9;'Kf"eG&LtF1F:C_lmPS\>,TmA?1^MM[Ne3il
%ERZL&M.9Ul;5(d.C,kJtNlG$:NnSOEd$g(a?naTlV]=g<"M_32Y+?oJkHF+;nQVKM2DK(#=aW0a`J\uLj">rI=WgFTW"bF\>4?8S
%>+CbnE01T)nl:RcYRr)`][)=EU>1XeUa1b[SC4Bo1j5>nkJ&'mSV+hI?m[(TQ]cq7qa8/L&ia\ML%#5tE7)k2ACk^Q9a,nX;j<?.
%5m/tIC>?o.PNe>Z`S%VrRu6VM"MtFpX[2L%"+65;=K:iZ(6.5\KOTPLr0#)N<e=(>bZXuf\9:Z>=gKXj8*GPBCqNrXdAD!l#AFmF
%iJ'>5=ChbQ[D=8%fE,t9UAu=S*A\sL3'-*mH,Y>eQ<@M(fnjCm@::N1m<T6K\^+2&)W`(s,LpLUS9Gc6jGBiL;toWH0bVl9A)cc"
%>i"eK_%L1\%uN@lmN9<99We^.J3jlF8Si`ie:oF_.ZHo"9fRu&!bpZV#"<'U)o7@=Ce<0?EEW>U7\g"uY-f0`UR@LgX]BX'')0=g
%=/Z20[INPB>7;b-S&/#m;)YkC!Yiq8L8"u[0d8rQ0r0i(.S2T\BIIV8AcQ77`=bT[.*Ei%MS?n)(8K<BP=GZ`feb:H`_Qm3O3u9a
%>91'(Oi;=*WL25G"=3Rr)&S^%7&Uto>efgi<Sh#-^Cq$jA2&B81tYGpd4A*jNM/#-,o1aMJH-k%dZbpZU2U(]^=KPLNKA^^P<pr"
%;nr:8"X('U!qJ2(,].aF08[Na]bI``\DOMd\_dr0`3-Ia;eh&cDV`[JXuM(>h;1#rmCf6Egcu]1rKNC_d4PjT13EYk63A`P1W5#3
%Z;nA0D(()M#udFU0T'"@i=O0P:Da9,XOmEo"3J00KZn<UdZ0B'U4V6li=(?,=<k7#/4ud]d%\b0_7GhER2$(^:GF1H2t0jfQpWL1
%$NW90p6ST*74!%,"DO"g'\5s53GGc)XOH0CW#8<-h`MPVAHqrM/4sF9<a45'3/]=MPN8X#"2XO#\@_6qH#m+H6#M;0-\0uYAU$jj
%?W-3XdbCQO`='(%.WrHdRp)$XBiXr&dodB8C#13IPE<W1V7K)]qZs)K_%.hqJ/CsJ;!>X(3cHX4T*:QSm"qHe6/!eCC_-jE.Oqm,
%WPDhnh>MFJ-FL*dB;e<-D\k#TI5HhK;NYLY.Frs^Q8SO_+kR^`@hqkm@a6C)Z*D-!1%Mgt\d-r$\H;qW+b0RZPo,DokO:$TGPY"&
%6M!E-Gb"oPSOG6F9W'O.W^Fp>ZZF#5WM2Y,L'_s#M7\"F!r3`ME>C8?H+0k!if2qn>8U-10FB?`Uk.1.rLCk/]BJ\Ba#qa_U=#m4
%dEY&VHO=[.0l76!83"R`X8R^k-0*P2ngmJRSrZF/J:P[/ipA.GLfVP620Nef0@@35O2-q[</?*W^g>)B;GsWc!=%e^f[p7\Wq?bb
%@Y:S8_ZCoN1eMPQmtHB8(>L6U!QB47O7Zb>0J2LEOHt`UUkjYN8;n\AiUQbN6&rrTp8S[N)@`uj^Rb4D8nF/5S]V<_e=;dZ:Z+PF
%nQ#+s^79-5Etuh_3UTqMIuKYA>,"m5D6=<+Aq[$]@BM@]5$42Z/?Xe<JL1p9+R[M&MBTO^6c4ib_=];-V2N5R#$M3,1u:*#0L&2m
%N,a`blE%Q6:[=0UBBuA5Aa@#+8E[%CXe!bfjePeh^%G-#q#j\XWRPj/^!E]/pGt8NF@+*SBSmN7NS^7!i>_@S_nn@UKh(IQ7cd2W
%:Sii&fs'K"0qWQ7@FE^7gYmmc4]h(m;AABZ]jnS-K6HR%Rn2ug'3m11b?0N]?glKq;[:#:d$Qk5lG,(:lhl]&0^co`NNLpZ//e*O
%.:!/gWF&9j<i\f2XsqZJ;BmE^i2f<EfFUmpJP?K6dHuYOkp(gs7iS2r=M8oLOY4Zgl?0V<!UK,oS*7R$_!(^9FmC6kBTH1U2;l"L
%1]]9!"`Q4m#2,s[pJ4Ld_k,'=2fP?&ZCau'mUS:V2DfBO^PPT?5%m7.&-hO6@Z<+2J/PCX\g7`"ggY7Efd0TeU?L6%DgPb$a%Zck
%N]';mWV8Ot<2F:XWA;"l%$ss5DB@OXHL$r)PA\su#(+#4W<1CGTVDqs*haP16W[0:KoqZ;T^nufI#88iQ-I?V^t8BC.e)PISY&ga
%m\JAUj%K;+\40N"VV[mM;0s#Zj)=#0KZ'=2?9h$^F/shB4;9<&DV89Kgq"E4,7R4k+E&5dPeW*.[M_\"61bOe+4p_j>(#)%eZW/S
%hFDn!_Q!@V24o"`LiN#jB0(N@o6l/\(RA=MC[!GJK"fLUWVH0bAj3[%Njr+\oSd@$V5@;2kHt+uMFR2/Oci')bnU,n"RaY%<Vh-G
%/4:/[6P1VW;:eiG1_!#]4GXDpX6H;)B@LbPV2AVMh5PP95pfc@90c:u>)Fe%%e"]t;qsdrC!aD]8"^S;)\T(^@Yf=I)phH)4B1q/
%OkOQXUJSAgn9F3TIeij3($BmMVgedUNGnJ9r1%oLEOX6g"'LN7Q_>\#RE)B@QOZSj?PcEigF_4$5br'q0pn7@j5rg?'"UA>p4om+
%+[I/_F(!0@PCauVBOr7e+uM?fn$D!^q'CheYr]S:Lg"P<A6ME\8C8n\M[6)<ji'#pXoCe$^TI4NhWKV&QN<Dd7KV$6asSB-7%/r(
%1djsJ]]gMJ.+-s]d1!)['9^r(%&!Yl0t,WY,+&b*o'@-*^bggMQS-]#Vmo^5aP'l)HN^]4A$iA:4nZPDCm69R4QV_%(bS6/o[u@9
%Msdu\>3FLklPfV-O-_m<(=!F+->i*d/pEm;4Q0ORd`1//HCse:+mfoBJ"Qtk(9iV>6@YfbU<fko0$YCf*\Apn7uoHMWj95"^/`jm
%U"al6C?n_.4pKc!g-^2kQ:d@iQ94DG.4d@P;aoA-pKHp`Zg5JN"b!Jm$_</q.a"_=Df)UT;,0Q*9gs?`f#u$i,?Ed_e]"7Cl.Zk[
%'&ODa?PSP\UE74k'30nHHe"(s_2V)-S691H#2+mf_g8Jj8e_'DjET=9Q-^km\'Z+/P+i_jenK9c3qY\hitY<H3S!1iPIJ!OW@"O3
%]V_.1EhJld-[#)lE[N<_:i@.Jfq<m5eW6h:$.M`qHJ&R^2Cq3pg7i"6JhQ3QB%nL6R'Ln.mB*L3f"o"[$l#BK@Ud*j1u(Yt[#+3t
%]1L@LDD"?KnAJqj3YmA$V"i_/P3P%EZps'!;WrG^YI!+WejZaYr[sXG[sia6(LHIa`Rk(Nb?*E$3#;0,JFETp;;-LXfSE?W![I)_
%WV6&7OmT'kinM3`2Doq;$6+j;LkaPi%k/m5Vf,]iLs/?,Job%/X\h0`Z;!3/Y$j&FCf(t-#E=IM\QaO+*>+X:8LdISf[a6Q,Z)Cs
%g%hGsSR@1=U_eGg)J%Lc!me'3\BNe]eflV6-Bcbhp=nG0%4r-&c4TGMhcsF.gkK2,2S;pYpt_aL]*L]JkD];Fs#'U4csI@oV]6W6
%ZOM(PBPRWl,jgB#R,GrJC#1s5NZtqA\T"j`eXIXI-?+8T!1Dg,P,13C.=r0=C#Bk6gTgDEehXbN#o]EO&o$FG44kKcN_7/GUqn0@
%*"jIrUc6lE[@M:sccR]c')%K,N]NPe!2>QCgR+'PLeZ6)<J4h<Gda[\/7M@Sa`3Gt)NZnE^t%7e8lbtp!,=J*q>ugc&;g\sWN/LN
%[jMH('?rFAhNY,i(Imd"4%<^QCQi.cD4\oJ)\RL,SYUR_IH,<b+bGM,*Bin)<oW6FYnm`1jXKkkE[Y%*R<"Z-\FR:iEi>5P=F.mP
%[#h^YAL6$)KE:]"P*DnFaCqgV30j@e&C&tM:(agc`ckoCC>Y`^G&NR&[MZ0]Z>VC5=*O4m];UuJYgrO\DSD6MYfC,+]1_&DWI:Z;
%q9/)Rf`$)qn)A!15s*--s7O)&CKL#K\)5;ts7bFLo#RF$:@)'^NPYW_CO,A:aa@U3!Ui;Gh]+5PoN/]1Lk5MK^Y4'?s8(2g5<Sk]
%O$C<@?2UnH9>Rr1s0e&+<rE7Sq0f5EA"o*]1\bnc""*E[Thj?u3]cPR3H^b^ko&KaJ,eQt^AlIHr^ji[J&=3bG2gmF.;OE(rqlSr
%^Ij8grp'!^s)%C^s38S*9q8Y_AB`_On;;dXU%DCU/hIhZP2ZF"*PjS8TSN%mDE&4cnshSp/$uY^Uh9qRpYqS@9U!cki$*J1G>Z]\
%Eaa$[Ap5tl[LK[-X:O+mgZ4H&)f2M>$BX'c$CX-PQ1jXo"_SYYN"_m^aTfG<JcC_FjE;TnAPnu!jB?^,R:RUF/P830?k\Od!6ZM_
%\.DMeZB4_+2PSG`:Si?t&Hqg-DUZAiH+nmUe?;s\5)0Kt,<NQn'-7CAY,9?_M1RqYDbl$(/.QFMOdn,DV-'e3@WR6CNe/*PLMpUH
%!ZHZrVUDpb4.DQ_E'A1c=h2"'$\SjQ4G+^HA#O)5fQ)CL7)N8J]/@]U7J,sL8'I?H"O3#m4C6s)'V=]n<5^`d2;`kaiB!)fI&V1q
%l1Q?s1K=/"a+k"S"/gP;YGJ,(L8DoJrU#A0T/0H6G9R.@E/AO5;PNcVHUQoGUD6_:KG:LI7og&7k$jS$k7II`SO8EO?M'$,T@O=,
%CLhqFm`V>VD7Q)ooV\`M7+QoZR#/Os$*_e6;VDX,"l`fAmQcp-+Hc8,8Ig]']GFn)G@4G%;a9TJ;CI0P3$a/nXSgo6J-prb@_Z-'
%JeA'8;2,=+][u1O%Xsd>@\R8Ueg"IoU-fYdEf_P_5u!t;CJU8kdN0>=jtD^^53#\-eR45?gee`i#Va`6aYB4J>rsi1G:LP&+O+/n
%!<Y*H*.s_EO[Kb9Kp_,uYpRR\ZdBO75-YqZq+d7kq@R6fNNoCbQ4?YZ%MmqfdZPacad35@XN?%f&>R)9@ZqEXO,)Q3`r_WJ*f1Cp
%roK*dN!,1N8IqHd?;D6;IC=>95Oj#:pa*OGf:d25pAcQ')7[8R+j4aYc,\n8&hQ4N6hJdL?FqEg8.!(V@mu9,AaF?gb(;VT$*b\9
%KLcMj<LH6*Qq&&@U#<@WORYZUlA<WY/7a8(i_.0h*$$KDfbH,aZD>9NENc?L(ehk@"/[aU<ogh?YkAEblBd)0Ce-qT5o>.fcNUNs
%LSY$PpSZ=pjJI'R1o;GfhGe&(Nc-$S*XFoT<V,uu@bG&j?D),ofHhNl,I+JuC:d:fXkOi&J[`$0*6j=W*5jUh5c22MkpU/+Qu<_`
%Vg:"2TESm>o#qhR@^gP*.#MHh\K\P6djYOb1F32O+,Utp-KfP*86((<A$H`8:V7JZ'gPJE;Ee,N62$@)YY</P=;t1>.F4<.<D[aG
%?jb0cWd=0j"4THE5X<7_4*M.`)!uiQln=`C775:NCYeV4@$([YFFUB$)NKSN,c1lYdGb7HFtTRp[47;o-)\alJ0Co3U);+OZ)48k
%*3D:)WuL2r1VSDjnMYs"f&^d#`[+&!+o&D]H//^_]P"u"Z)Wdt1X:='f07s$MkBc$(+6oc)2hrQU@H2*faAp,G<909>h:a7&ueW"
%E&*DZDh0/V+DZ>PV.H6[>)ohTQruhkp(.q1dH$_[5IQ7Wh[hu6((#d$eU:"`Ln#*Y/@%s3Tg+S_D=ZL#DnPrFc3e6Bq'L?a"LQ*H
%!DB(sC:lgIe3q%ihCMB%67PG<;6kA!<"%ShKPV_u7&?_"`CXneXGbJHifg8A(S+-`/4e'M>$LutX!==G$OW0-V2oO3XAp/XYB;b1
%0Hjm03CIc?Hh'r#0#$S,MdJ4l4pNch<;N@9/GLbE^q@^RmYGAdJHVghpAO>A,er3Wk$u,oXmPEpIJY3m)k+jGgic?JB\6;gTmUZ,
%SgWg[.rFSehtO&WD3*7k.lT91k+_92h=6khDYXbOXJ?sqR!tP2#k=cM%'_e1,L@.^J;,G16mNc(D4_4"$3on\$!fM:,J_h6DtITA
%KBVel(sJfu6mBb.DknC/M&.K`kFKrDROSSqe"kD#:*u`*Grn\Ll/9XCM%P"?LA)VY+qmQ7kd/!SM"FBiNYlOn7YJ.K,E0PQGp,"O
%Me=giH1Ta)J,<=bSAjDQ1&0BhNM!@LaD[F.,LB'i=Am1@jmM+EBEHrl\5*4:^!c85=Rd!!_V?od_6&@mBj3cflr7tSA6TJADG,c]
%&u689`sCWi:`#]M@*pooa.pRAI8-soMF)t"/!LcA8A%EWP^o95plT]hZ3^p@NbN.Bb"s/p>uBOTZAGT=R'M_,..ODX<!`t:pigOX
%W'5=Q,;j::@q,TH?#:D*2+5_[h?^[Z;d^Ta^^mO3B8R"mO0nsmh;pUq,Tn;1>D!.D.Z78<Rl/N],0fn[6Ek>M6t3/R$KE<D]]$H-
%(_6)2LklEKpDdfn03LKUN\2%n@Sh9W7/EMWefOPKqO'MCE:5E.j:dq.14:&r4Y>cR6.QgMea-2eGI8OK\7?Mo?1r&5PK3/,7EZ]_
%)l=HMKqj(%.GF^'D\S+E#Oolm.>+0rcp.ZI,6s.8JG`d4?;E#XFqY&1*%F?R8mrAQ)%gRV(]0KP<K)O27r=o@p&2B+>^@<i(!j2)
%+CfSd,%Fa[nS"c&i8FPYgI@!I%@YAmmuW!hA2"]IAbi@_r,QF&f]eau_rqOrHrUla0B_*fN2^3-YE/HK)=Qab)0Aa72a\08eQG]W
%Nmg.YOgIQrf[WfA7e/;rF/*(O.^i>fnq]FbQqV4+/ko&LTR4`,khJ'niBpmf(?SZ=AEkrWRl,%/itsRd%7EVOKe60J3O5i7"Ao9/
%0&,^edR;In,<iuEV)2os&me+F_g0ekRs0P\c/&2R'*mUb10_o3A8:GNg3Spehqi[WVLF,oSn.2s]&%(!e]I0?Z!4I*TVVr.^n;t0
%%V^M5nk1AnKsBRC6b7,KV`R"J@h0?28>2qognLl;n4f?sL'=b<\)EFZd6uK?5qATb+lbs/*aP*RMb7,jKhdQqKHkP/0U(]3'[1$+
%0PQnQk&Rd4/+d.N)`gAab)T,>!tLQF*%isImc7BYPhWl!dbl0PB`5K?c$?>GWHrK1]i4T!eb^Y@SY&jRmKN0`X\4]JOGl/1@;+LM
%o]U.1[GiNugj!EU,K((C-P0R+&N,\lBUO$aSR3iSjYrqD;1#>"3i#:j%(rg*#%DV"qU?k'D`'juHK2lIL,%?V;Q'4Mf7!qcgFn+D
%HIC_H'tA`g>Vi+kjn?;V:EJ<;Vuh0@4fkV_H^7+M?5fZ6fh+WTqQuo77n.6pkk&>O3/'h9a<BppW[!.X.ak+N(PX4rQ;"Eu%8hK?
%IER^hd\NZngYn4u_(p]:\P8moNX>Ce2p:F&4^RU5`OG>KWlO_nqm7ug^%qVL-1t@WGBs;P^f6@j;3.ufc0u,93aYB?^7;CuF/m9o
%Hm9oSOTu?6`[:@dBG[CT/[S?K6h=9>0F(,o8<-'`r@ZN#W7A'HgC'.3B^<cR6e%^-3pKuHk#@5e@HN$B%rp=qFuu0?\o3kX3pUeA
%=P4PXquod/nQ[fCFqR1a2nu\rh`)A2#Pa;FYl%[.9td3<o5j39^&4UcA#3UVNqQm5M^sd$!cD7S(\MIKWgh*h"eElbG#aaaK3%j@
%)ga;6@U2q]9?rjBJRZp0&M';/Q;Eg)U:;M,mmlZ".R'Qk<YO+J;5VNsk/_%.!I]2\<)LPYf;"5)S<nRs8QF)5/%UH?[hRm8o@,[o
%=OtN-%7+0tkCAuU3#>o:[pQifIDr2V=!FSfG^'%BB="Ds679BL\c%(!b\VXRn0VqhV?9b/Y@KGhTSr/MJ-"@i)\tBqe2a\cXU7e5
%oh#^:YpHi1^uC9Xh3\lp1'Ppq!1),"\n45TJf2DIq:<b[8K$S=".f]c-LCn.L)m$(8jtgM#`L52!CK;D4jD\ZHOCuc>QIT,,E_6g
%%8:<$a>B%DM9*'I%f^NbIU`7hoeXerZl4:<.MWLDB%.uNm4HTV>Jq"QS6JE,8'BDf]b%UYnsn=j2PRKTd&b[V(@Q"a+ldMjC9?"J
%\Qs=7.aN6hj2,pVA%9SFSYlq[V[\glpGS@"%i_*ZfJ#=)Dfrb>H.lYMWT$.lT%>=&BGqGu'A9/6X#+SS+uSR5Bmg#jqQbtG>6=s^
%QG`D_oI\.eDFWB:g1,J%QV']_ff5.e3F!1i4S_p(fgNMiR.D9KXc"$k4^RMTQW%0bFa7b<Sa(6qbA4-$.sJNn^JXP)J.s"5@GdYK
%':R'I%<@Y&J;7M[)ABm[1*0BKq0gc:l&sDt@Z7T)[E%q[AsIt$h.au/+,eq>]ee?gPn`mF[a&Yn\B]O3pNW*)=\`NgQ0#-MFXkS6
%/?c$(Y8kZ="p3bml5Gik,t(!?artWeL4nKZJS[I]7J;mZm4hXUd5H%S>MDPCek@^`"f26uXQ4r-Tm3]>e%C_[6n7D(Qe7BTFU(jC
%gdLn=SS(E'd,r4%^3trpJ9Raoh)lF`3ZpVo:64[%U3^N)@O'U.G*S*>U3b[5?f'hPr!IQ=.h507!tMiSQn^YFn]8^<0IUa?M36,8
%$A=\/R%]V'rJ$P],MJ4lDkrqg=CW\,_a*"kmr?604CTW\D(fFMK`*`/NoO-H,su"8K/FOj`+XP)iE"6(Hh_DKHX!O4?J*AJH-hf8
%Q2u4\13kQfFm7$tN0>e[N9\X)S)nN9MY1co]tr;.H%KYnB"1jJII;qKO#+=3n"D>mnRq_+HLFO(q5g7[6(Pk7[B$)]pD1fb)iEW%
%`O6mZZ*W.n12&!P=c*_`*%;Xd/BLfF3o71:A7\LAqH^=((7NWSk(H.!r`0VW>iGd]f&!fL,Lq1)1D(eg6o=Z?-tRu;=H9M%KE7r,
%Q=C`bP[/<hju<n2]RV%Lj>ej(=N#d,GlXRK11?`dW+p\tNA3AqYL^V%-p<aGoGY18A4ccYk8TU2q$,Gs22?[e,i@m5T@;bC42L"(
%bE<9k7'SX[pdUM,i_=+!_tio/,a\6Wpk)\3a+OtjYg-:HD=Vid?'QZ1afJ+tD+^iWG\4+9I1\dj9SU.k/<\L4;Z=)3BPb[cbtB\&
%Jm@R.C.7u7@iPK.-eJPW&qCG5QI.-DLp)mL9IB-Yk/<jInW;jflq/8i.-Tub8a+$4%8j8S'mI_ACei];[#ttL_d2fWRK5KjKO9n5
%CQ2<02urfhN6_I2Zj^;2pp1Fnhm+DZ"-6]q#3?AtBhS^WPft3XUK3kgd3hOD_:2*EYqj^[cKFa>RE3SZH:&_XH&9VMi#8=+cVmMk
%-$OBC\^T7`Y?3nZXf=XkK^pU*#M'$[n#m=9=Q$&*UG6Q3G&4[R2P5M%6"edp:1m-T+<Q$7G8EL22da9ZpPQYnCZHp/4?VE6H['f0
%^2&5lp[E7$._@j(;,W&)PU6d\,aVu`V)$1gR0E'_RW5J^Yfc_k:l'Kq/U[qZ"p-gGfBgQ.;3405"`orE-VFJNl%!"[3[r/W01*d,
%X*F]Y]CGG"6+='F,I_u567teB/kl*/i^+u69^(+ZEL=tgQVbTgFgFLb/:r]u].tX17g<Qpg\?`&FPZ(5e,kRPT>W</T:B>nIkN"X
%=BJMXB(.7J1cSE\RAc=)\;WsYlbIK9gfJIM1H5+WDXt?Y0CA;#;shos62P=5"tJM4FIXh`q5""rH-kPkIYn@n-7jV-1HJaagUlCH
%k!M)bfr9<lU/@!Oi#l6CO)>7g$krQS8h/IB=Sp`r(+D$%dij5G(l[m7dc-ZI22epm"rZa^$f0`g#iOG>#B@"N=LB@CC?Z&G(9ts%
%W#<D4C#lJ-:L$^6h'-h&+ZY&/7-BEP':h?'SZPOK4;FF%Y[-pWT76^e^V#grI)'sjO5Ko.mshq!DptNt?.qa-\j(Z<]C5dp!NU[%
%<?H+e_qk-7T"]h8]7ceufus'aMn8W,?cclorqGsOs8%N.o+`=-'_oHCX7-)XO$DFuo]*\KI/VTf*kq[=pTi_p^VO9+p^uN#q<k/1
%IQ78s%mU'hLVjWerp/PC@e=$fs8M`<49t%Hpj^0\rO^,!p^crE5=)Utrd5!,^H)5ds'ZDPs'#CO2]Ra3O8,1mlD'F=[l7ZDoq.ZB
%IlLL-,C^JqWrGf_TPdNa3Dcl%4-KTS%TSHja"$(X]k8lMa_h;m%`$1o8PFc]E:)8j!W+Wp]Zi5)rk?bQgO#6trV?I6rp_)a-R^'N
%qttp5MuWS.+27b.5CN9eJ,K;DYJ9qO_fu.HqnmVBaN+#1^OH29nu'AIIes%0PhYqfL]@21T-;$Fj+^q=iidk'Dnl;:rrY\VU"K~>
%AI9_PrivateDataEnd
